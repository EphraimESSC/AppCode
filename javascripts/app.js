var clientList=[{name:"Paul",age:"20",dateHourOfBirth:"2003-04-16T13:59",sex:"male",address:"Lisbon,\nPortugal",phone:"+493 3 345 44",email:"Paul@xyz.com",diagnoseDetais:[{diagnoseName:"Test Diagnosis 1 1",clientId:"1",date:"today"},{diagnoseName:"Test Diagnosis 2 1",clientId:"1",date:"yesterday"}]},{name:"Paul Abdul",age:"60",dateHourOfBirth:"1943-04-26T13:59",sex:"male",address:"Lisbon",phone:"+493 5363543 345 44",email:"PaulAbdul@xyz.com",diagnoseDetais:[{diagnoseName:"Test Diagnosis 1 2",clientId:"2",date:"today"},{diagnoseName:"Test Diagnosis 2 2",clientId:"2",date:"yesterday"}]},{name:"Matilda",age:"45",dateHourOfBirth:"1974-04-05T13:59",sex:"female",address:"Lisbon",phone:"+493 94932 345 44",email:"Matilda@xyz.com",diagnoseDetais:[{diagnoseName:"Test Diagnosis 1 3",clientId:"3",date:"today"},{diagnoseName:"Test Diagnosis 2 3",clientId:"3",date:"yesterday"}]}];var DataModule=function(e,f){var o={initialize:B,createAllTables:d,dropAllTables:p,getClientList:l,getColumnData:q,insertClientData:y,updateClientData:a,insertDiagnoseData:h,insertTestData:r,getDiagnoseList:g,deleteDiagnoseData:u,clearTable:n,getData:k,updateData:m,executeQuery:v,execute:t,executeAll:j,executeQuery:v,CLASSIFICATION:"classification"};var z=null,w={createClientTable:"CREATE TABLE IF NOT EXISTS CLIENT_DATA (id INTEGER PRIMARY KEY, name, age, dateHourOfBirth, sex, address, phone, email)",insertClientData:"INSERT INTO CLIENT_DATA (name, age, dateHourOfBirth, sex, address, phone, email)  VALUES (?, ?, ?, ?, ?, ?, ?)",dropClientTable:"DROP TABLE CLIENT_DATA",createDiagnoseTable:"CREATE TABLE IF NOT EXISTS DIAGNOSE_DATA (id INTEGER PRIMARY KEY, diagnoseId INTEGER, controlId, controlLabel, controlType, controlValue, classification)",insertDiagnoseData:"INSERT INTO DIAGNOSE_DATA (diagnoseId, controlId, controlLabel, controlType, controlValue)  VALUES (?, ?, ?, ?, ?)",createClassificationTable:"CREATE TABLE IF NOT EXISTS CLASSIFICATION_DATA (id INTEGER PRIMARY KEY, classificationName)",insertClassificationData:"INSERT INTO CLASSIFICATION_DATA (classificationName) VALUES (?)",createDiagnoseControlsTable:"CREATE TABLE IF NOT EXISTS DIAGNOSE_CONTROLS_DATA  (id INTEGER PRIMARY KEY, diagnoseName, diagnoseControlFile, diagnoseControlFileContent)",insertDiagnoseControsData:"INSERT INTO DIAGNOSE_CONTROLS_DATA (diagnoseName, diagnoseControlFile, diagnoseControlFileContent)VALUES (?, ?, ?)"};function B(){z=openDatabase("DataDB","1.0","Data DB",2*1024*1024,function(C){},function(C){alert("Error: DB creation : "+C.message)})}var A={clientData:{tableName:"CLIENT_DATA",queries:{createTable:"CREATE TABLE IF NOT EXISTS CLIENT_DATA (id INTEGER PRIMARY KEY, name, age, dateHourOfBirth, sex, address, phone, email)",selectData:"SELECT * FROM CLIENT_DATA",selectDataWhere:"SELECT * FROM CLIENT_DATA WHERE id=?",insertData:"INSERT INTO CLIENT_DATA (name, age, dateHourOfBirth, sex, address, phone, email) VALUES (?, ?, ?, ?, ?, ?, ?)",deleteData:"DELETE FROM CLIENT_DATA WHERE id=?",dropTable:"DROP TABLE CLIENT_DATA"}},clientDiagnoseData:{tableName:"CLIENT_DIAGNOSE_DATA",columnMapping:{id:"uniqueId","Client ID":"clientId"},queries:{createTable:"CREATE TABLE IF NOT EXISTS CLIENT_DIAGNOSE_DATA (id INTEGER PRIMARY KEY, clientId INTEGER, diagnoseIdForClient, diagnoseName, date)",selectData:"SELECT * FROM CLIENT_DIAGNOSE_DATA",selectDataWhere:"SELECT * FROM CLIENT_DIAGNOSE_DATA WHERE clientId=?",selectDataWhereId:"SELECT * FROM CLIENT_DIAGNOSE_DATA WHERE id=?",insertData:"INSERT INTO CLIENT_DIAGNOSE_DATA (clientId, diagnoseIdForClient, diagnoseName, date) VALUES (?, ?, ?, ?)",getCountWhere:"SELECT COUNT(1) FROM CLIENT_DIAGNOSE_DATA WHERE clientId=?",deleteData:"DELETE FROM CLIENT_DIAGNOSE_DATA WHERE id=?",dropTable:"DROP TABLE CLIENT_DIAGNOSE_DATA"}},diagnoseData:{tableName:"DIAGNOSE_DATA",queries:{createTable:"CREATE TABLE IF NOT EXISTS DIAGNOSE_DATA (id INTEGER PRIMARY KEY, diagnoseId INTEGER, controlId, controlLabel, controlType, controlValueLabel, controlValue, classification)",selectData:"SELECT * FROM DIAGNOSE_DATA",selectDataWhere:"SELECT * FROM DIAGNOSE_DATA WHERE diagnoseId=?",insertData:"INSERT INTO DIAGNOSE_DATA (diagnoseId, controlId, controlLabel, controlType, controlValueLabel, controlValue) VALUES (?, ?, ?, ?, ?, ?)",deleteData:"DELETE FROM DIAGNOSE_DATA WHERE diagnoseId=?",deleteDataWhere:"DELETE FROM DIAGNOSE_DATA WHERE controlId=(?||'%')",dropTable:"DROP TABLE DIAGNOSE_DATA"}},classification:{tableName:"CLASSIFICATION_DATA",queries:{createTable:"CREATE TABLE IF NOT EXISTS CLASSIFICATION_DATA (id INTEGER PRIMARY KEY, classificationName, parentClassificationId INTEGER)",selectData:"SELECT id classificationId, classificationName, parentClassificationId FROM CLASSIFICATION_DATA",insertData:" INSERT INTO CLASSIFICATION_DATA (classificationName, parentClassificationId) VALUES (?, ?) ",deleteData:"DELETE FROM CLASSIFICATION_DATA WHERE id=?",dropTable:"DROP TABLE CLASSIFICATION_DATA"}},diagnoseClassification:{tableName:"DIAGNOSE_CLASSIFICATION",queries:{createTable:"CREATE TABLE IF NOT EXISTS DIAGNOSE_CLASSIFICATION (id INTEGER PRIMARY KEY, diagnoseItemId INTEGER, classificationId INTEGER)",selectData:"SELECT * FROM DIAGNOSE_CLASSIFICATION",selectDataWhere:"SELECT * FROM DIAGNOSE_CLASSIFICATION WHERE diagnoseItemId=?",getCountWhere:"SELECT COUNT(1) FROM DIAGNOSE_CLASSIFICATION WHERE diagnoseItemId=?",insertData:"INSERT INTO DIAGNOSE_CLASSIFICATION (diagnoseItemId, classificationId) VALUES (?, ?)",deleteData:"DELETE FROM DIAGNOSE_CLASSIFICATION WHERE id=?",deleteDataWhere:"DELETE FROM DIAGNOSE_CLASSIFICATION WHERE diagnoseItemId=?",dropTable:"DROP TABLE DIAGNOSE_CLASSIFICATION"}},diagnoseControls:{tableName:"DIAGNOSE_CONTROLS_DATA",queries:{createTable:"CREATE TABLE IF NOT EXISTS DIAGNOSE_CONTROLS_DATA (id INTEGER PRIMARY KEY, tabIndex INTEGER, subTabIndex INTEGER, diagnoseName, subTabName, diagnoseControlFile, diagnoseControlFileContent, classify)",selectData:"SELECT * FROM DIAGNOSE_CONTROLS_DATA",selectDataWhere:"SELECT * FROM DIAGNOSE_CONTROLS_DATA WHERE tabIndex=?",insertData:" INSERT INTO DIAGNOSE_CONTROLS_DATA (tabIndex, subTabIndex, diagnoseName, subTabName, diagnoseControlFile, diagnoseControlFileContent, classify) VALUES (?, ?, ?, ?, ?, ?, ?) ",updateData:"UPDATE DIAGNOSE_CONTROLS_DATA set diagnoseName=?, subTabName=?, classify=? where id=?",updateFileData:"UPDATE DIAGNOSE_CONTROLS_DATA set tabIndex=?, subTabIndex=?, diagnoseName=?, subTabName=?, diagnoseControlFile=?, diagnoseControlFileContent=?, classify=? where id=?",dropTable:"DROP TABLE DIAGNOSE_CONTROLS_DATA"}},clientAppointmentsData:{tableName:"CLIENT_APPOINTMENTS_DATA",queries:{createTable:"CREATE TABLE IF NOT EXISTS CLIENT_APPOINTMENTS_DATA (id INTEGER PRIMARY KEY, clientId, date, attended)",selectData:"SELECT * FROM CLIENT_APPOINTMENTS_DATA",selectDataWhere:"SELECT * FROM CLIENT_APPOINTMENTS_DATA WHERE CLIENTID=?",insertData:"INSERT INTO CLIENT_APPOINTMENTS_DATA (clientId, date, attended) VALUES (?, ?, ?)",updateData:"UPDATE CLIENT_APPOINTMENTS_DATA set attended=? where id=?",dropTable:"DROP TABLE CLIENT_APPOINTMENTS_DATA"}}};var b={clientAppointmentsData:{tableName:"CLIENT_APPOINTMENTS_DATA",createTable:{type:"createTable","default":"CREATE TABLE IF NOT EXISTS CLIENT_APPOINTMENTS_DATA (id INTEGER PRIMARY KEY, clientId, date, attended)"},select:{type:"createTable","default":"SELECT * FROM CLIENT_APPOINTMENTS_DATA",all_where_clientid:"SELECT * FROM CLIENT_APPOINTMENTS_DATA WHERE CLIENTID=?"},insert:{type:"insert","default":"INSERT INTO CLIENT_APPOINTMENTS_DATA (clientId, date, attended) VALUES (?, ?, ?)"},update:{type:"update",attended:"UPDATE CLIENT_APPOINTMENTS_DATA set attended=? where id=?"}}};function k(D,C,E){if(C===f){C=[]}z.transaction(function(F){F.executeSql(x(D,"selectData"),[],function(J,I){var H=[];for(var G=0;G<I.rows.length;G++){H[G]=I.rows.item(G)}E.apply(this,[H])},function(G,H){alert("Error:"+H.message)})})}function t(F,E,D,G,C){if(D===f){D=[]}z.transaction(function(H){var I=x(F,E);H.executeSql(I,D,function(N,M){var L=[];for(var K=0;K<M.rows.length;K++){L[K]=M.rows.item(K)}var J={};if(M.rowsAffected>0&&C!=="delete"&&C!="update"){J.insertId=M.insertId}if(L.length>0){J.rows=L}if(G!==f){G.apply(this,[J])}},function(J,K){alert("Error:"+K.message)})})}function v(D){var G=D.tableReference,E=D.queryReference,H=D.queryParametersArray,I=D.callback,C=D.queryType;var F=[];z.transaction(function(J){for(i=0;i<H.length;i++){J.executeSql(A[G][E],H[i],function(N,M){var L=[];for(var K=0;K<M.rows.length;K++){L[K]=M.rows.item(K)}if(M.rowsAffected>0&&C!=="delete"){F.push(M.insertId)}if(L.length>0){results.rows=L}if(I!==f){I.apply(this,[F])}},function(K,L){alert("Error:"+L.message)})}},function(){},function(){})}function j(D){var G=D.tableReference,E=D.queryReference,H=D.queryParametersArray,I=D.callback,C=D.queryType;var F=[];z.transaction(function(J){for(i=0;i<H.length;i++){J.executeSql(x(G,E),H[i],function(M,L){var K=[];if(L.rowsAffected>0&&C!=="delete"){F.push(L.insertId)}if(I!==f){I.apply(this,[F])}},function(K,L){alert("Error:"+L.message)})}},function(){},function(){})}function v(D,C,E){C=C||[];z.transaction(function(F){F.executeSql(D,C,function(H,G){if(E!==f){E.apply(this,[])}},function(G,H){alert("Error:"+H.message)})})}function s(C){return A[C].tableName}function x(C,D){return A[C].queries[D]}function d(C){z.transaction(function(D){D.executeSql(x("clientData","createTable"),[],function(){if(C===f){return}C.apply(this,["Client Table created"])});D.executeSql(x("clientDiagnoseData","createTable"),[],function(){if(C===f){return}C.apply(this,["Client Diagnose Data Table created"])});D.executeSql(x("diagnoseData","createTable"),[],function(){if(C===f){return}C.apply(this,["Diagnose data Table created"])});D.executeSql(x("classification","createTable"),[],function(){if(C===f){return}C.apply(this,["Classification Table created"])});D.executeSql(x("diagnoseClassification","createTable"),[],function(){if(C===f){return}C.apply(this,["Diagnose Classification Data Table created"])});D.executeSql(x("diagnoseControls","createTable"),[],function(){if(C===f){return}C.apply(this,["Diagnose Controls Table created"])});D.executeSql(x("clientAppointmentsData","createTable"),[],function(){if(C===f){return}C.apply(this,["Client Appointments Data Table created"])})})}function p(){z.transaction(function(C){C.executeSql(x("clientData","dropTable"),[],function(){});C.executeSql(x("clientDiagnoseData","dropTable"),[],function(){});C.executeSql(x("diagnoseData","dropTable"),[],function(){});C.executeSql(x("classification","dropTable"),[],function(){});C.executeSql(x("diagnoseControls","dropTable"),[],function(){});C.executeSql(x("diagnoseClassification","dropTable"),[],function(){});C.executeSql(x("clientAppointmentsData","dropTable"),[],function(){})})}function n(C,D){z.transaction(function(E){E.executeSql("DELETE FROM "+C,[],function(){if(D===f){return}D.apply(this,["Table cleared"])})})}function l(){z.transaction(function(C){C.executeSql("SELECT * FROM CLIENT_DATA WHERE name like '%' || ? || '%'",["Paul"],function(G,F){var E=[];for(var D=0;D<F.rows.length;D++){E[D]=F.rows.item(D)}},function(D,E){alert("Error:"+E.message)})})}function u(C,E){var D="DIAGNOSE_DATA";z.transaction(function(F){F.executeSql("DELETE FROM "+D+" WHERE diagnoseId=?",[C],function(){if(E===f){return}E.apply(this,["Table cleared"])})})}function g(C,D){z.transaction(function(E){E.executeSql("SELECT * FROM DIAGNOSE_DATA WHERE diagnoseId=?",[C],function(I,H){var G=[];for(var F=0;F<H.rows.length;F++){G[F]=H.rows.item(F)}D.apply(this,[G])},function(F,G){alert("Error:"+G.message)})})}function q(E,C,F){var D=[];z.transaction(function(H){var I=null;var G=[];if(C===f||C===null||C===""){I="SELECT "+E.join(", ")+" FROM CLIENT_DATA"}else{I="SELECT "+E.join(", ")+" FROM CLIENT_DATA WHERE name like '%' || ? || '%'";G=[C]}H.executeSql(I,G,function(M,L){var K=[];for(var J=0;J<L.rows.length;J++){K[J]=L.rows.item(J)}F.apply(this,[K])},function(J,K){alert("Error:"+K.message)})});return D}function r(C,D){for(c in C){y({data:C[c],callback:D})}}function a(D){var C=D.data;z.transaction(function(E){E.executeSql("UPDATE CLIENT_DATA set name=?, age=?, dateHourOfBirth=?, sex=?, address=?, phone=?, email=? where id=?",[C.name,C.age,C.dateHourOfBirth,C.sex,C.address,C.phone,C.email,C.id],function(G,F){if(D.callback===f){return}D.callback.apply(this,["Data update in table"])},function(){console.log("error insert : "+C)})})}function m(E,D,C,F){if(C===f){C=[]}z.transaction(function(G){G.executeSql(x(E,D),C,function(I,H){if(F!==f){F.apply(this,[])}},function(H,I){alert("Error:"+I.message)})})}function y(D){var C=D.data;var E=D.callback;z.transaction(function(F){if(D.checkunique!==f&&D.checkunique===true){F.executeSql("SELECT * FROM CLIENT_DATA WHERE NAME=?  AND AGE=?AND DATEHOUROFBIRTH=?AND SEX=?AND ADDRESS=?AND PHONE=?AND EMAIL=?",[C.name,C.age,C.dateHourOfBirth,C.sex,C.address,C.phone,C.email],function(G){if(G.length<=0){F.executeSql(w.insertClientData,[C.name,C.age,C.dateHourOfBirth,C.sex,C.address,C.phone,C.email],function(I,H){console.log("success insert e : "+I);if(E===f){return}E.apply(this,[H.insertId,"Data Inserted in table"])},function(){console.log("error insert : "+C)})}},function(){console.log("error insert : "+C)})}else{F.executeSql(w.insertClientData,[C.name,C.age,C.dateHourOfBirth,C.sex,C.address,C.phone,C.email],function(H,G){if(E===f){return}E.apply(this,[G.insertId,"Data Inserted in table"])},function(){console.log("error insert : "+C)})}})}function h(C,G,E,F,D,H){z.transaction(function(I){I.executeSql(w.insertDiagnoseData,[C,G,E,F,D],function(){if(H===f){return}H.apply(this,["Data Inserted in table"])},function(J,K){console.log("error insert into diagnose : "+K.message)})})}return o}(jQuery);var FileModule=function(d,e){var b={initialize:c,readFile:a};function c(){}function a(f,g){fr=new FileReader();fr.onload=function(h){if(g===e){return}g.apply(this,[h.target.result])};fr.readAsText(f)}return b}(jQuery);var TabsModule=function(g){var r={buildTabSubTabData:c,getTabRoot:function(){return u},resetTabIndex:b,clearTabs:d,getAllTabSubtabData:t,getTabSubtabArray:function(){return p},getTabDetails:j,getTabSubtabDetails:v,getSubtabsIdArray:e,getPreviousSubtabsIdArray:function(){return w},removeTab:o,removeSubTab:q};var n=0,a,p=[],f={},s="diagnoseTab",h="diagnoseSubTab",u={type:"TabRoot",children:[]},y=[],w=[];function m(){return n++}function b(){n=0}function l(z){a=z}function x(){return a}function t(){w=y;y=[];var z="";u={type:"TabRoot",children:[]};g.each(p,function(D,C){var H=s+C.tabIndex;var G=C.tabName;var B={type:"Tabs",id:H,name:G,children:[]};if(C.subTabsArray.length>1){var F=C.subTabsArray;var E=null;var A=[];g.each(F,function(I,L){var J=L.subTabName;var K=s+L.tabIndex+h+L.subTabIndex;A.push({type:"Tabs",id:K,name:J,children:[L.controls]})});B.children=A}else{B.children.push(C.subTabsArray[0].controls)}u.children.push(B)});return u}function e(){return y}function d(){p=[];f={}}function k(A){var z=null;angular.forEach(A.children[0].children,function(B,C){if(B.type==="Content"){z=B;return false}});return z}function c(O){var C=O.tabIndex,G=O.subTabIndex,F=O.fileName,E=O.fileContent,J=O.tabName,H=O.subTabName,M=O.jsonData,z=O.insertId,L=O.classify;var D=k(M);var B=s+C;var A=h+G;var N=F.replace(".json","");controlFileName=B+A+F;var K=f[C];if(K===undefined){K={};K.tabIndex=C;f[C]=K;p.push(K)}if(K.subTabsArray===undefined){K.subTabsArray=[];K.subTabIndexer={}}var I=K.subTabIndexer[G];if(I===undefined){I={};I.insertId=z;I.tabIndex=C;I.subTabIndex=G;K.subTabIndexer[G]=I;K.subTabsArray.push(I)}I.classify=L;I.jsonData=M;I.controls=D;I.fileName=F;I.subTabName=H;K.tabName=J}function o(z){f[z]=undefined;for(i=0;i<p.length;i++){if(p[i].tabIndex===z){p.splice(i,1)}}}function q(z,A){f[z].subTabIndexer[A]=undefined;for(i=0;i<p[z].subTabsArray.length;i++){if(p[z].subTabsArray[i].tabIndex===z){p[z].subTabsArray.splice(i,1)}}}function j(z){return f[z]}function v(z,A){return f[z].subTabIndexer[A]}return r}(jQuery);var diagnoseTabCount=0;var GridBuilder=function(c,e){var a={getGridClass:d,setGridControlLabels:b};function d(g,f){if(g===null){return}var j=0;var h="";var i=g.length;c.each(g,function(k,l){if(l.type==="Block"){if(l.properties!==e){switch(l.properties.subtype){case"a":h="solo";break;case"b":h="a";break;case"c":h="b";break;case"d":h="c";break;case"e":h="d";break}}else{h="solo"}}if(k>=i/f-1){return false}});return"ui-grid-"+h}function b(j){var k=j.children,n=j.properties.rows,l=j.properties.columns||2,h=[],o=[],g=0;for(var f=0;f<n;f++){for(var m=0;m<l;m++){var i=k[g];if(i.type==="Block"){if(m===0&&i.children!==e&&i.children[0].type==="Text"){o[f]=i.children[0].properties.text}else{if(f===0&&i.children!==e&&i.children[0].type==="Text"){h[m]=i.children[0].properties.text}else{if(f===0&&i.children===e){h[m]=""}else{if(m!==0&&i.children!==e){c.each(i.children,function(p,q){if(q.type==="SelectMenu"){q.properties.options.label=o[f]+(h[m]!==e?(" : "+h[m]):"")}})}}}}g++}}}}return a}(jQuery);var ClientTabFunctionality=function(x,l){var h={initialize:w,putDiagnoseDetailsForClient:E,makeActive:q,resetTab:u,getHtmlFromDiagnoseList:A,updateDiagnoseList:v,getSelectedClient:function(){return i}};function w(){B=x("#autocomplete");b=x("#diagnoseTabHeader");L=x("#tabs");k=x("#diagnose #diagnoseId");r=x("#diagnose #diagnoseIdForClient");f=x("#clientTabHeader");H=x("#newClientArea");t=x("#client #clientId");o()}var B=null,b=null,L=null,r=null,k=null,f=null,t=null,H=null,C=false,i="";function o(){var M='input[type="text"], input[type="number"], input[type="email"], input[type="datetime-local"], textarea';H.on("keyup",M,function(){s();x(this).addClass("js-control-value-changed")});H.on("change",'select, input[type="datetime-local"]',function(){s();x(this).addClass("js-control-value-changed")});x("#newClientButton").on("click",function(){x("#newClientArea").slideDown();x("#saveClientButton").show().addClass("ui-disabled js-disabled");x("#editClientButton").hide();C=true;m()});x("#saveClientButton").on("click",function(){if(x(this).hasClass("js-disabled")){return}n()});x("#editClientButton").on("click",function(){p("enable");x("#saveClientButton").show().removeClass("ui-disabled js-disabled");x(this).hide()});x("#cancelChangesClientButton").on("click",function(){H.slideUp()});x("#clearSearchButton").on("click",function(){var N=x("#autocomplete");N.html("").listview("refresh").trigger("updatelayout")});x("#fetchAllButton").on("click",function(){y("");i=""});B.on("filterablebeforefilter",function(O,N){var P=x(N.input);y(P.val());i=""});B.on("click",".js-add-new-diagnose-button",function(){a(x(this).data("client-id"))});B.on("click",".js-delete-client-button",function(){var O=x(this).closest(".js-client-list-item");var N=O.data("id");DataModule.execute("clientData","deleteData",[N],function(){O.slideUp(1000,function(){x(this).remove()});m();H.slideUp()},"delete")});B.on("click",".js-edit-diagnose-button",function(){var O=x(this);var P=O.closest(".js-diagnose-item-container");var N=P.data("client-id");var Q=P.data("diagnose-id");k.val(Q);DiagnoseTabFunctionality.loadDiagnoseDataToHtml(N,Q);DataModule.execute("clientDiagnoseData","selectDataWhereId",[Q],function(R){r.val(R.rows[0].diagnoseIdForClient)})});B.on("click",".js-classify-diagnose-button",function(){var P=x(this).closest(".js-diagnose-item-container");var N=P.data("client-id");var R=P.data("diagnose-id");var O=x("#diagnoseList"+N+R).data("diagnose-info");FunctionalityModule.getSharedData().diagnoseItems=O;var Q=angular.element(x("#ClassificationListController")).scope();Q.$apply(function(){Q.data.diagnoseItems=O;Q.data.classlificationNames=FunctionalityModule.getAllClassificationName()});ClassifyTabFunctionality.editDiagnoseItemsCategory(N,R,O);ClassifyTabFunctionality.makeActive()});B.on("click",".js-delete-diagnose-button",function(){var Q=x(this);var O=Q.closest(".js-diagnose-item-container");var N=O.data("client-id");var P=O.data("diagnose-id");d(P,O)});B.on("click",".js-edit-client-button",function(){var N=x(this).data("client-id");C=false;var P=x("#clientSearchItem"+N).data("row-index");H.slideDown("fast");var O=B.data("rows")[P];D(O);p("enable");x("#saveClientButton").show().addClass("ui-disabled js-disabled");x("#editClientButton").hide();x.mobile.silentScroll(0)});B.on("keyup",M,function(){s(x(this).data("client-id"));x(this).addClass("js-control-value-changed")});B.on("change",'select, input[type="datetime-local"]',function(){s(x(this).data("client-id"));x(this).addClass("js-control-value-changed")});B.on("click",".js-add-appointment",function(){var N=x(this).data("client-id");c(N)});B.on("click",".js-edit-appointments",function(){var N=x(this).data("client-id");z(N)});B.on("click",".js-save-appointments",function(){var N=x(this).data("client-id");j(N)})}function c(M,O,N){O=O||x("#appointmentDate"+M).val();N=(N||"false")==="false"?false:true;if(O===""){return}DataModule.execute("clientAppointmentsData","insertData",[M,O,N],function(P){var Q='<input style="" class="js-appointment-status" type="checkbox" data-role="flipswitch" name="flip-checkbox-'+M+'" data-appointment-id="'+P.insertId+'" data-mini="true" data-on-text="Attended"'+(N?" checked ":"")+' data-off-text="Not Attended" data-wrapper-class="custom-size-flipswitch" disabled="disabled">';var R=x('<li> <span href="#" style="width: 60%; display: inline-block;">'+O+"</span> "+Q+" </li>");x("#appointmentsList"+M).append(R).listview("refresh").trigger("updatelayout").find("li input").flipswitch()})}function z(M){if(x("#appointmentsList"+M+" li").length<=0){return}x("#editAppointmentsButton"+M).hide();x('.js-appointment-status[name="flip-checkbox-'+M+'"]').flipswitch("enable");x("#saveAppointmentsButton"+M).show()}function j(M){x('.js-appointment-status[name="flip-checkbox-'+M+'"]').flipswitch("disable").each(function(Q,P){var O=x(P).data("appointment-id");var N=x(P).prop("checked");DataModule.execute("clientAppointmentsData","updateData",[N,O],function(){},"update")});x("#saveAppointmentsButton"+M).hide();x("#editAppointmentsButton"+M).show()}function g(M){DataModule.execute("clientAppointmentsData","selectDataWhere",[M],function(N){if(N.rows===l){return}x.each(N.rows,function(P,O){c(M,O.date,O.attended)})})}function n(){var M=x("#clientId").val();if(C===l||C===false){H.slideUp();x(".js-control-value-changed").each(function(N,O){x("#"+x(O).attr("id")+M).html(x(O).val()).data("current-value");x(O).removeClass("js-control-value-changed")})}K({id:M,name:x("#clientNameInput").val(),age:x("#clientAgeInput").val(),dateHourOfBirth:x("#birthdateAndHourInput").val(),sex:x("#clientGender").val(),address:x("#clientAddressInput").val(),phone:x("#clientPhoneInput").val(),email:x("#clientEmailInput").val()},function(N){x("#clientId").val(N)});p("disable");DataModule.execute("clientData","selectDataWhere",[M],function(N){var O=N.rows;B.data("rows",O)});x("#saveClientButton").hide();x("#editClientButton").show()}function d(N,M){DataModule.execute("diagnoseData","selectDataWhere",[N],function(P){var O=P.rows;if(O!==l){x.each(O,function(Q,R){DataModule.execute("diagnoseClassification","deleteDataWhere",[R.id],function(){},"delete")})}DataModule.execute("diagnoseData","deleteData",[N],function(){DataModule.execute("clientDiagnoseData","deleteData",[N],function(){M.slideUp(1000,function(){x(this).remove()})},"delete")},"delete")})}function q(){L.tabs("option","active",0);x("#mainTabHeader",L).find(".ui-btn-active").removeClass("ui-btn-active");f.addClass("ui-btn-active").removeClass("ui-disabled")}function G(){f.removeClass("ui-btn-active");f.addClass("ui-disabled")}function u(){m();B.html("")}function a(M){DataModule.execute("clientDiagnoseData","getCountWhere",[M],function(N){r.val(N.rows[0]["COUNT(1)"]+1)});DiagnoseTabFunctionality.makeActive();DiagnoseTabFunctionality.resetForm();DiagnoseTabFunctionality.setDiagnoseClientId(M)}function K(N,O){var M=N.id;if(M===""){DataModule.insertClientData({data:N,callback:function(P,Q){O.apply(this,[P])}})}else{DataModule.updateClientData({data:N,callback:function(Q,P){}})}}function p(N,M){if(M===l){M=""}x("#clientNameInput"+M).textinput(N);x("#clientAgeInput"+M).textinput(N);x("#birthdateAndHourInput"+M).textinput(N);x("#clientGender"+M).selectmenu("refresh").selectmenu(N);x("#clientAddressInput"+M).textinput(N);x("#clientPhoneInput"+M).textinput(N);x("#clientEmailInput"+M).textinput(N)}function s(M){if(M===l){M=""}x("#saveClientButton"+M).removeClass("ui-disabled js-disabled")}function m(){x("#clientId").val("");x("#clientNameInput").val("").textinput("enable");x("#clientAgeInput").val("").textinput("enable");x("#birthdateAndHourInput").val("").textinput("enable");x("#clientGender").val("").selectmenu("refresh").selectmenu("enable");x("#clientAddressInput").val("").textinput("enable");x("#clientPhoneInput").val("").textinput("enable");x("#clientEmailInput").val("").textinput("enable")}function D(M){x("#clientId").val(M.id).data("current-value",M.id);x("#clientNameInput").val(M.name).data("current-value",M.name);x("#clientAgeInput").val(M.age).data("current-value",M.age);x("#birthdateAndHourInput").val(M.dateHourOfBirth).data("current-value",M.dateHourOfBirth);x("#clientGender").val(M.sex).selectmenu("refresh").data("current-value",M.sex);x("#clientAddressInput").val(M.address).data("current-value",M.address);x("#clientPhoneInput").val(M.phone).data("current-value",M.phone);x("#clientEmailInput").val(M.email).data("current-value",M.email)}function y(M){DataModule.getColumnData(["*"],M,function(N){B.html(x.map(N,function(Q,P){var O=getHtmlFromTemplate("#collapsiblePanelForClientTemplate",{properties:{heading:Q.name,clientId:Q.id,personalData:[Q]}});return'<li id="clientSearchItem'+Q.id+'" class="js-client-list-item" data-id="'+Q.id+'" data-row-index="'+P+'"> '+O+" </li>"}).join(""));B.data("rows",N).listview("refresh").trigger("updatelayout");e();x("#defaultPage").enhanceWithin()})}function e(){x(".js-client-details",B).data("details-populated",false).collapsible().collapsible({expand:function(O,P){var N=x(this);x("li",B).not(N.closest(".js-client-list-item")).remove();var R=N.closest("li.js-client-list-item").data("row-index");var Q=B.data("rows")[R];if(N.data("details-populated")===true){return}var M=N.data("client-id");i=M;F(M);DataModule.execute("clientDiagnoseData","selectDataWhere",[M],function(S){var T=S.rows;if(T===l){return}var U=x.map(T,function(X,W){var V=J(X.id,X.diagnoseName,X.clientId);return V}).join("");N.data("details-populated",true).find(".js-diagnose-details").append(U);x.each(T,function(V,W){DataModule.execute("diagnoseData","selectDataWhere",[W.id],function(aa){var Y=aa.rows;if(Y===l){return}x.each(Y,function(ad,ae){ae.diagnoseItemId=ae.id});var Z=A(Y);var X=x("#diagnoseList"+M+W.id);X.data("diagnose-info",Y).data("client-id",M);X.append(Z).listview("refresh").trigger("updatelayout");var ac={};var ab={};I(M,W.id,Y,ac,ab)});x("#defaultPage").enhanceWithin()});x("#defaultPage").enhanceWithin()})}})}function F(M){g(M)}function E(M,P,V,S,T,R,N,U){var Q=x(".js-diagnose-details",x('.js-client-details[data-client-id="'+M+'"]'));if(T==true){var O=J(P,V,M);Q.append(O).collapsibleset().collapsibleset("refresh")}x("#diagnoseList"+M+P).data("diagnose-info",S).data("client-id",M).html("").append(A(S)).listview().listview("refresh").trigger("updatelayout");I(M,P,S,R,N);FunctionalityModule.enhancePage()}function I(M,Q,N,P,O){if(P===l){P={}}if(O===l){O={}}x.each(N,function(S,T){var R=T.id||T.diagnoseItemId;P[R]={name:T.controlLabel+" : "+T.controlValueLabel,categorised:false};DataModule.execute("diagnoseClassification","selectDataWhere",[R],function(U){var V=U.rows;if(V!==l){x.each(V,function(W,Z){var Y=Z.classificationId;var aa=FunctionalityModule.getClassificationAtId(Y);var X="unclassified";if(aa!==null){X=aa.name}if(O[Y]===l){O[Y]={className:X,diagnoseItems:[]}}O[Y].diagnoseItems.push({id:R,name:T.controlLabel+" : "+T.controlValueLabel})});P[R].categorised=true}if(S===N.length-1){v(M,Q,O,P)}})})}function v(N,S,P,R){var Q={};x.each(P,function(T,U){if(Q[T]===l){Q[T]=[];Q[T].push('<li  data-role="list-divider" style="font-weight:bold">'+U.className+"</li>")}x.each(U.diagnoseItems,function(V,W){Q[T].push("<li>"+W.name+"</li>");R[W.id].categorized=true})});var M=x("#diagnoseList"+N+S);M.html(x.map(Q,function(U,T){return U.join("")}).join(""));var O=false;x.each(R,function(T,U){if(U.categorized===true){return}if(!O){M.append('<li data-role="list-divider" style="font-weight: bold">Unclassified</li>');O=true}M.append("<li>"+U.name+"</li>")});M.listview().listview("refresh").trigger("updatelayout");FunctionalityModule.enhancePage()}function J(P,O,N){var M=getHtmlFromTemplate("#collapsiblePanelForClientDiagnoseTemplate",{properties:{heading:O,clientId:N,id:P,uniqueDiagnoseListId:"diagnoseList"+N+P,classes:FunctionalityModule.getClassificationCount()>0?"js-classify-diagnose-button":"js-classify-diagnose-button ui-disabled"}});return M}function A(M){return x.map(M,function(O,N){var P='<li data-diagnose-item-id="'+O.diagnoseItemId+'" data-diagnose-id="'+O.diagnoseId+'">'+O.controlLabel+" : "+O.controlValueLabel+"</li>";return P}).join("")}return h}(jQuery);var DiagnoseTabFunctionality=function(g,h){var m={initialize:y,resetForm:w,makeActive:q,loadDiagnoseDataToHtml:t,fetchAndSetAllDiagnoseData:b,setDiagnoseClientId:r,clearDiagnoseTabs:c,addContainerToDiagnoseTabArea:n,saveDiagnoseData:f,setDataControls:function(B){s=B}};var j=null,p=null,u=true,x=null,z=null,o=null,v=null,k=null,d=null,a=false,e=0,s=null;function y(){j=g("#diagnoseTabArea");p=g("#defaultPage");v=g("#diagnoseId");k=g("#diagnoseIdForClient");z=g("#diagnoseTabHeader");x=g("#clientTabHeader");o=g("#tabs");d=g("#diagnose #clientId");b();A()}function A(){}function r(B){d.val(B)}function f(C){var B=d.val();if(B===""){alert("Please select a client first");return}var D="Diagnose: "+k.val()+", "+(new Date()).toLocaleString();if(u==false){DataModule.deleteDiagnoseData(B)}if(u==true){DataModule.execute("clientDiagnoseData","insertData",[B,k.val(),D,(new Date()).toDateString()],function(F){var G=F.insertId;l(B,G,D,u,C)})}else{var E=v.val();l(B,E,D,u,C)}ClientTabFunctionality.makeActive();i()}function l(B,I,F,E,D){var C=[];g.each(D.SelectedControls,function(J,K){C.push({toInsert:[I,J,K.label,K.type,K.valueLabel,K.value],diagnoseDetail:{diagnoseId:I,controlLabel:K.label,controlValueLabel:K.valueLabel,controlValue:K.value},categoriesInfo:K.categoriesInfo})});var H=[];g.each(C,function(K,J){H.push(J.toInsert)});var G={};G.tableReference="diagnoseData";G.queryReference="insertData";G.queryParametersArray=H;G.callback=function(O){if(O.length<C.length){return}var J=[];var N={};var L={};var M=[];g.each(C,function(P,Q){Q.diagnoseDetail.diagnoseItemId=O[P];J.push(Q.diagnoseDetail);if(Q.categoriesInfo===h){return}g.each(Q.categoriesInfo,function(R,S){M.push([Q.diagnoseDetail.diagnoseItemId,S.classificationInsertId])})});var K={};K.tableReference="diagnoseClassification";K.queryReference="insertData";K.queryParametersArray=M;K.callback=function(P){if(P.length<M.length){return}ClientTabFunctionality.putDiagnoseDetailsForClient(B,I,F,J,E,N,L,D)};K.queryType="insert";DataModule.executeAll(K)};G.queryType="insert";DataModule.executeAll(G)}function q(){o.tabs("option","active",1);g("#mainTabHeader",o).find(".ui-btn-active").removeClass("ui-btn-active");z.addClass("ui-btn-active").removeClass("ui-disabled")}function i(){z.removeClass("ui-btn-active");z.addClass("ui-disabled")}function w(){u=true;g("[data-save-control]").each(function(C,B){var D=g(B).attr("data-save-control");switch(D){case"checkbox":case"radio":g(":checked",g(B)).each(function(E,F){g(F).prop("checked",false)});break;case"toggleSwitch":g('input[type="checkbox"]',g(B)).each(function(E,F){g(F).prop("checked",false).flipswitch("refresh")});break;case"slider":g("input",g(B)).each(function(E,F){g(F).val(g(F).attr("data-default-value")).slider("refresh")});break;case"TextInput":g("input",g(B)).each(function(E,F){g(F).val("").textinput("refresh")});break;default:g("input",g(B)).each(function(E,F){g(F).val("")});break}});p.enhanceWithin()}function t(B,C){r(B);w();u=false;DataModule.execute("diagnoseData","selectDataWhere",[C],function(D){q();var E=D.rows;if(E===h){return}g.each(E,function(F,H){var G=g("#"+H.controlId);switch(H.controlType){case"toggleSwitch":G.prop("checked",H.controlValue==="on"?true:false).flipswitch("refresh");break;case"slider":G.val(H.controlValue).slider("refresh");break;case"checkbox":case"radio":G.prop("checked",H.controlValue).checkboxradio("refresh");break;default:G.val(H.controlValue);break}});p.enhanceWithin()})}function b(B){DataModule.execute("diagnoseControls","selectData",[],function(C){var D=C.rows;if(D===h){return}var E=-1;g.each(D,function(I,J){var H=J.id;var G={tabName:J.diagnoseName,subTabName:J.subTabName,tabIndex:J.tabIndex,subTabIndex:J.subTabIndex,insertId:J.id,fileName:J.diagnoseControlFile,fileContent:J.diagnoseControlFileContent,jsonData:JSON.parse(J.diagnoseControlFileContent),classify:J.classify==="true"?true:false};if(J.tabIndex>E){E=J.tabIndex}TabsModule.buildTabSubTabData(G)});n();AddDiagnoseFromJsonFunctionality.setDiagnoseTabConfigIndex(E);var F=TabsModule.getTabSubtabArray();if(B===h||B===true){g.each(F,function(H,G){AddDiagnoseFromJsonFunctionality.addDiagnoseTabConfig(G)})}})}function n(){var B=angular.element(g("#DiagnoseController")).scope();s.sharedData.controls=TabsModule.getAllTabSubtabData();B.$apply()}function c(){g("tabs, .categories-tabs",j).each(function(C,B){var D=g(B);var E=D.data("tabs-initialized");if(E==="true"){D.tabs("destroy");D.data("tabs-initialized","false")}});g("#ControlsContainer").html("")}return m}(jQuery);var ClassifyTabFunctionality=function(e,c){var n={initialize:f,makeActive:j,editDiagnoseItemsCategory:g};var d=null,h=null,l=null,k=null;function f(){d=e("#classificationTabHeader");h=e("#tabs");l=e("#classification");k=e("#classificationTabContent");_$editClassificationList=e("#editClassificationList");b()}function b(){e("#saveClassificationChanges").on("click",function(){m()})}function m(){var p={};var q={};var o="";var r="";e(".js-diagnose-list-item",_$editClassificationList).each(function(t,u){var x=e(u);o=x.data("client-id");r=x.data("diagnose-id");var s=x.data("diagnose-item-id");var w=x.data("diagnose-item-name");var v=e("#diagnoseList"+o+r).find('li[data-diagnose-item-id="'+s+'"]');q[s]={name:w,categorized:false};e(".js-diagnose-classification-item:checked",x).each(function(y,B){var A=e(B).data("class-id");var z=e(B).data("class-name");if(p[A]===c){p[A]={className:z,diagnoseItems:[]}}p[A].diagnoseItems.push({id:s,name:w})});DataModule.execute("diagnoseClassification","deleteDataWhere",[s],function(){e(".js-diagnose-classification-item:checked",x).each(function(y,A){var z=e(A).data("class-id");DataModule.execute("diagnoseClassification","insertData",[s,z],function(){})})},"delete")});ClientTabFunctionality.updateDiagnoseList(o,r,p,q);ClientTabFunctionality.makeActive();i()}function j(){h.tabs("option","active",2);e("#mainTabHeader",h).find(".ui-btn-active").removeClass("ui-btn-active");d.addClass("ui-btn-active").removeClass("ui-disabled")}function i(){d.removeClass("ui-btn-active").addClass("ui-disabled")}function g(o,r,p){e.each(p,function(s,t){t.id=t.diagnoseItemId});var q=a(o,p);_$editClassificationList.html("").append(q);e.each(p,function(s,t){DataModule.execute("diagnoseClassification","selectDataWhere",[t.id],function(u){var v=u.rows;if(v===c){return}e.each(v,function(w,y){var x=e('[data-diagnose-item-id="'+t.id+'"]');e(".js-diagnose-classification-item[data-class-id="+y.classificationId+"]",x).prop("checked",true);_$editClassificationList.find(".js-diagnose-list-item").collapsible().collapsible("refresh").trigger("updatelayout");_$editClassificationList.find(".js-diagnose-classification-item").checkboxradio().checkboxradio("refresh");FunctionalityModule.enhancePage()})})});_$editClassificationList.find(".js-diagnose-list-item").collapsible().collapsible("refresh").trigger("updatelayout");_$editClassificationList.find(".js-diagnose-classification-item").checkboxradio().checkboxradio("refresh");FunctionalityModule.enhancePage()}function a(o,p){return e.map(p,function(s,r){var q={properties:{heading:s.controlLabel+" : "+s.controlValueLabel,diagnoseId:s.diagnoseId,diagnoseItemId:s.id,clientId:o,children:FunctionalityModule.getAllClassificationName()}};var t=getHtmlFromTemplate("#collapsibleListItemInClientDiagnoseTemplate",q);return t}).join("")}return n}(jQuery);var ConfigTabFunctionality=function(d,e){var i={initialize:u,resetForm:t};function u(){s();p()}var k=null,j=null,c=null,m='<a class="js-delete-classification ui-shadow ui-btn ui-icon-delete ui-btn-inline" data-iconpos="right">Delete</a>';function s(){k=d("#diagnoseConfig");j=d("#allClassificationNames");c=d("#classificationName");AddDiagnoseFromJsonFunctionality.initialize();f()}function f(){DataModule.execute("classification","selectData",[],function(v){var w=v.rows;if(w===e){return}d.each(w,function(x,y){a(y.id,y.classificationName)});j.listview("refresh").trigger("updatelayout");FunctionalityModule.enhancePage()})}function p(){d(function(){d("#dropDBStructureButton").on("click",function(){DataModule.dropAllTables();t();ClientTabFunctionality.resetTab()});d("#loadTestClientDataButton").on("click",function(){DataModule.insertTestData(clientList,n)});d("#createDBButton").on("click",function(){DataModule.createAllTables(n)});d("#dbExportDataButton").on("click",function(){var v=q()})})}function a(w,v){FunctionalityModule.addClassificationName(w,v)}function r(x,w){if(w){x+=1462}var y=Date.parse(x);return(y-new Date(Date.UTC(1899,11,30)))/(24*60*60*1000)}function g(B,A){var w={};var x={s:{c:10000000,r:10000000},e:{c:0,r:0}};for(var z=0;z!=B.length;++z){for(var D=0;D!=B[z].length;++D){if(x.s.r>z){x.s.r=z}if(x.s.c>D){x.s.c=D}if(x.e.r<z){x.e.r=z}if(x.e.c<D){x.e.c=D}var v={v:B[z][D]};if(v.v==null){continue}var y=XLSX.utils.encode_cell({c:D,r:z});if(typeof v.v==="number"){v.t="n"}else{if(typeof v.v==="boolean"){v.t="b"}else{if(v.v instanceof Date){v.t="n";v.z=XLSX.SSF._table[14];v.v=r(v.v)}else{v.t="s"}}}w[y]=v}}if(x.s.c<10000000){w["!ref"]=XLSX.utils.encode_range(x)}return w}var h="Sheet";function o(){if(!(this instanceof o)){return new o()}this.SheetNames=[];this.Sheets={}}function l(y){var w=new ArrayBuffer(y.length);var v=new Uint8Array(w);for(var x=0;x!=y.length;++x){v[x]=y.charCodeAt(x)&255}return w}function q(){DataModule.execute("clientData","selectData",[],function(A){var F={"ClientData.csv":{data:"Client Id, Client Name\n",type:"text/csv"}};var x=new o();var w="ClientData.csv";var y=A.rows;var E={};var D={s:{c:10000000,r:10000000},e:{c:0,r:0}};for(var z=0;z!=y.length;++z){var v=0;d.each(y[z],function(G,I){if(D.s.r>z){D.s.r=z}if(D.s.c>v){D.s.c=v}if(D.e.r<z){D.e.r=z}if(D.e.c<v){D.e.c=v}var C={v:y[z][G]};if(C.v==null){return}var H=XLSX.utils.encode_cell({c:v,r:z});if(typeof C.v==="number"){C.t="n"}else{if(typeof C.v==="boolean"){C.t="b"}else{if(C.v instanceof Date){C.t="n";C.z=XLSX.SSF._table[14];C.v=r(C.v)}else{C.t="s"}}}E[H]=C;v++})}if(D.s.c<10000000){E["!ref"]=XLSX.utils.encode_range(D)}x.SheetNames.push(h);x.Sheets[h]=E;var B=XLSX.write(x,{bookType:"xlsx",bookSST:true,type:"binary"});saveAs(new Blob([l(B)],{type:"application/octet-stream"}),"ClientData.xlsx");return E})}function b(){DataModule.execute("clientData","selectData",[],function(A){var x={"ClientData.csv":{data:"Client Id, Client Name\n",type:"text/csv"}};var w="ClientData.csv";var z=",";d.each(A.rows,function(D,E){var F="";F+=E.id;F+=z;F+=E.name;F+=z;F+=E.age;F+=z;F+=E.dateHourOfBirth;F+=z;F+=E.sex;F+=z;F+=E.address.replace("\n","").replace(","," ");F+=z;F+=E.phone;F+=z;F+=E.email;F+="\n";x[w].data+=F});var y=new File([x[w].data],w,{type:x[w].type,lastModified:Date.now()});var v=URL.createObjectURL(y,{oneTimeOnly:true});var B=document.createElement("a");B.href=v;B.download=w;B.textContent=w;var C=document.createElement("li");C.appendChild(B);d("#dbSection #filesForDownload").append(C)})}function t(){d("ul",k).html("");j.html("")}function n(v){d("#configEventsMessages").show().find("ul").append('<li class="ui-icon-home">'+v+"</li>").listview("refresh").trigger("updatelayout");setTimeout(function(){d("#configEventsMessages").fadeOut(1000,function(){d(this).find("ul").html("")})},2000)}return i}(jQuery);var ClassifyTabFunctionality=function(e,c){var n={initialize:f,makeActive:j,editDiagnoseItemsCategory:g};var d=null,h=null,l=null,k=null;function f(){d=e("#classificationTabHeader");h=e("#tabs");l=e("#classification");k=e("#classificationTabContent");_$editClassificationList=e("#editClassificationList");b()}function b(){e("#saveClassificationChanges").on("click",function(){m()})}function m(){var p={};var q={};var o="";var r="";e(".js-diagnose-list-item",_$editClassificationList).each(function(t,u){var x=e(u);o=x.data("client-id");r=x.data("diagnose-id");var s=x.data("diagnose-item-id");var w=x.data("diagnose-item-name");var v=e("#diagnoseList"+o+r).find('li[data-diagnose-item-id="'+s+'"]');q[s]={name:w,categorized:false};e(".js-diagnose-classification-item:checked",x).each(function(y,B){var A=e(B).data("class-id");var z=e(B).data("class-name");if(p[A]===c){p[A]={className:z,diagnoseItems:[]}}p[A].diagnoseItems.push({id:s,name:w})});DataModule.execute("diagnoseClassification","deleteDataWhere",[s],function(){e(".js-diagnose-classification-item:checked",x).each(function(y,A){var z=e(A).data("class-id");DataModule.execute("diagnoseClassification","insertData",[s,z],function(){})})},"delete")});ClientTabFunctionality.updateDiagnoseList(o,r,p,q);ClientTabFunctionality.makeActive();i()}function j(){h.tabs("option","active",2);e("#mainTabHeader",h).find(".ui-btn-active").removeClass("ui-btn-active");d.addClass("ui-btn-active").removeClass("ui-disabled")}function i(){d.removeClass("ui-btn-active").addClass("ui-disabled")}function g(o,r,p){e.each(p,function(s,t){t.id=t.diagnoseItemId});var q=a(o,p);_$editClassificationList.html("").append(q);e.each(p,function(s,t){DataModule.execute("diagnoseClassification","selectDataWhere",[t.id],function(u){var v=u.rows;if(v===c){return}e.each(v,function(w,y){var x=e('[data-diagnose-item-id="'+t.id+'"]');e(".js-diagnose-classification-item[data-class-id="+y.classificationId+"]",x).prop("checked",true);_$editClassificationList.find(".js-diagnose-list-item").collapsible().collapsible("refresh").trigger("updatelayout");_$editClassificationList.find(".js-diagnose-classification-item").checkboxradio().checkboxradio("refresh");FunctionalityModule.enhancePage()})})});_$editClassificationList.find(".js-diagnose-list-item").collapsible().collapsible("refresh").trigger("updatelayout");_$editClassificationList.find(".js-diagnose-classification-item").checkboxradio().checkboxradio("refresh");FunctionalityModule.enhancePage()}function a(o,p){return e.map(p,function(s,r){var q={properties:{heading:s.controlLabel+" : "+s.controlValueLabel,diagnoseId:s.diagnoseId,diagnoseItemId:s.id,clientId:o,children:FunctionalityModule.getAllClassificationName()}};var t=getHtmlFromTemplate("#collapsibleListItemInClientDiagnoseTemplate",q);return t}).join("")}return n}(jQuery);var AddDiagnoseFromJsonFunctionality=function(e,b){var o={initialize:f,addDiagnoseTabConfig:n,setDataControls:function(q){h=q},setDiagnoseTabConfigIndex:function(q){l=q}};var g=null,l=-1,h=null,c=[];function f(){i();a()}function i(){g=e("#diagnoseConfig")}function a(){g.on("click",".js-save-button",function(){var s=e(this).closest(".js-new-diagnose-container");var r=s.data("diagnose-tab-config-index");var q=s.find(".js-diagnose-name").val();k(r,q)});g.on("change",".js-diagnose-file",function(u){var t=e(this);var r=t[0].files[0];if(r!==b){var w=t[0].files[0].name;var q=t.data("diagnose-tab-config-index");var s=t.data("diagnose-tab-subtabfile-index");var v='.js-diagnose-file-name[data-diagnose-tab-config-index="'+q+'"][data-diagnose-tab-subtabfile-index="'+s+'"]';if(e(v).val()===""){e(v).val(w.replace(".json",""))}}});g.on("click",".js-delete-button",function(){var s=ClientTabFunctionality.getSelectedClient();var r=e(this);var q=r.data("diagnose-tab-config-index");DataModule.execute("diagnoseControls","selectDataWhere",[q],function(t){var u=t.rows;if(u===b){return}e.each(u,function(v,w){DataModule.execute("diagnoseData","deleteDataWhere",["diagnoseTab"+w.tabIndex+"diagnoseSubTab"+w.subTabIndex],function(){})})});DataModule.executeQuery("DELETE FROM DIAGNOSE_CONTROLS_DATA WHERE tabIndex=?",[q],function(){r.closest(".js-tab-details-container").slideUp(1000,function(){e(this).remove()});if(s!==""){}TabsModule.removeTab(q);DiagnoseTabFunctionality.clearDiagnoseTabs();DiagnoseTabFunctionality.fetchAndSetAllDiagnoseData(false)})});g.on("click",".js-add-subtab-button",function(){var q=e(this).data("diagnose-tab-config-index");j(q)});e("#addDiagnoseTabButton").on("click",function(){n()})}function n(r){if(r===b){r={tabIndex:++l};var q=[{tabIndex:r.tabIndex,subTabIndex:0,isNewDiagnoseFile:true}];r.subTabsArray=q}else{l=r.tabIndex}if(c[r.tabIndex]===b){c[r.tabIndex]=[];e.each(r.subTabsArray,function(s,t){if(c[r.tabIndex].indexOf(t.subTabIndex)===-1){c[r.tabIndex].push(t.subTabIndex)}})}e("#diagnoseConfig ul").append(getHtmlFromTemplate("#configEntryItemTemplate",r));FunctionalityModule.enhancePage();e.each(r.subTabsArray,function(t,v){var s='[data-diagnose-tab-config-index="'+v.tabIndex+'"][data-diagnose-tab-subtabfile-index="'+v.subTabIndex+'"]';var u=".categorize-subtab-flipswitch"+s;e(u).prop("checked",v.classify).flipswitch("refresh")})}function j(r){e("#newDiagnoseContainer"+r).data("has-subtabs",true);var t=c[r];var q=Math.max.apply(null,t);q++;t.push(q);var s=getHtmlFromTemplate("#configEntryFileInputTemplate",{tabIndex:r,subTabIndex:q,isNewDiagnoseFile:true});e("#diagnoseControlsFilesContainer"+r).append(s);FunctionalityModule.enhancePage()}function k(r,q){e.each(c[r],function(s,t){p(r,q,t)})}function p(B,D,v){var C='[data-diagnose-tab-config-index="'+B+'"][data-diagnose-tab-subtabfile-index="'+v+'"]';var r='.js-diagnose-file[type="file"]'+C;var t=e(r)[0].files[0];var A=".categorize-subtab-flipswitch"+C;var z=e(A).prop("checked");var s=".js-subtab"+C;var y=e(s),q=y.data("insert-id");var q=y.data("insert-id");var u=".js-diagnose-file-name"+C;var w=e(u).val();var x=y.data("is-new-diagnose-file");if(q!==b&&q!==""&&t===b){m(B,v,D,w,z,q)}if(t===b){return}FileModule.readFile(t,function(E){if(x){DataModule.execute("diagnoseControls","insertData",[B,v,D,w,t.name,E,z],function(G){var F=G.insertId;y.data("insert-id",F);d({diagnoseSectionName:D,subTabName:w,tabIndex:B,insertId:F,subTabIndex:v,action:"insert",fileName:t.name,fileContent:E,classify:z})})}else{DataModule.execute("diagnoseControls","updateFileData",[B,v,D,w,t.name,E,z,q],function(F){d({diagnoseSectionName:D,subTabName:w,tabIndex:B,insertId:q,subTabIndex:v,action:"update",fileName:t.name,fileContent:E,classify:z})},"update")}});if(x===true){y.data("is-new-diagnose-file",false)}}function m(r,v,q,s,u,t){DataModule.execute("diagnoseControls","updateData",[q,s,u,t],function(){d({diagnoseSectionName:q,subTabName:s,tabIndex:r,subTabIndex:v,classify:u,action:"update"})},"update")}function d(D){var C=D.diagnoseSectionName,w=D.subTabName,r=D.tabIndex,t=D.action,q=D.insertId,v=D.subTabIndex,s=D.fileContent,u=D.fileName,A=D.classify,B=null;if(t==="update"){var z=TabsModule.getTabDetails(r);var y=TabsModule.getTabSubtabDetails(r,v);z.tabName=C;if(u!==b&&u!==""){y.fileName=u}else{if(u===b||u===""){u=y.fileName}}if(s===b){B=y.jsonData}else{B=JSON.parse(s);y.jsonData=B}}if(t==="insert"){if(s!==b){B=JSON.parse(s)}}var x={tabName:C,subTabName:w,tabIndex:r,subTabIndex:v,insertId:q,fileName:u,fileContent:s,jsonData:B,classify:A};TabsModule.buildTabSubTabData(x);DiagnoseTabFunctionality.clearDiagnoseTabs();DiagnoseTabFunctionality.addContainerToDiagnoseTabArea()}return o}(jQuery);
var FunctionalityModule = function ($, ClientTabFunctionality, DataModule, FileModule, TabsModule, undefined) {
  var self = {
    initialize: _initialize,
    enhancePage: _enhancePage,
    addClassificationName: _addClassificationName,
    getClassificationNameAt: _getClassificationNameAt,
    getAllClassificationName: _getAllClassificationName,
    getClassificationCount: _getClassificationCount,
    getClassificationAtId: _getClassificationAtId,
    getSharedData: function () { return _sharedData; },
    setSharedData: function (s) { _sharedData = s; },
  };

  var _$classificationTabs = null,
      _$diagnoseConfig = null,
      _$defaultPage = null,
      _classificationTabsHtml = null,
      _tabTemplate = "<li><a href='#{href}'>#{label}</a></li>",
      _classificationTabCounter = 0,
      _classificationNames = [],
      _classificationIndexer = {},
      _sharedData = null;


  function _initialize() {

    $.each(tabsControls.children, function(i, tabControl) {
      if ($('[href="#' + tabControl.properties.id + '"]').length <= 0) {
        tabControlsToAdd.children.push(tabControl);
      }
    });

    $('#tabs [data-role="navbar"] ul').append(getHtmlFromTemplate("#tabItemTemplate",
                                                                  tabControlsToAdd.children));

    $mainTabContainer = $('#diagnoseTabArea');

    $('#defaultPage').enhanceWithin();
    $('#tabs').tabs();

    _$defaultPage = $('#defaultPage');
    _$classificationTabs = $("#classificationTabs");

    _classificationTabsHtml = _$classificationTabs.html();
    _classificationTabCounter = _$classificationTabs.find("#tabHeader li").length;
    _$classificationTabs.tabs();

    ClientTabFunctionality.initialize();
    ClassifyTabFunctionality.initialize();
    DiagnoseTabFunctionality.initialize();
    ConfigTabFunctionality.initialize();

    _bindUIEvents();
  }

  function _enhancePage() {
    if (_$defaultPage === null) return;
    _$defaultPage.enhanceWithin();
  }

  // addTab function: adds new tab
  function addTab(tabTitle) {
    _$classificationTabs.tabs("destroy");
    _$classificationTabs.html(_classificationTabsHtml);

    var label = tabTitle || "Tab " + _classificationTabCounter,
      id = "tabs-" + _classificationTabCounter,
      li = $( _tabTemplate.replace( /#\{href\}/g, "#" + id ).replace( /#\{label\}/g, label ) ),
      tabContentHtml = "<ul id='" + id + "' class='tablist-content' data-role='listview' data-inset='true'>No diagnose items in " + label + "</li>";

    _$classificationTabs.find( ".ui-tabs-nav" ).append( li );
    _$classificationTabs.append(tabContentHtml);
    _classificationTabsHtml = _$classificationTabs.html();
    _$classificationTabs.tabs().tabs("refresh").tabs("option", "active", _classificationTabCounter);;
    _classificationTabCounter++;
  }

  function _bindUIEvents() {

    $('#diagnoseTabArea').on('change', 'input', function () {
      var clientId = $('#clientId').val();
      if (clientId !== "") {
        $('#saveDiagnoseChanges').removeClass('ui-disabled');
      }
    });
  }

  function _loadDiagnoseList(clientId, callback) {
    DataModule.getDiagnoseList(clientId, callback);
  }

  function _addClassificationName(id, classificationName) {

    var classification = {
      "id" : id,
      "name" : classificationName
    };
    _classificationNames.push(classification);
    _classificationIndexer[id] = classification;
  }

  function _getClassificationNameAt(index) {
    return _classificationNames[index];
  }

  function _getClassificationAtId(id) {
    var classData = _traverseClassificationData(_sharedData.classificationData, id);

    if (classData === null) return null;

    return classData.data;
  }

  function _traverseClassificationData(classificationData, id) {
    var classDetailsReturn = null;
    for (classDetails of classificationData) {
      if (classDetails.data.classificationInsertId === id) {
        classDetailsReturn = classDetails;
        break;
      }

      if (classDetails.categorieschildren !== undefined) {
        classDetailsReturn = _traverseClassificationData(classDetails.categorieschildren, id);
        if (classDetailsReturn !== null) {
          break;
        }
      }
    };
    return classDetailsReturn;
  }

  function _getAllClassificationName() {
    return _classificationNames;
  }

  function _getClassificationCount() {
    return _classificationNames.length;
  }

  return self;

} (jQuery, ClientTabFunctionality, DataModule, FileModule, TabsModule);

var controlFileName="";var templateItemCount=0;var firstId="";var toggleSwitchCounter=0;var idManager={};$.addTemplateFormatter({logValue:function(b,a){console.log(b);return b},prependChars:function(b,a){if(b===undefined){return}return a+b},controlType:function(b,a){switch(b){case"TextInput":return"text";case"datetime-local":return"datetime-local";default:return"text"}},getUniqueProperty:function(d,c){var a=controlFileName.split("/");var b=a[a.length-1];b=b.replace(".","");if(d===undefined&&c==="toggleSwitch"){toggleSwitchCounter++;for(i=toggleSwitchCounter;i<200;i++){if($("#"+b+c+i).length<=0){toggleSwitchCounter=i;break}}d=c+toggleSwitchCounter}else{if(d===undefined){if(idManager[c]===undefined){idManager[c]=0}else{idManager[c]+=1}for(i=idManager[c];i<200;i++){if($("#"+b+c+i).length<=0){idManager[c]=i;break}}d=c+idManager[c]}}return b+d},getFirstName:function(a){if(templateItemCount===0){firstId=a}templateItemCount++;return firstId}});var defaultTabsControls={children:[{type:"tab",properties:{heading:"Diagnose",id:"diagnose",appendToId:"diagnoseTabArea"},controlsFiles:[],tabType:"diagnose",convertAccordionToTab:false}]};function getHtmlFromTemplate(a,c){if(a===""){return""}$("#htmlContent").loadTemplate(a,c,{ignoreUndefined:true,ignoreNull:true,ignoreEmptyString:true});var b=$("#htmlContent").html();$("#htmlContent").html("");templateItemCount=0;return b}function getTemplateFromType(b){var a;switch(b){case"Button":a="#buttonTmpl";break;case"List":a="#listViewTemplate";break;case"ListItem":a="#listItemTemplate";break;case"SelectMenu":a="#dropdownTemplate";break;case"Collapsible":a="#collapsiblePanelTemplate";break;case"TextInput":case"datetime-local":a="#inputTemplate";break;case"Div":a="#divTemplate";break;case"Accordion":a="#tabTemplate";break;case"RadioGroup":case"CheckboxGroup":case"Checkbox":case"RadioButton":case"Slider":case"ToggleSwitch":case"Text":case"Grid":case"Block":a="#"+b+"Template";break;default:return""}return a}var textControlText="";function buildHTML(c){var b=c.controls,e=c.sameTypeControls,d=c.parentControl;var a="";if(e===true){var f=b[0].type;return getHtmlFromTemplate(getTemplateFromType(f),b)}$.each(b,function(l,k){var m={},g=null,h=null,j,o,n;$.each(k,function(s,r){if(s==="children"){g=r;if(k.type==="RadioGroup"||k.type==="CheckboxGroup"){$.each(g,function(t,u){if(k.properties!==undefined&&k.properties.legend!==undefined){u.properties.legend=k.properties.legend}else{if(d!=undefined&&d.properties!==undefined&&d.properties.heading!==undefined){u.properties.legend=d.properties.heading}else{if(k.properties!==undefined&&k.properties.heading!==undefined){u.properties.legend=k.properties.heading}else{if(k.type!==undefined){u.properties.legend=k.type}}}}})}}else{m[s]=r}});if(k.type==="Text"){textControlText=k.properties.text}if(k.type==="ToggleSwitch"){k.properties.text=textControlText;textControlText=""}if(k.type==="Grid"){var q=k.properties&&k.properties.rows?k.properties.rows:1;if(k.properties===undefined){k.properties={}}k.properties.uiClass=GridBuilder.getGridClass(g,q);GridBuilder.setGridControlLabels(k);if(m.properties===undefined){m.properties={}}m.properties.uiClass=k.properties.uiClass}var j=getHtmlFromTemplate(getTemplateFromType(k.type),m);if(g!==null){o=$(j);var p=null;if(k.type==="RadioGroup"){p={controls:g,parentControl:k,sameTypeControls:true}}else{p={controls:g,parentControl:k}}o.append(buildHTML(p));if(o.length>0){a+=o[0].outerHTML}}else{a+=j}});return a}var tabsControls=defaultTabsControls;var tabControlsToAdd={};tabControlsToAdd.children=[];$(function(){FunctionalityModule&&FunctionalityModule.initialize()});DataModule.initialize();DataModule.createAllTables();
