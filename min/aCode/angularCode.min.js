(function () {
  'use strict';
  angular.module('myapp', []);
})();
(function(){var a=function(){return{RadioGroupCount:0,SliderCount:0,SelectMenuCount:0,TextLabel:"",SelectedControls:{},ClassificationDataAdded:[],tabHierarchyHeadings:"",sharedData:{controls:{},classificationData:[],ControlCategoriesInfo:[],RecentlySelectedControlDetails:undefined}}};angular.module("myapp").factory("Data",[a])})();(function(){var a=function(c,d,e){c.data={};c.sharedData=d.sharedData;c.saveClassificationInfo=function(){console.log(c.data.diagnoseItems);var g=_.pluck(c.data.diagnoseItems,"diagnoseItemId");console.log(g);var f=_.map(c.data.diagnoseItems,function(h){return{diagnoseDetail:h}});e.deleteDiagnoseClassificationInfo(g).then(function(h){ClientTabFunctionality.insertCategorizationInfo(f,g,c.data.clientId,c.data.diagnoseId,c.data.diagnoseName,false,d.sharedData.classificationData);ClientTabFunctionality.makeActive()})}};angular.module("myapp").controller("ClassificationListController",["$scope","Data","UpdateDiagnoseClassificationService",a]).service("UpdateDiagnoseClassificationService",b);b.$inject=["$q"];function b(d){var c={};c.deleteDiagnoseClassificationInfo=function(g){var f=d.defer();var e={};e.deferred=f;e.tableReference="diagnoseClassification";e.queryReference="deleteDataWhere";e.queryParametersArray=_.map(g,function(h){return[h]});e.queryType="delete";e.callback=function(){console.log("callback")};e.deferred=f;DataModule.executeAll(e);return f.promise};return c}})();(function(){var a=function(b,c){b.sharedData=c.sharedData;b.showRestartSection=false;DataModule.execute("classification","selectData",[],function(d){var f=d.rows;if(f===undefined){return}var e={};angular.forEach(f,function(h,g){if(h.parentClassificationId===null){if(e[h.classificationId]==undefined){var i={data:{classificationInsertId:h.classificationId,id:h.classificationId,name:h.classificationName,value:false},subCategoryInput:"",categorieschildren:[]};e[h.classificationId]=i}}else{if(e[h.parentClassificationId]!==undefined){e[h.parentClassificationId].categorieschildren.push({data:{classificationInsertId:h.classificationId,id:""+h.parentClassificationId+h.classificationId,name:h.classificationName,value:false},subCategoryInput:""})}}});angular.forEach(e,function(g,h){c.sharedData.classificationData.push(g)});b.$apply()});b.restartApplication=function(){$("[data-url]").remove();window.location.reload()};b.addClassification=function(){if(b.inputClassificationName===undefined||b.inputClassificationName===""){return}DataModule.execute("classification","insertData",[b.inputClassificationName,null],function(d){c.sharedData.classificationData.push({data:{id:d.insertId,name:b.inputClassificationName,value:false},name:"",categorieschildren:[]});b.inputClassificationName="";b.$apply();FunctionalityModule.enhancePage();$(".js-classify-diagnose-button").removeClass("ui-disabled")});b.showRestartSection=true};b.addSubClassification=function(f,e){var d=c.sharedData.classificationData[e].subCategoryInput;if(d===undefined||d===""){return}DataModule.execute("classification","insertData",[d,f],function(g){var h=g.insertId;c.sharedData.classificationData[e].categorieschildren.push({data:{name:d,id:h,value:false}});c.sharedData.classificationData[e].subCategoryInput="";b.$apply()});b.showRestartSection=true};b.deleteClassification=function(e,d){DataModule.execute("classification","deleteData",[e],function(){c.sharedData.classificationData.splice(d,1);b.$apply()},"delete");b.showRestartSection=true};b.deleteSubCategory=function(f,g){var e=b.sharedData.classificationData.map(function(j,h){if(j.id===g){return h}}).filter(isFinite)[0];var d=c.sharedData.classificationData[e].categorieschildren.map(function(j,h){if(j.subCategoryInsertId===f){return h}}).filter(isFinite)[0];DataModule.execute("classification","deleteData",[f],function(){c.sharedData.classificationData[e].categorieschildren.splice(d,1);b.$apply()},"delete");b.showRestartSection=true}};angular.module("myapp").controller("ConfigureClassificationController",["$scope","Data",a])})();(function(){var a=function(b,d,c){b.sharedData=d.sharedData;b.$watch("sharedData.RecentlySelectedControlDetails",function(f,e){if(f!==undefined&&f!==e){var h=$("#categoriesSection");h.html("");var g='<categories categorieschildren="sharedData.RecentlySelectedControlDetails.categoriesInfo"template-name="\'CategoriesButtonsStems\'"></categories>';var i=angular.element(g);c(i)(b);h.append(i)}})};angular.module("myapp").controller("PanelController",["$scope","Data","$compile",a])})();(function(){var a=function(b,d,c){b.SelectedControls=c.SelectedControls;b.sharedData=c.sharedData;b.ClassificationDataAdded=c.ClassificationDataAdded;FunctionalityModule.setSharedData(c.sharedData);DiagnoseTabFunctionality.setDataControls(c);b.$watch("sharedData.controls",function(g,f){if(g===f){return}var h=d('<r controls="sharedData.controls"></r>')(b);var i=angular.element(document.getElementById("ControlsContainer"));i.append(h)});b.$watch("sharedData.classificationData",function(f,e){angular.forEach(c.ClassificationDataAdded,function(h,j){var g=angular.copy(c.sharedData.classificationData);updateId(h.controlId,h.uniqueProperty,g);h.classification.categorieschildren=g});setTimeout(function(){$("#defaultPage").enhanceWithin()},1)},true);b.saveDiagnoseItemsData=function(){DiagnoseTabFunctionality.saveDiagnoseData(c)}};angular.module("myapp").controller("DiagnoseController",["$scope","$compile","Data",a])})();function updateId(c,a,b){angular.forEach(b,function(d,e){d.data.id=c+a+d.data.id;d.data.diagnoseControlId=c;if(d.categorieschildren){updateId(c,a,d.categorieschildren)}})}function updateParentInfo(){};(function(){function b(c){return["$compile","$templateCache","Data",function(f,d,e){return{restrict:"E",scope:{controls:"=",groupname:"=",parent:"=",uniqueProperty:"@",tabHierarchyHeadings:"@"},compile:function(h,g){return{pre:function(k,l,j){if(c==="r"&&k.uniqueProperty!==undefined){e.uniqueProperty=k.uniqueProperty}if(angular.isDefined(k.tabHierarchyHeadings)){e.tabHierarchyHeadings=k.tabHierarchyHeadings}if(k.controls===undefined||k.controls.type===undefined){return}var i=d.get(k.controls.type);if(k.controls.type==="TabRoot"){i=d.get("Tabs")}if(k.controls.type==="RadioGroup"){processRadioGroup(k,e)}if(k.controls.type==="CheckboxGroup"){processCheckboxGroup(k)}if(k.controls.type==="RadioButton"){k.controls.uniqueProperty=e.uniqueProperty}if(k.controls.type==="Checkbox"){processCheckbox(k,e,l)}if(k.controls.type==="TextInput"){processTextInput(k,e)}if(k.controls.type==="Text"){e.TextLabel=k.controls.properties.text}if(k.controls.type==="ToggleSwitch"){processToggleSwitch(k,e)}if(k.controls.type==="Slider"){processSlider(k,e,l)}if(k.controls.type==="Grid"){processGrid(k)}if(k.controls.type==="SelectMenu"){processSelectMenu(k,e,l)}var m=angular.element(i);f(m)(k);l.append(m)},post:function(j,k,i){setTimeout(function(){if(j.controls.type==="Tabs"||j.controls.type==="TabRoot"){if(j.controls.type==="TabRoot"){$("#defaultPage").enhanceWithin()}$(k).tabs();$(k).data("tabsInitialized",true)}},1);if(j.controls.type==="Slider"){j.$on("$destroy",function(l){k.off("change")})}}}}}}]}var a=function(e,c,d){var f={};f.restrict="E";f.scope={categorieschildren:"=",templateName:"="};f.compile=function(h,g){return{pre:function(m,j,l,n){var k="",i="";i="CategoriesButtons";if(m.templateName!==undefined){i=m.templateName}k=c.get(i);var o=angular.element(k);e(o)(m);j.append(o)},post:function(k,i,j){setTimeout(function(){$('[data-type="horizontal"]').controlgroup({type:"horizontal"});$(i).find(".categories-tabs").tabs().data("tabs-initialized","true")},1)}}};return f};angular.module("myapp").directive("r",b("r")).directive("content",b("content")).directive("radiogroup",b("radiogroup")).directive("checkboxgroup",b("checkboxgroup")).directive("tabs",b("tabs")).directive("categories",["$compile","$templateCache","Data",a]).directive("enhanceUi",[function(){return{restrict:"A",link:function(e,d,c){var g=e.$eval(c.enhanceUi),f=g.event,h=g.condition;$("#defaultPage").enhanceWithin();$(d.parent()).trigger("updatelayout").listview("refresh")}}}])})();function processRadioGroup(c,b){b.RadioGroupCount+=1;c.controls.groupname="RadioGroup"+b.RadioGroupCount;c.controls.labelPrefix=b.tabHierarchyHeadings;c.controls.name=c.controls.properties.legend;if(c.controls.properties.id===undefined){c.controls.properties.id="RadioGroup"+b.RadioGroupCount}c.$watch("controls.value",function(e,d){if(e!==undefined){var f={controlId:c.controls.properties.id,label:c.controls.labelPrefix+c.controls.properties.legend,type:c.controls.type,valueLabel:c.controls.value,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=f;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=f;openPanel()}else{delete b.SelectedControls[c.controls.properties.id];c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}},true);var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}function processCheckboxGroup(a){a.controls.name=a.controls.properties.legend;angular.forEach(a.controls.children,function(c,b){c.name=a.controls.name})}function processCheckbox(c,b,d){c.controls.uniqueProperty=b.uniqueProperty;c.controls.properties.id=b.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a;c.$watch("controls.value",function(f,e){if(f===true&&(e===false||e===undefined)){var g={controlId:c.controls.properties.id,label:c.controls.labelPrefix+(c.controls.name?c.controls.name:""),type:c.controls.type,valueLabel:c.controls.properties.label,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=g;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=g;openPanel()}else{if(f===false&&e===true){if(b.SelectedControls[c.controls.properties.id]!==undefined){delete b.SelectedControls[c.controls.properties.id]}c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}}})}function processSlider(c,b,d){c.controls.value=0;c.controls.uniqueProperty=b.uniqueProperty;c.controls.properties.id=b.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;d.on("change",'input[type="number"]',function(){c.controls.value=parseInt($(this).val());c.$digest()});var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a;c.$watch("controls.value",function(f,e){if(f!==0&&f!==e){var g={controlId:c.controls.properties.id,label:c.controls.labelPrefix+c.controls.properties.label,type:c.controls.type,valueLabel:c.controls.value,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=g;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=g;openPanel()}else{if(e!==0&&f===0){if(b.SelectedControls[c.controls.properties.id]!==undefined){delete b.SelectedControls[c.controls.properties.id]}c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}}})}function processTextInput(c,b){c.controls.uniqueProperty=b.uniqueProperty;c.controls.properties.id=b.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;c.$watch("controls.value",function(e,d){if(e!==undefined&&e!==""){var f={controlId:c.controls.properties.id,label:c.controls.labelPrefix+c.controls.properties.label,type:c.controls.type,valueLabel:c.controls.value,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=f;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=f;openPanel()}else{if(b.SelectedControls[c.controls.properties.id]!==undefined){delete b.SelectedControls[c.controls.properties.id]}c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}});var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}function processToggleSwitch(c,b){b.SliderCount+=1;if(c.controls.properties.id===undefined){c.controls.properties.id="ToggleSwitch"+b.SliderCount}c.controls.properties.label=b.TextLabel;b.TextLabel="";c.controls.uniqueProperty=b.uniqueProperty;c.controls.properties.id=b.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;c.controls.value="false";c.$watch("controls.value",function(e,d){if(e==="true"&&d==="false"){var f={controlId:c.controls.properties.id,label:c.controls.labelPrefix+c.controls.properties.label,type:c.controls.type,valueLabel:c.controls.properties.label1,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=f;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=f;openPanel()}else{if(e==="false"){delete b.SelectedControls[c.controls.properties.id];c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}}});var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}function processGrid(a){var c=a.controls;var b=c.properties&&c.properties.rows?c.properties.rows:1;if(c.properties===undefined){c.properties={}}c.properties.uiClass=GridBuilder.getGridClass(c.children,b);GridBuilder.setGridControlLabels(c)}function processSelectMenu(c,b,d){b.SelectMenuCount+=1;if(c.controls.properties.id===undefined){c.controls.properties.id="SelectMenu"+b.SelectMenuCount}c.controls.labelPrefix=b.tabHierarchyHeadings;if(c.controls.properties.options.children){c.controls.previousValue=c.controls.value=c.controls.defaultValue=c.controls.properties.options.children[0].value;c.controls.previousValueLabel=c.controls.valueLabel=c.controls.defaultValueLabel=c.controls.properties.options.children[0].text}d.on("change","select.control",function(h){var g=$(this).val();var f=$('option[value="'+g+'"]:selected',$(this)).text();if(g!==c.controls.previousValue&&g!==c.controls.defaultValue||f!==c.controls.previousValueLabel&&f!==c.controls.defaultValueLabel){c.controls.previousValue=c.controls.value;c.controls.previousValueLabel=c.controls.valueLabel;c.controls.value=g;c.controls.valueLabel=f;var i={controlId:c.controls.properties.id,label:c.controls.labelPrefix+c.controls.properties.options.label,type:c.controls.type,valueLabel:c.controls.valueLabel,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=i;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=i;openPanel()}else{delete b.SelectedControls[c.controls.properties.id];c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}c.$digest()});var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}function openPanel(){$("#leftpanel").panel("open");$("#closePanelButton").removeClass("ui-btn-active")};
