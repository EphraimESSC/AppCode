(function () {
  'use strict';
  angular.module('myapp',  [  'myapp.diagnose',
                              'myapp.classification',
                              'myapp.diagnose-config',
                              'ui', 'data',
                              'controlsTree',
                              'webcam'
                            ]);
})();
(function(){angular.module("myapp").run(a);a.$inject=["ClassificationUtilitiesService","SharedDataService","Data"];function a(d,c,b){FunctionalityModule.setSharedData(b.sharedData);FunctionalityModule.setSharedDataService(c)}})();(function(){angular.module("data",[]).factory("Data",[a]).service("SharedDataService",b);function a(){return{RadioGroupCount:0,SliderCount:0,SelectMenuCount:0,TextLabel:"",SelectedControls:{},ClassificationDataAdded:[],tabHierarchyHeadings:"",sharedData:{controls:[],classificationData:[],ControlCategoriesInfo:[],RecentlySelectedControlDetails:undefined,diagnoseItems:undefined,isControlsValuesBeingSet:false}}}b.$inject=["Data"];function b(d){var c={};c.getControls=function(){return d.sharedData.controls};c.setControls=function(e){d.sharedData.controls=e};c.getClassificationData=function(){return d.sharedData.classificationData};c.setClassificationData=function(e){d.sharedData.classificationData=e};c.getClassificationData=function(){return d.sharedData.classificationData};c.setClassificationData=function(e){d.sharedData.classificationData=e};c.getControlCategoriesInfo=function(){return d.sharedData.ControlCategoriesInfo};c.setControlCategoriesInfo=function(e){d.sharedData.ControlCategoriesInfo=e};c.getRecentlySelectedControlDetails=function(){return d.sharedData.RecentlySelectedControlDetails};c.setRecentlySelectedControlDetails=function(e){d.sharedData.RecentlySelectedControlDetails=e};c.getDiagnoseItems=function(){return d.sharedData.diagnoseItems};c.setDiagnoseItems=function(e){d.sharedData.diagnoseItems=e};c.getIsControlsValuesBeingSet=function(){return d.sharedData.isControlsValuesBeingSet};c.setIsControlsValuesBeingSet=function(e){d.sharedData.isControlsValuesBeingSet=e};return c}})();function updateId(c,a,b){angular.forEach(b,function(d,e){if(angular.isDefined(d.properties)&&angular.isUndefined(d.properties.isIdUpdated)||angular.isDefined(d.properties)&&d.data.isIdUpdated===false){d.properties.id=(angular.isDefined(c)?c:"")+(angular.isDefined(a)?a:"")+d.properties.id;d.properties.diagnoseControlId=c;d.properties.isIdUpdated=true}if(d.categorieschildren){updateId(c,a,d.categorieschildren)}})}function createDirective(a){b.$inject=["$compile","$templateCache","DirectiveHelperService","SharedDataService","Data","ControlsService"];function b(h,d,f,i,g,c){function e(m){var k=m.scope;var j=m.Data;var l=m.iElem;if(k.controls.type==="RadioGroup"){f.processHierarchyLabelsForControl(k.controls,k.parent);processRadioGroup(k,j,c)}if(k.controls.type==="CheckboxGroup"){f.processHierarchyLabelsForContainer(k.controls,k.parent);processCheckboxGroup(k)}if(k.controls.type==="RadioButton"){k.controls.uniqueProperty=j.uniqueProperty}if(k.controls.type==="Checkbox"){f.processHierarchyLabelsForControl(k.controls,k.parent);processCheckbox(k,j,l,c)}if(k.controls.type==="TextInput"){f.processHierarchyLabelsForControl(k.controls,k.parent);processTextInput(k,j,c)}if(k.controls.type==="Text"){j.TextLabel=k.controls.properties.text;k.controls.properties.label=k.controls.properties.text}if(k.controls.type==="ToggleSwitch"){processToggleSwitch(k,j,c)}if(k.controls.type==="Slider"){processSlider(k,j,l,c)}if(k.controls.type==="Grid"){processGrid(k)}if(k.controls.type==="SelectMenu"){processSelectMenu(k,j,l,c)}if(k.controls.type==="Collapsible"){f.processHierarchyLabelsForContainer(k.controls,k.parent)}}return{restrict:"E",scope:{controls:"=",groupname:"=",parent:"=",uniqueProperty:"@",tabHierarchyHeadings:"@",attachCategories:"@"},compile:function(k,j){return{pre:function(o,p,n){if(a==="r"&&o.uniqueProperty!==undefined){g.uniqueProperty=o.uniqueProperty}if(angular.isDefined(o.tabHierarchyHeadings)){g.tabHierarchyHeadings=o.tabHierarchyHeadings}if(o.attachCategories==="true"||o.attachCategories===true||o.controls.attachCategories===true){o.controls.attachCategories=true;angular.forEach(o.controls.children,function(t,s){t.attachCategories=true})}if(o.controls===undefined||o.controls===null||o.controls.type===undefined){return}if(o.controls.type==="Tabs"&&o.controls.categories&&angular.isDefined(o.attachCategories)&&o.attachCategories){var l=(o.controls.categories[0].type==="CategoriesButtonsStems")?o.controls.categories[0].categorieschildren:o.controls.categories;i.setClassificationData(l)}var m=d.get(o.controls.type);var q={};q.scope=o;q.Data=g;q.iElem=p;e(q);var r=angular.element(m);h(r)(o);p.append(r)},post:function(m,n,l){setTimeout(function(){if(m.controls.type==="Tabs"||m.controls.type==="TabRoot"){if(m.controls.type==="TabRoot"){$("#defaultPage").enhanceWithin()}n.tabs();n.data("tabsInitialized",true)}},1);if(m.controls.type==="Slider"){m.$on("$destroy",function(o){n.off("change")})}}}}}}return b};(function(){angular.module("ui",["data"]).run(a).directive("r",createDirective("r"));a.$inject=["$templateCache","$http","$q","DirectiveCreateService"];function a(b,g,c,d){var e=["Tabs","RadioGroup","CheckboxGroup","RadioButton","Checkbox","TextInput","Text","ToggleSwitch","Slider","Grid","SelectMenu","Collapsible","CollapsibleSet","Block","CategoriesButtons","CategoriesButtonsStems","CategoriesRoot","Content","Div","TabRoot"];var f=[];d.setDeferedArray(f);angular.forEach(e,function(j,h){var k=c.defer();f.push(k.promise);g.get("/Components/UIComponents/templates/"+j+".html").success(function(i){b.put(j,i);k.resolve()})})}})();(function(){angular.module("ui").service("DirectiveCreateService",a);a.$inject=["$q"];function a(c){var b={};var f=null;b.createDirective=createDirective;b.setDeferedArray=e;function e(g){f=g}b.getDeferedArray=d;function d(){return f}return b}})();(function(){a.$inject=[];function a(){var b={restrict:"A",scope:{},link:function(d,e,c){console.log("Role Directive")}};return b}angular.module("ui").directive("dataRole",a)})();(function(){angular.module("ui").directive("enhanceUi",[function(){return{restrict:"A",link:function(c,b,a){var e=c.$eval(a.enhanceUi),d=e.event,f=e.condition;$("#defaultPage").enhanceWithin();$(b.parent()).trigger("updatelayout").listview("refresh")}}}])})();(function(){var a=function(d,b,c){var e={};e.restrict="E";e.scope={categorieschildren:"=",templateName:"@"};e.compile=function(g,f){return{pre:function(l,i,k,m){var j="",h="";h="CategoriesButtons";if(l.templateName!==undefined){h=l.templateName}j=b.get(h);var n=angular.element(j);d(n)(l);i.append(n)},post:function(j,h,i){setTimeout(function(){$('[data-type="horizontal"]').controlgroup({type:"horizontal"});h.find('[type="checkbox"]').checkboxradio()},1)}}};return e};angular.module("ui").directive("categories",["$compile","$templateCache","Data",a])})();function processRadioGroup(d,c,a){c.RadioGroupCount+=1;d.controls.groupname="RadioGroup"+c.RadioGroupCount;d.controls.labelPrefix=c.tabHierarchyHeadings;d.controls.name=d.controls.properties.legend;if(d.controls.properties.id===undefined){d.controls.properties.id="RadioGroup"+c.RadioGroupCount}d.$watch("controls.value",function(f,e){if(f!==undefined){var g={controlId:d.controls.properties.id,label:d.controls.labelPrefix+d.controls.properties.legend,heirarchyLabels:d.controls.heirarchyLabels,type:d.controls.type,valueLabel:d.controls.value,value:d.controls.value,labelPrefix:d.controls.labelPrefix,categoriesInfo:d.controls.categorieschildren};createControlLabel(g);c.SelectedControls[d.controls.properties.id]=g;d.controls.showCategory=true;c.sharedData.RecentlySelectedControlDetails=g;if(!c.sharedData.isControlsValuesBeingSet&&d.controls.attachCategories){openPanel()}}else{delete c.SelectedControls[d.controls.properties.id];d.controls.showCategory=false;c.sharedData.RecentlySelectedControlDetails=undefined}});if(d.controls.attachCategories){var b=angular.copy(c.sharedData.classificationData);updateId(d.controls.properties.id,c.uniqueProperty,b);c.ClassificationDataAdded.push({controlId:d.controls.properties.id,uniqueProperty:c.uniqueProperty,classification:b});d.controls.categorieschildren=b}}function processCheckboxGroup(a){a.controls.name=a.controls.properties.legend;angular.forEach(a.controls.children,function(c,b){c.name=a.controls.name})}function processCheckbox(c,b,d){c.controls.uniqueProperty=angular.isDefined(b.uniqueProperty)?b.uniqueProperty:"";c.controls.properties.id=c.controls.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;if(c.controls.attachCategories){var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}c.$watch("controls.value",function(f,e){if(f===true&&(e===false||e===undefined)){var g={controlId:c.controls.properties.id,label:(c.controls.name?c.controls.name:""),heirarchyLabels:c.controls.heirarchyLabels,type:c.controls.type,valueLabel:c.controls.properties.label,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};createControlLabel(g);b.SelectedControls[c.controls.properties.id]=g;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=g;if(!b.sharedData.isControlsValuesBeingSet&&c.controls.attachCategories){openPanel()}}else{if(f===false&&e===true){if(b.SelectedControls[c.controls.properties.id]!==undefined){delete b.SelectedControls[c.controls.properties.id]}c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}}})}function processSlider(c,b,d){c.controls.value=0;c.controls.uniqueProperty=angular.isDefined(b.uniqueProperty)?b.uniqueProperty:"";c.controls.properties.id=c.controls.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;d.on("change",'input[type="number"]',function(){var e=parseInt($(this).val());if(e<=0){return}c.controls.value=e;var f={controlId:c.controls.properties.id,label:c.controls.properties.label,type:c.controls.type,valueLabel:c.controls.value,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};createControlLabel(f);b.SelectedControls[c.controls.properties.id]=f;b.sharedData.RecentlySelectedControlDetails=f;c.controls.showCategory=true;if(!b.sharedData.isControlsValuesBeingSet&&c.controls.attachCategories){openPanel()}c.$apply()});if(c.controls.attachCategories){var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}}function processTextInput(c,b){c.controls.uniqueProperty=b.uniqueProperty;c.controls.properties.id=b.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;c.$watch("controls.value",function(e,d){if(e!==undefined&&e!==""){var f={controlId:c.controls.properties.id,label:c.controls.properties.label,type:c.controls.type,valueLabel:c.controls.value,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};createControlLabel(f);b.SelectedControls[c.controls.properties.id]=f;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=undefined;b.sharedData.RecentlySelectedControlDetails=f;if(!b.sharedData.isControlsValuesBeingSet&&c.controls.attachCategories){openPanel()}}else{if(b.SelectedControls[c.controls.properties.id]!==undefined){delete b.SelectedControls[c.controls.properties.id]}c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}});if(c.controls.attachCategories){var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}}function processToggleSwitch(c,b){b.SliderCount+=1;if(c.controls.properties.id===undefined){c.controls.properties.id="ToggleSwitch"+b.SliderCount}if(c.controls.properties.label===undefined||c.controls.properties.label===""){c.controls.properties.label=b.TextLabel}b.TextLabel="";c.controls.uniqueProperty=angular.isDefined(b.uniqueProperty)?b.uniqueProperty:"";c.controls.properties.id=c.controls.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;c.controls.value="false";c.$watch("controls.value",function(e,d){if(e==="true"&&d==="false"){var f={controlId:c.controls.properties.id,label:c.controls.properties.label,type:c.controls.type,valueLabel:c.controls.properties.label1,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};createControlLabel(f);b.SelectedControls[c.controls.properties.id]=f;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=f;if(!b.sharedData.isControlsValuesBeingSet&&c.controls.attachCategories){openPanel()}}else{if(e==="false"){delete b.SelectedControls[c.controls.properties.id];c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}}});if(c.controls.attachCategories){var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}}function processGrid(a){var c=a.controls;var b=c.properties&&c.properties.rows?c.properties.rows:1;if(c.properties===undefined){c.properties={}}c.properties.uiClass=GridBuilder.getGridClass(c.children,b);GridBuilder.setGridControlLabels(c)}function processSelectMenu(c,b,d){b.SelectMenuCount+=1;if(c.controls.properties.id===undefined){c.controls.properties.id="SelectMenu"+b.SelectMenuCount}c.controls.labelPrefix=b.tabHierarchyHeadings;if(c.controls.properties.options&&c.controls.properties.options.children){c.controls.previousValue=c.controls.value=c.controls.defaultValue=c.controls.properties.options.children[0].value;c.controls.previousValueLabel=c.controls.valueLabel=c.controls.defaultValueLabel=c.controls.properties.options.children[0].text}d.on("change","select.control",function(h){var g=$(this).val();var f=$('option[value="'+g+'"]:selected',$(this)).text();if(g!==c.controls.previousValue&&g!==c.controls.defaultValue||f!==c.controls.previousValueLabel&&f!==c.controls.defaultValueLabel){c.controls.previousValue=c.controls.value;c.controls.previousValueLabel=c.controls.valueLabel;c.controls.value=g;c.controls.valueLabel=f;var i={controlId:c.controls.properties.id,label:c.controls.properties.label||c.controls.properties.options.label,type:c.controls.type,valueLabel:c.controls.valueLabel,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};createControlLabel(i);b.SelectedControls[c.controls.properties.id]=i;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=i;if(!b.sharedData.isControlsValuesBeingSet&&c.controls.attachCategories){openPanel()}}else{delete b.SelectedControls[c.controls.properties.id];c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}c.$digest()});if(c.controls.attachCategories){var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}}function openPanel(){$("#leftpanel").panel("open");$("#closePanelButton").removeClass("ui-btn-active")}function createControlLabel(b){var a=(b.labelPrefix?b.labelPrefix:"")+(b.label?(b.labelPrefix?" : ":"")+b.label:"")+(b.heirarchyLabels&&b.heirarchyLabels.length>0?" : "+b.heirarchyLabels.join(" : "):"");b.controlLabel=a};(function(){angular.module("ui").service("DirectiveHelperService",a);function a(){var b={};b.processHierarchyLabelsForContainer=e;function e(h,f){if(!h.heirarchyLabels){h.heirarchyLabels=[]}h.heirarchyLabels=(angular.isDefined(f)&&angular.isDefined(f.heirarchyLabels)?angular.copy(f.heirarchyLabels):[]).concat(h.heirarchyLabels);var g=d(h);if(g){h.heirarchyLabels.push(g)}}function d(f){if(f.type==="Collapsible"&&f.properties.heading){return f.properties.heading}if(f.type==="CheckboxGroup"&&f.name){return f.name}}b.processHierarchyLabelsForControl=c;function c(g,f){if(angular.isUndefined(f)){return}g.heirarchyLabels=f.heirarchyLabels?angular.copy(f.heirarchyLabels):[]}return b}})();(function () {
  
  angular.module('webcam', ['myapp.diagnose-config']);
  
} ());
(function(){angular.module("webcam").directive("video",b).directive("canvas",a);b.$inject=["WebCamService"];function b(c){var d={};d.restrict="E";d.link=function(i,h,g){navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia;var k={audio:false,video:true};var j=h[0];c.setVideoDisplay(j);function e(l){window.stream=l;if(window.URL){j.src=window.URL.createObjectURL(l)}else{j.src=l}j.play()}function f(l){console.log("navigator.getUserMedia error: ",l)}navigator.getUserMedia(k,e,f)};return d}a.$inject=["WebCamService"];function a(c){var d={};d.restrict="E";d.link=function(i,h,f){var e=h[0];var g=e.getContext("2d");c.setCanvasContext(g)};return d}}());(function(){angular.module("webcam").service("WebCamService",a);a.$inject=["$q","DBService"];function a(f,l){var g={};var h=f.defer();var e={imagesCollection:[]};g.initialize=d;function d(){var m=l.getValue("webCamData").then(function(n){if(!n){return}Array.prototype.push.apply(e.imagesCollection,n)})}d();g.getVideoDisplay=j;function j(){return h.promise}g.setVideoDisplay=k;function k(m){e.videoDisplay=m;h.resolve(m)}g.setCanvasContext=i;function i(m){e.canvasContext=m}g.captureFrame=b;function b(){e.canvasContext.drawImage(e.videoDisplay,0,0,640,480);var m={};m.src=canvas.toDataURL("image/png");e.imagesCollection.push(m);l.setValue("webCamData",e.imagesCollection)}g.getImagesCollection=c;function c(){return e.imagesCollection}return g}}());(function(){angular.module("webcam").controller("WebCamSectionController",a);a.$inject=["$scope","WebCamService"];function a(c,e){var b=this;var d=b.model={};d.values={};d.values.imagesCollection=e.getImagesCollection();b.onSnapPhoto=function(){e.captureFrame()}}}());(function(){angular.module("myapp.diagnose",[])})();(function(){angular.module("myapp.diagnose").run(a);a.$inject=["DiagnoseDataService","DiagnoseClassificationDataService","DiagnoseClassificationUtilitiesService"];function a(d,c,b){DiagnoseTabFunctionality.setDiagnoseDataService(d);DiagnoseTabFunctionality.setDiagnoseClassificationDataService(c);DiagnoseTabFunctionality.setDiagnoseClassificationUtilitiesService(b)}})();(function(){angular.module("myapp.diagnose").service("DiagnoseDataService",a);a.$inject=["$q"];function a(f){var e={};e.resetControls=d;function d(j){if(!j){return}angular.forEach(j.children,function(l,k){if(angular.isDefined(l.value)&&l.value===true){l.value=false}if(angular.isDefined(l.categorieschildren)){g(l.categorieschildren)}if(angular.isDefined(l.children)){d(l)}})}function g(j){angular.forEach(j,function(l,k){if(angular.isDefined(l.data)&&l.data.value===true){l.data.value=false}if(angular.isDefined(l.categorieschildren)){g(l.categorieschildren)}})}e.setControlValue=i;function i(j,k){angular.forEach(j.children,function(m,l){if(angular.isDefined(m.properties)&&angular.isDefined(m.properties.id)&&m.properties.id===k.controlId){if(k.controlValue==="true"||k.controlValue===true){m.value=true;m.categorieschildren=k.categorieschildren}}if(angular.isDefined(m.children)){i(m,k)}})}e.fetchDiagnoseData=h;function h(k){var j={};j.deferred=f.defer();j.tableReference="diagnoseData";j.queryReference="selectDataWhere";j.queryParametersArray=[[k]];DataModule.executeAll(j);return j.deferred.promise}e.insertDiagnoseDataBatch=c;function c(k){var j=f.defer();var l={};l.tableQueryReference=["diagnoseData","insertData","insert"];l.queryParametersArray=k;l.deferred=j;l.batchExecution=true;DataModule.executeQuery(l);return j.promise}e.deleteDiagnoseData=b;function b(j,l){var k={};k.deferred=f.defer();k.tableReference="diagnoseData";k.queryReference="deleteData";k.queryParametersArray=[[j]];k.queryType="delete";DataModule.executeAll(k);return k.deferred.promise}return e}})();(function(){angular.module("myapp.diagnose").service("DiagnoseClassificationDataService",a);a.$inject=["$q"];function a(c){var b={};b.fetchDiagnoseClassificationData=d;function d(h){var i=c.defer();var g={};g.tableReference="diagnoseClassification";g.queryReference="selectDataWhere";g.queryParametersArray=[[h]];g.deferred=i;DataModule.executeAll(g);return i.promise}b.insertDiagnoseClassificationData=e;function e(g){var i=c.defer();var h={};h.tableReference="diagnoseClassification";h.queryReference="insertData";h.queryParametersArray=g;h.deferred=i;h.queryType="insert";DataModule.executeAll(h);return i.promise}b.deleteDiagnoseClassificationInfo=f;function f(i){var h=c.defer();var g={};g.deferred=h;g.tableReference="diagnoseClassification";g.queryReference="deleteDataWhere";g.queryParametersArray=_.map(i,function(j){return[j]});g.queryType="delete";g.callback=function(){};g.deferred=h;DataModule.executeAll(g);return h.promise}return b}})();(function(){angular.module("myapp.diagnose").service("DiagnoseClassificationUtilitiesService",a);a.$inject=["$q","DiagnoseClassificationDataService","ClassificationUtilitiesService","DiagnoseDataService","SharedDataService"];function a(e,b,g,i,c){var f={};f.setDiagnoseItemsWithDBValues=j;function j(k,l){var m=e.defer();var n=[];angular.forEach(k,function(r,q){var p=r.id||r.diagnoseItemId;if(angular.isUndefined(r.categorieschildren)){r.categorieschildren=angular.copy(c.getClassificationData())}updateId(r.controlId,l,r.categorieschildren);var o=b.fetchDiagnoseClassificationData(p);n.push(o);o.then(function(t){var s=_.pluck(t,"classificationId");g.setClassificationValues(s,r.categorieschildren)})});k.isIdUpdated=true;$.when.apply(null,n).done(function(){m.resolve(k)});return m.promise}f.deleteDiagnoseDataAndClassification=h;function h(l){var k=e.defer();i.fetchDiagnoseData(l).then(function(m){var n=_.pluck(m,"id");b.deleteDiagnoseClassificationInfo(n).then(function(){i.deleteDiagnoseData(l).then(function(){k.resolve()})})});return k.promise}f.categorizeDiagnoseItems=d;function d(k,o,l){var m={};var p=[];$.each(l,function(s,v){var r=v.id||v.diagnoseItemId;m[r]={name:v.controlLabel+" : "+v.controlValueLabel,categorized:false};var t={};var q=angular.copy(c.getClassificationData());var u=$.Deferred();p.push(u.promise());b.fetchDiagnoseClassificationData(r).then(function(w){if(w!==undefined&&w.length!==0){g.setClassificationValues(_.pluck(w,"classificationId"),q);angular.forEach(q,function(y,x){if(y.data.value){t[y.data.name]=[];t[y.data.name].push(y.data.name);g.constructCategorizationTree(t[y.data.name],y.categorieschildren)}});m[r].categorized=true;m[r].categorizationMap=t}u.resolve()})});var n=$.Deferred();$.when.apply(null,p).done(function(){n.resolve(m)});return n.promise()}return f}})();(function(){angular.module("db-service",[]).service("DBService",a);a.$inject=["$q"];function a(h){var j="TCMD",k="appStore",c=null,d;function f(){i()}function i(m,l){if(angular.isDefined(m)){j=m}if(angular.isDefined(l)){k=l}d=h.defer();$.indexedDB(j,{schema:{"1":function(o){var n=o.createObjectStore(k,{autoIncrement:true});n.createIndex("itemId")}}}).done(function(){c=$.indexedDB(j).objectStore(k);d.resolve()});return d.promise}f();function e(l,m){var n=h.defer();d.promise.then(function(){c.get(l).then(function(p){var o;o=angular.isDefined(m)?p[m]:p;n.resolve(o)},function(o,p){console.log("Could not add to appStore",o,p)})});return n.promise}function b(l,m){var n=h.defer();d.promise.then(function(){c.put(m,l).then(function(){n.resolve(m)},function(o,p){console.log("Could not update data",o,p)})});return n.promise}var g={};g.openDatabase=i;g.getValue=e;g.setValue=b;return g}}());(function(){angular.module("myapp.diagnose-config",["db-service"]).filter("property",b).controller("DiagnoseConfigController",a);function b(){return function(e,c,d){return _.filter(e,function(f){return f[c]===d})}}a.$inject=["ControlsService","DBService","SharedDataService"];function a(d,h,j){var e=this,g=e.model={};g.values={};g.values.tabInfo=[];function c(){i();f()}c();function i(){h.getValue("diagnoseTabModel").then(function(l){if(!l){return}if(l.tabInfo){d.scanAndUpdateDuplicateIds(l.tabInfo)}g.values=l;var k=d.scanAndUpdateDuplicateIds(angular.copy(g.values.tabInfo));window.tabInfoCopy=k;j.setControls(k)})}function f(){d.fetchServiceValues().then(function(k){g.controlsServiceValues=k;angular.forEach(g.values.tabInfo,function(l,m){if(l.selectedList){var n=_.findIndex(k.lists,function(o){return o.listName===l.selectedList.listName});if(n!==-1){l.selectedList=k.lists[n]}}if(l.categoriesList){n=_.findIndex(k.lists,function(o){return o.listName===l.categoriesList.listName});if(n!==-1){l.categoriesList=k.lists[n]}}});setTimeout(function(){$("#defaultPage").enhanceWithin();$("#diagnoseConfigSection select.selected-list").selectmenu("refresh")},1)})}e.onChangeTabChoice=function(){};e.onFileInput=function(m){console.log("file",m.files);var l=$(m).attr("index");var k=new FileReader();k.onload=function(o){g.values.tabInfo[l].fileName=m.files[0].name;if(g.values.tabInfo[l].children){d.removeIdsFromCacheList(g.values.tabInfo[l].children)}var n=JSON.parse(o.target.result);d.scanAndUpdateDuplicateIds(n);g.values.tabInfo[l].children=n};k.readAsText(m.files[0])};e.onChangeList=function(k){g.values.tabInfo[k].children=g.values.tabInfo[k].selectedList.controls};e.onChangeCategories=function(m){var l=g.values.tabInfo[m].categoriesList.controls;g.values.tabInfo[m].categories=l;var o=0,k=0,n=[];_.deepMapValues(l,function(q,r){if(r[r.length-1]!=="label"){return}else{n.push(q)}});console.log(n);g.values.tabInfo[m].categoriesListArray=n};e.onDeleteDiagnoseTab=function(k){d.removeIdsFromCacheList(g.values.tabInfo[k].children);d.removeIdsFromCacheList(g.values.tabInfo[k].categories,"categorieschildren");g.values.tabInfo.splice(k,1)};e.onAddDiagnoseTab=function(){g.values.tabInfo.push({tabName:"Diagnose Tab "+(g.values.tabInfo.length+1),type:"Tabs"});setTimeout(function(){$("#defaultPage").enhanceWithin()},1)};e.onSaveDiagnoseConfig=function(){h.setValue("diagnoseTabModel",g.values);var k=d.scanAndUpdateDuplicateIds(angular.copy(g.values.tabInfo));j.setControls(k)}}}());(function(){angular.module("myapp").controller("ConfigureClassificationController",a);a.$inject=["$scope","ClassificationDataService"];function a(b,c){c.initClassificationData().then(function(d){b.sharedData=d;FunctionalityModule.enhancePage()});b.addClassification=function(){if(b.inputClassificationName===undefined||b.inputClassificationName===""){return}c.addClassification(b.inputClassificationName).then(function(){b.inputClassificationName="";FunctionalityModule.enhancePage();$(".js-classify-diagnose-button").removeClass("ui-disabled")});ConfigTabFunctionality.setAppRefreshPending(true)};b.addSubClassification=function(f,e){var d=b.sharedData.classificationData[e].subCategoryInput;if(d===undefined||d===""){return}c.addSubClassification(e,f,d).then(function(){});ConfigTabFunctionality.setAppRefreshPending(true)};b.deleteClassification=function(e,d){c.deleteSubCategoriesWithParent(e).then(function(){c.deleteCategory(e,d)});ConfigTabFunctionality.setAppRefreshPending(true)};b.deleteSubCategory=function(d,e){c.deleteSubCategory(d,e).then(function(){ConfigTabFunctionality.setAppRefreshPending(true)})}}})();(function(){angular.module("myapp").controller("PanelController",a);a.$inject=["$scope","Data","$compile"];function a(b,d,c){b.sharedData=d.sharedData}})();(function(){angular.module("myapp").controller("DiagnoseController",a);a.$inject=["$scope","$compile","SharedDataService","Data"];function a(b,d,e,c){b.SelectedControls=c.SelectedControls;b.sharedData=c.sharedData;b.ClassificationDataAdded=c.ClassificationDataAdded;b.saveDiagnoseItemsData=function(){DiagnoseTabFunctionality.saveDiagnoseData(c)}}})();function updateParentInfo(){};(function () {
  'use strict';
  angular.module('myapp.classification', []);
})();
(function(){angular.module("myapp.classification").run(a);a.$inject=["ClassificationUtilitiesService"];function a(b){ClassifyTabFunctionality.setClassificationUtilitiesService(b)}})();angular.module("myapp.classification").service("ClassificationDataService",ClassificationDataService);ClassificationDataService.$inject=["$q","Data"];function ClassificationDataService(c,g){var d={};d.initClassificationData=h;function h(){var j=c.defer();var k={};k.tableReference="classification";k.queryReference="selectData";k.queryParametersArray=[[]];k.callback=function(l){if(l===undefined){return}var m={};angular.forEach(l,function(o,n){if(o.parentClassificationId===null){if(m[o.classificationId]==undefined){var p={data:{classificationInsertId:o.classificationId,id:o.classificationId,name:o.classificationName,value:false},subCategoryInput:"",categorieschildren:[]};m[o.classificationId]=p}}else{if(m[o.parentClassificationId]!==undefined){m[o.parentClassificationId].categorieschildren.push({data:{classificationInsertId:o.classificationId,id:""+o.parentClassificationId+o.classificationId,name:o.classificationName,value:false},subCategoryInput:""})}}});angular.forEach(m,function(n,o){g.sharedData.classificationData.push(n)});j.resolve(g.sharedData)};DataModule.executeAll(k);return j.promise}d.addClassification=f;function f(j){var k={};k.deferred=c.defer();k.tableQueryReference=["classification","insertData","query"];k.queryParametersArray=[j,null];DataModule.executeQuery(k).promise.then(function(l){console.log(l);g.sharedData.classificationData.push({data:{id:l,classificationInsertId:l,name:j,value:false},name:"",categorieschildren:[]})});return k.deferred.promise}d.addSubClassification=i;function i(k,m,j){var l={};l.deferred=c.defer();l.tableReference="classification";l.queryReference="insertData";l.queryParametersArray=[[j,m]];l.callback=function(n){var o=n.insertId;g.sharedData.classificationData[k].categorieschildren.push({data:{name:j,id:o,value:false}});g.sharedData.classificationData[k].subCategoryInput=""};DataModule.executeAll(l);return l.deferred.promise}d.deleteSubCategoriesWithParent=b;function b(k){var j={};j.deferred=c.defer();j.tableReference="classification";j.queryReference="deleteDataWhereParent";j.queryParametersArray=[[k]];j.queryType="delete";DataModule.executeAll(j);return j.deferred.promise}d.deleteCategory=a;function a(l,j){var k={};k.deferred=c.defer();k.tableReference="classification";k.queryReference="deleteData";k.queryParametersArray=[[l]];k.queryType="delete";k.callback=function(){g.sharedData.classificationData.splice(j,1)};DataModule.executeAll(k);return k.deferred.promise}d.deleteSubCategory=e;function e(m,n){var k=_.findIndex(g.sharedData.classificationData,function(o){return o.data.classificationInsertId===n});var j=_.findIndex(g.sharedData.classificationData[k].categorieschildren,function(o){return o.data.classificationInsertId===m});var l={};l.deferred=c.defer();l.tableReference="classification";l.queryReference="deleteData";l.queryParametersArray=[[m]];l.queryType="delete";l.callback=function(){g.sharedData.classificationData[k].categorieschildren.splice(j,1)};DataModule.executeAll(l);return l.deferred.promise}return d};(function(){angular.module("myapp").service("ClassificationUtilitiesService",a);a.$inject=["$q"];function a(e){var c={};c.constructCategorizationTree=g;function g(i,h){$.each(h,function(j,l){if(l.data.value){i.push(l.data.name);if(l.categorieschildren!==undefined){g(l.categorieschildren,i)}}})}c.setClassificationValues=f;function f(h,i){$.each(h,function(j,l){var k=false;$.each(i,function(m,n){if(n.data.classificationInsertId===l){n.data.value=true;k=true}});if(k===false){$.each(i,function(m,n){b(l,n.categorieschildren)})}})}c.setSubClassificationValues=b;function b(j,i){var h=false;$.each(i,function(l,m){if(m.data.classificationInsertId===j){m.data.value=true;h=true;return false}else{if(m.categorieschildren!==undefined){if(b(j,m.categorieschildren)){h=true;return false}}}});return h}c.constructDiagnoseClassificationCollection=d;function d(i,k,h,j){$.each(k,function(l,m){if(m.data.value){j.push(m.data.name);h.push([i,m.data.classificationInsertId]);if(m.categorieschildren!==undefined){d(i,m.categorieschildren,h,j)}}})}return c}})();(function(){angular.module("myapp.classification").controller("ClassificationListController",a);a.$inject=["$scope","Data","DiagnoseClassificationDataService"];function a(b,d,c){b.data={};b.sharedData=d.sharedData;b.saveClassificationInfo=function(){var f=_.pluck(b.data.diagnoseItems,"diagnoseItemId");var e=_.map(b.data.diagnoseItems,function(g){return{diagnoseDetail:g}});c.deleteDiagnoseClassificationInfo(f).then(function(g){ClientTabFunctionality.insertCategorizationInfo(e,f,b.data.clientId,b.data.diagnoseId,b.data.diagnoseName,false);ClientTabFunctionality.makeActive();ClassifyTabFunctionality.makeInactive()})}}})();(function() {
  angular.module('controlsTree', ['ui.tree', 'ui' , 'db-service', 'controls-module'
                                  // , 'firebase'
                                  ]);
})();
(function(){angular.module("controlsTree").service("NotificationsService",a);function a(){var e=["Please select a container item to add the new item.","Please enter item label.","Please enter list name.","Please select section type.","Selected: ","List name already exists"];var c=[];var b={SELECT_CONTAINER_MSG:0,ENTER_ITEM_LABEL_MSG:1,ENTER_LIST_NAME_MSG:2,SELECT_SECTION_MSG:3,SELECTED_MSG:4,LIST_EXISTS_MSG:5};b.setMessage=d;function d(h,i){g();c.push(e[h]+(i?i:""))}b.getMessageArea=f;function f(){return c}b.resetMessage=g;function g(){c.splice(0,c.length)}return b}})();(function(){angular.module("controlsTree").controller("NotificationsController",a);a.$inject=["NotificationsService"];function a(d){var b=this;var c=b.model={};c.notifications=d.getMessageArea()}})();(function(){angular.module("controlsTree").controller("PreviewControlsController",a);a.$inject=["$scope","$q","$timeout","ControlsService","DirectiveCreateService"];function a(d,c,f,b,e){c.all(e.getDeferedArray()).then(function(){d.serviceValues=b.getServiceValues();f(function(){$("#defaultPage").enhanceWithin()},1)});d.updatePreview=function(){$("[data-url]").remove();window.location.reload()}}})();(function(){angular.module("controlsTree").controller("ShowJSONTreeController",a);a.$inject=["ControlsService"];function a(b){this.list=b.getServiceValues()}})();(function(){angular.module("controlsTree").service("FieldsGeneratorService",a);a.$inject=[];function a(){var h={TEXT:0,BOOLEAN:1,SELECT:2};this.types=h;var n={};var i=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:h.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:h.TEXT},{fieldName:"Value",fieldPath:"properties.value",fieldValue:"value",fieldType:h.TEXT},{fieldName:"Is Checked",fieldPath:"properties.isChecked",fieldValue:false,fieldType:h.BOOLEAN},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:true,fieldType:h.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:false,fieldType:h.BOOLEAN,fieldOptions:[{display:"Disabled",value:true},{display:"Enabled",value:false}]}];var l=[{fieldName:"Legend",fieldPath:"properties.legend",fieldValue:"",fieldType:h.TEXT},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:true,fieldType:h.BOOLEAN},{fieldName:"Orientation",fieldPath:"properties.orientation",fieldValue:"vertical",fieldType:h.SELECT,fieldOptions:[{display:"horizontal",value:"horizontal"},{display:"vertical",value:"vertical"}]}];var c=[{fieldName:"Text",fieldPath:"properties.text",fieldValue:"",fieldType:h.TEXT}];var o=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:h.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:h.TEXT},{fieldName:"Value",fieldPath:"properties.value",fieldValue:0,fieldType:h.TEXT},{fieldName:"Min",fieldPath:"properties.min",fieldValue:0,fieldType:h.TEXT},{fieldName:"Max",fieldPath:"properties.max",fieldValue:100,fieldType:h.TEXT},{fieldName:"Step",fieldPath:"properties.step",fieldValue:1,fieldType:h.TEXT},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:true,fieldType:h.BOOLEAN},{fieldName:"Highlight",fieldPath:"properties.highlight",fieldValue:false,fieldType:h.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:false,fieldType:h.BOOLEAN}];var f=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:h.TEXT},{fieldName:"Value 1",fieldPath:"properties.value1",fieldValue:"no",fieldType:h.TEXT},{fieldName:"Value 2",fieldPath:"properties.value",fieldValue:"yes",fieldType:h.TEXT},{fieldName:"Label 1",fieldPath:"properties.label1",fieldValue:"No",fieldType:h.TEXT},{fieldName:"Label 2",fieldPath:"properties.label2",fieldValue:"Yes",fieldType:h.TEXT},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:true,fieldType:h.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:false,fieldType:h.BOOLEAN}];var e=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:h.TEXT},{fieldName:"Value",fieldPath:"properties.value",fieldValue:"",fieldType:h.TEXT},{fieldName:"Type",fieldPath:"properties.type",fieldValue:"text",fieldType:h.SELECT,fieldOptions:[{display:"Text",value:"text"},{display:"Number",value:"number"},{display:"Date",value:"date"},{display:"Month",value:"month"},{display:"Week",value:"week"},{display:"Time",value:"time"},{display:"Date Time",value:"datetime-local"}]},{fieldName:"Hint",fieldPath:"properties.hint",fieldValue:"",fieldType:h.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"",fieldType:h.TEXT},{fieldName:"Native Control",fieldPath:"properties.nativecontrol",fieldValue:false,fieldType:h.BOOLEAN},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:true,fieldType:h.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:false,fieldType:h.BOOLEAN}];var g=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:h.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:h.TEXT}];var k=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:h.TEXT}];var b=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:h.TEXT},{fieldName:"Heading",fieldPath:"properties.heading",fieldValue:"Collapsible Area",fieldType:h.TEXT},{fieldName:"Collapsed",fieldPath:"properties.collapsed",fieldValue:false,fieldType:h.BOOLEAN},{fieldName:"Icon Position",fieldPath:"properties.iconpos",fieldValue:"left",fieldType:h.SELECT,fieldOptions:[{display:"left",value:"left"},{display:"top",value:"top"},{display:"right",value:"right"},{display:"bottom",value:"bottom"},{display:"right",value:"right"}]},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:true,fieldType:h.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:false,fieldType:h.BOOLEAN,fieldOptions:[{display:"Disabled",value:true},{display:"Enabled",value:false}]}];var m=[{fieldName:"Corners",fieldPath:"properties.corners",fieldValue:false,fieldType:h.BOOLEAN},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:true,fieldType:h.BOOLEAN},{fieldName:"Enable Filter",fieldPath:"properties.filter",fieldValue:false,fieldType:h.BOOLEAN}];var j=[{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:false,fieldType:h.BOOLEAN},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:h.TEXT}];var d=[{fieldName:"Label",fieldPath:"properties.label",fieldValue:"",fieldType:h.TEXT}];this.generate=function(r,q){var p=null;switch(r){case"Checkbox":case"RadioButton":p=angular.copy(i);break;case"CheckboxGroup":case"RadioGroup":p=angular.copy(l);break;case"Text":p=angular.copy(c);break;case"Slider":p=angular.copy(o);break;case"ToggleSwitch":p=angular.copy(f);break;case"TextInput":p=angular.copy(e);break;case"Filterable":p=angular.copy(k);break;case"Collapsible":p=angular.copy(b);break;case"CollapsibleSet":p=angular.copy(m);break;case"Tabs":p=angular.copy(g);break;case"SelectMenu":p=angular.copy(j);break;case"Option":p=angular.copy(d);break;default:return null}_.deepMapValues({properties:q},function(v,u){if(u[0]==="properties"){var t=u.join(".");var s=_.pluck(p,"fieldPath").indexOf(t);if(s!==-1){p[s].fieldValue=v}else{p.push({fieldName:u[1],fieldPath:t,fieldValue:v,fieldType:r.TEXT})}}return v});angular.forEach(p,function(s,t){_.deepSet(n,s.fieldPath,s.fieldValue)});return p};this.getStructure=function(){return n}}})();(function () {
  angular.module('controls-module', []);
}());
(function(){angular.module("controls-module").service("ControlsService",a);a.$inject=["$timeout","FieldsGeneratorService","DBService"];function a(y,b,h){var d={};var B={Checkbox:0};var m={type:"Content",zone:"content",properties:{id:"dummyId"},children:[],categorieschildren:[]};var K="TCMD",u="serviceValues",i="appStore";var v={controls:[],lists:[],selected:{list:null,listIndex:-1,item:null},currentItemIndex:0};var p=null;$.indexedDB(K,{schema:{"1":function(M){var L=M.createObjectStore(i,{autoIncrement:true});L.createIndex("itemId")}}}).done(function(){$.indexedDB(K).objectStore(i).get(u).then(function(L){if(L===undefined){$.indexedDB(K).objectStore(i).put(v,u).then(function(){})}else{v.lists=L.lists;if(L.selected.list!==null){v.selected.list=L.selected.list}else{if(v.selected.list===null&&L.lists.length>0&&L.selected.list===null){v.selected.list=L.lists[0];v.selected.listIndex=0;f("selected")}}if(_.isNumber(L.currentItemIndex)&&!isNaN(L.currentItemIndex)){v.currentItemIndex=L.currentItemIndex}else{v.currentItemIndex=0;f("currentItemIndex")}}$("#listNameInput").focus();$("#listItemNameInput").focus();y(function(){$("#defaultPage").enhanceWithin()},100)},function(L,M){console.log("Could not add to appStore")})});d.createList=H;function H(L,N,M){if(angular.isUndefined(N)){N=m}if(M==="categories"){N.type="CategoriesButtonsStems"}if(_.pluck(v.lists,"listName").indexOf(L)!==-1){console.log("LOG to UI: list name already exists");return -1}var O={};O.listName=L;O.controls=[N];O.section=M;v.lists.push(O);v.selected.list=O;f()}d.setSelectedList=A;function A(L){if(L<v.lists.length){v.selected.list=v.lists[L];v.selected.listIndex=L;f("selected")}}d.setSelecedListName=E;function E(L){v.selected.list.listName=L;v.lists[v.selected.listIndex].listName=L;f("selected");f("lists")}d.getSelectedList=n;function n(){return v.selected.list}d.persistData=f;function f(L){var N;if(N===undefined){N=u}var M=["controls","lists","selected","currentItemIndex","allListNames"];$.indexedDB(K).objectStore(i).get(N).then(function(P){var O=P;if(L!==undefined){P[L]=v[L]}else{angular.forEach(M,function(Q,R){P[Q]=v[Q]})}$.indexedDB(K).objectStore(i).put(O,N).then(function(){$.indexedDB(K).objectStore(i).get(N).then(function(Q){},function(Q,R){console.log("Could not get back updated data")})},function(Q,R){console.log("Could not update data")})},function(O,P){console.log("Could not select by key:",N)})}var x=["Tabs","RadioGroup","CheckboxGroup","Grid","SelectMenu","Collapsible","Block","Content","Div","TabRoot","Collapsible","CollapsibleSet","CategoriesButtons","CategoriesButtonsStems"];d.getControls=q;function q(){return v.controls}d.getSelected=s;function s(){return v.selected}var J=[];d.scanAndUpdateDuplicateIds=I;function I(L,M){if(angular.isArray(L)){angular.forEach(L,function(O,P){I(O,M)})}else{M=M?M:"children";if(angular.isDefined(L.properties)){if(L.properties.id&&J.indexOf(L.properties.id)!==-1){L.properties.id="newItem"+(++v.currentItemIndex);if(L.fieldsInfo){var N=_.filter(L.fieldsInfo,function(O){return O.fieldPath==="properties.id"});if(N.length>0){N[0].fieldValue=L.properties.id}}J.push(L.properties.id)}else{if(L.properties.id&&J.indexOf(L.properties.id)===-1){J.push(L.properties.id)}}}angular.forEach(L[M],function(O,P){I(O,M)})}return L}d.removeIdsFromCacheList=C;function C(M,N){if(angular.isArray(M)){angular.forEach(M,function(O,P){C(O,N)})}else{N=N?N:"children";if(angular.isDefined(M.properties)&&angular.isUndefined(M.properties.isIdUpdated)||angular.isDefined(M.properties)){var L=J.indexOf(M.properties.id);if(M.properties.id&&L!==-1){J.splice(L,1)}}angular.forEach(M[N],function(O,P){C(O,N)})}return M}d.updateControlsId=g;function g(L,M){if(angular.isArray(L)){angular.forEach(L,function(O,P){g(O,M)})}else{M=M?M:"children";if(angular.isDefined(L.properties)&&(angular.isUndefined(L.properties.isIdUpdated)||L.properties.isIdUpdated===false)){L.properties.id="newItem"+(++v.currentItemIndex);L.properties.isIdUpdated=true;if(L.fieldsInfo){var N=_.filter(L.fieldsInfo,function(O){return O.fieldPath==="properties.id"});if(N.length>0){N[0].fieldValue=L.properties.id}}}console.log("updateControlsId: ",L.properties.id);angular.forEach(L[M],function(O,P){g(O,M)})}return L}var z={diagnose:"children",categories:"categorieschildren",personalData:"children"};d.getChildNodeAttr=F;function F(L){return z[L]}function o(L,M){var N=z[M];if(angular.isUndefined(L[N])){L[N]=[]}}function w(N,M){var L={properties:{id:"newItem"+(++v.currentItemIndex)},type:M};var O=z[N];L[O]=[];return L}d.addNewSubItem=l;function l(M,L,Q,P){o(M,P);var O=w(P,Q);O.fieldsInfo=b.generate(Q,O.properties);if(O.fieldsInfo!==null){O=$.extend(true,{},b.getStructure(),O)}switch(Q){case"Checkbox":case"RadioButton":case"Slider":case"TextInput":case"Tabs":case"Option":O.properties.label=L;for(var N=0;N<O.fieldsInfo.length;N++){if(O.fieldsInfo[N].fieldPath==="properties.label"){O.fieldsInfo[N].fieldValue=L;break}}break;case"CheckboxGroup":case"RadioGroup":O.properties.legend=L;for(var N=0;N<O.fieldsInfo.length;N++){if(O.fieldsInfo[N].fieldPath==="properties.legend"){O.fieldsInfo[N].fieldValue=L;break}}break;case"Text":O.properties.text=L;for(var N=0;N<O.fieldsInfo.length;N++){if(O.fieldsInfo[N].fieldPath==="properties.text"){O.fieldsInfo[N].fieldValue=L;break}}break;case"Collapsible":O.properties.heading=L;for(var N=0;N<O.fieldsInfo.length;N++){if(O.fieldsInfo[N].fieldPath==="properties.heading"){O.fieldsInfo[N].fieldValue=L;break}}break;default:O.properties.label=L;if(O.fieldsInfo!==null&&angular.isDefined(O.fieldsInfo)){for(var N=0;N<O.fieldsInfo.length;N++){if(O.fieldsInfo[N].fieldPath==="properties.label"){O.fieldsInfo[N].fieldValue=L;break}}}break}var R=z[P];M[R].push(O);v.selected.item=O;f();return O}d.isContainer=G;function G(L){return(x.indexOf(L)!==-1)}d.getServiceValues=t;function t(){return v}d.fetchServiceValues=k;function k(){return h.getValue(u)}d.setSelectedItemScope=r;function r(L){p=L}d.getSelectedItemScope=D;function D(){return p}d.duplicateSelectedItem=e;function e(){if(p===null){return}var L=z[v.selected.list.section];var M=g(angular.copy(p.$modelValue),L);p.$parentNodeScope.$modelValue[L].push(M);f();y(function(){$("#defaultPage").enhanceWithin()},1)}d.removeList=c;function c(M){var L=v.lists[M].listName;v.lists.splice(M,1);if(v.selected.list.listName===L||v.lists.length<=0){v.selected.list={}}f()}d.deleteDB=j;function j(){$.indexedDB("id-app").deleteDatabase()}return d}}());(function(){angular.module("controlsTree").controller("CreateListController",a);a.$inject=["ControlsService","NotificationsService"];function a(b,f){var c=this;c.listName="";var e={type:"",properties:{label:""}},d=c.model={listName:"",listNameEdit:false,section:""};d.serviceValues=b.getServiceValues();c.createList=function(){if(d.listName===""){f.setMessage(f.ENTER_LIST_NAME_MSG);return}if(d.section===""){f.setMessage(f.SELECT_SECTION_MSG);return}if(b.createList(d.listName,undefined,d.section)===-1){f.setMessage(f.LIST_EXISTS_MSG);return}};c.onChangeSection=function(){};c.onRemoveList=function(h,g){h.stopPropagation();b.removeList(g)};c.onSelectList=function(g){b.setSelectedList(g);d.listName=b.getSelectedList().listName;d.listNameEdit=true};c.saveListName=function(){b.setSelecedListName(d.listName)};c.cancelSaveListName=function(){d.listNameEdit=false}}})();(function(){angular.module("controlsTree").controller("CreateListItemController",a);a.$inject=["ControlsService","NotificationsService","$scope","$timeout"];function a(b,g,d,f){var c=this;var e=c.model={};e.errorMsg="";e.itemLabel="";e.itemType="";c.add=function(){var j=b.getSelectedItemScope();if(j===null){g.setMessage(g.SELECT_CONTAINER_MSG);return}var h=j.$modelValue;if(!b.isContainer(h.type)){g.setMessage(g.SELECT_CONTAINER_MSG);return}if(e.itemLabel===""){g.setMessage(g.ENTER_ITEM_LABEL_MSG);return}g.resetMessage();var i=b.getSelected().list.section;b.addNewSubItem(h,e.itemLabel,e.itemType,i);f(function(){$("#defaultPage").enhanceWithin()},1)};c.duplicate=function(){b.duplicateSelectedItem()}}})();(function(){angular.module("controlsTree").controller("PropertiesController",a);a.$inject=["$scope","ControlsService"];function a(c,b){changedPathsArray=[];c.serviceValues=b.getServiceValues();c.saveChanges=function(){angular.forEach(changedPathsArray,function(e,d){_.deepSet(c.serviceValues.selected.item,e.path,e.value)});b.persistData();changedPathsArray.splice(0,changedPathsArray.length-1)};c.onChangeValue=function(g,d){if(changedPathsArray.length>0){var f=c.serviceValues.selected.item.fieldsInfo;var e=_.pluck(changedPathsArray,"path").indexOf(g);if(e===-1){changedPathsArray.push({path:g,value:d})}else{changedPathsArray[e].value=d}}else{changedPathsArray.push({path:g,value:d})}}}})();(function(){angular.module("controlsTree").service("ImportExportService",a);a.$inject=["FieldsGeneratorService","$q"];function a(k,g){var h={},f=";",e={controls:[],listName:"",section:""};function c(o){var t=o.split("\n"),r=0,m=0,u=[],p=null,n="children",s=[],q=0;angular.forEach(t,function(B,J){var x=B.split(f);x=_.map(x,function(O){return O.indexOf("\r")===-1?O:O.replace("\r","")});if(J===0){e.listName=x[0].split(":")[1];e.section=x[1].split(":")[1];n=x[2].split(":")[1];return}if(x.length<4){console.log("Invalid record: ",x);return}var F=parseInt(x[3]);if(F!==r&&F!==(r+1)&&F>r){console.log("Invalid record: ",x);return}if(F===0){u.splice(0,u.length);u.push(e.controls)}var G=x[1],w=false,H={};while(s.indexOf(G)!==-1){G+=q++;w=true}s.push(G);H.properties={id:G,label:x[0],text:x[0],heading:x[0]};var z=x[2];if(angular.isDefined(z)){H.type=x[2];H.fieldsInfo=k.generate(H.type,H.properties);if(H.fieldsInfo!==null){H=$.extend(true,{},k.getStructure(),H)}}if(x.length>4){H.fieldsInfo=[];for(var J=4;J<x.length;J++){var L=x[J].split(":");var A=L[0];var D=parseInt(L[1]);var E=L[2];if(isNaN(D)){console.log("Invalid Type: ",D)}if(A.indexOf("properties.")===-1){console.log("Not property");continue}if(D===k.types.BOOLEAN){E=E==="true"?true:false}var y=A.split(".")[1];if(y==="id"&&w){E=G}var N={fieldName:y,fieldPath:A,fieldValue:E,fieldType:D};if(D===k.types.SELECT&&L.length>3){N.fieldOptions=[];for(var I=3;I<L.length;I++){var M=L[I].split("~");N.fieldOptions.push({display:M[0],value:M[1]})}}H.fieldsInfo.push(N);_.deepSet(H,A,E)}}if(F===r){if(F===0){e.controls.push(H)}else{var K=u.length-1;var C=u[K];C.push(H)}}else{if(F===(r+1)){if(angular.isUndefined(p[n])){p[n]=[];u.push(p[n])}p[n].push(H)}else{if(F<r){var v=r-F;u.splice(u.length-v,v);if(F===0){e.controls.push(H)}else{var K=u.length-1;var C=u[K];C.push(H)}}}}p=H;r=F});return e}function i(n){var m=JSON.parse(n);e.listName=m.listName;e.section=m.section;e.controls=m.children[0].children;return e}h.importData=l;function l(q){e.controls=[];var p=g.defer();var o=".js-import-file";var n=$(o)[0].files[0];if(n===undefined){console.log("No File selected");return}var m=new FileReader();m.onload=function(r){if(q==="csv"){c(r.target.result)}else{i(r.target.result)}p.resolve(e)};m.readAsText(n);return p.promise}function b(n,p,o){var m=[];angular.forEach(n,function(r){var q=[];q.push(r.properties?r.properties.label:r.type);q.push(r.properties?r.properties.id:"placeholderId");q.push(r.type);q.push(p);angular.forEach(r.fieldsInfo,function(u,t){var s=u.fieldPath+":"+u.fieldType+":"+u.fieldValue;if(u.fieldType===k.types.SELECT&&u.fieldOptions.length>0){angular.forEach(u.fieldOptions,function(w,v){s+=":"+w.display+"~"+w.value})}q.push(s)});q[q.length-1]+="\r\n";m.push(q.join(f));if(angular.isDefined(r[o])){Array.prototype.push.apply(m,b(r[o],p+1,o))}});return m}h.processExportJSONData=j;function j(m){var n={type:"Design",listName:m.listName,section:m.section,zone:null,children:[{type:"Page",properties:{id:"page1"},children:m.controls}]};return n}h.exportData=d;function d(n,p,o){if(o==="csv"){var m=[];m.push("ListName:"+n.listName+f);m.push("ListSection:"+n.section+f);m.push("ChildAttribute:"+p);m[m.length-1]+="\r\n";Array.prototype.push.apply(m,b(n.controls,0,p));return m.join("")}else{if(o==="json"){return JSON.stringify(j(n))}}}return h}}());(function(){angular.module("controlsTree").controller("ImportExportController",a);a.$inject=["ControlsService","ImportExportService"];function a(b,e){var c=this;c.listName="";var f={type:"",properties:{label:""}},d=c.model={fileFormat:"csv"};c.importAction=function(){var g=e.importData(d.fileFormat);if(g===undefined){return}g.then(function(h){if(h.controls.length>0){b.createList(h.listName,h.controls[0],h.section)}})};c.exportAction=function(){var k=b.getSelected().list;console.log("listToExport: ",k);if(k===null||k.controls===null){NS.setMessage(NS.SELECT_CONTAINER_MSG);return}var m=b.getChildNodeAttr(k.section);c.exportData=e.exportData(k,m,d.fileFormat);var i={"Export.csv":{data:"\n",type:"text/csv"},"Export.json":{type:"text/json"}};var h="Export.csv";if(d.fileFormat==="json"){h="Export.json"}i[h].data=c.exportData;var j=new File([i[h].data],h,{type:i[h].type,lastModified:Date.now()});var g=URL.createObjectURL(j,{oneTimeOnly:true});var l=document.createElement("a");l.href=g;l.download=h;l.textContent=h;$("#filesForDownload").html(l)}}}());(function(){angular.module("controlsTree").controller("ControlsTreeController",a);a.$inject=["$scope","$q","$timeout","ControlsService","DirectiveCreateService","NotificationsService"];function a(d,c,g,b,f,h){var e=d.model={};e.controlsServiceValues=b.getServiceValues();d.options={dragStart:function(i){},remove:function(i){console.log("remove");b.persistData()},dropped:function(i){console.log("dropped");e.selectedItemScope=i.source.nodeScope;e.controlsServiceValues.selected.item=i.source.nodeScope.$modelValue;b.setSelectedItemScope(e.selectedItemScope);b.persistData();h.setMessage(h.SELECTED_MSG,i.source.nodeScope.$modelValue.type);g(function(){$("#defaultPage").enhanceWithin()},1)}};d.toggle=function(i){i.toggle();b.persistData()};d.isContainer=function(i){return b.isContainer(i)}}})();