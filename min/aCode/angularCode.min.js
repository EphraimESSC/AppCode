(function () {
  'use strict';
  angular.module('myapp',  [  'myapp.diagnose',
                              'myapp.classification',
                              'myapp.diagnose-config',
                              'panels-module',
                              'ui',
                              'data',
                              'controlsTree',
                              'webcam'
                            ]);
})();

/* Min file (c) */
!function(){function a(a,b,c){FunctionalityModule.setSharedData(c.sharedData),FunctionalityModule.setSharedDataService(b)}angular.module("myapp").run(a),a.$inject=["ClassificationUtilitiesService","SharedDataService","Data"]}();
//# sourceMappingURL=initExternalReferences.js.map
/* Min file (c) */
!function(){"use strict";function a(){return{RadioGroupCount:0,SliderCount:0,SelectMenuCount:0,SelectedControls:{},ClassificationDataAdded:[],tabHierarchyHeadings:"",sharedData:{controls:[],classificationData:[],ControlCategoriesInfo:[],RecentlySelectedControlDetails:void 0,diagnoseItems:void 0,isControlsValuesBeingSet:!1}}}function b(a){var b={};return b.get=function(b){return a[b]},b.set=function(b,c){a[b]=c},b.getControls=function(){return a.sharedData.controls},b.setControls=function(b){a.sharedData.controls=b},b.getClassificationData=function(){return a.sharedData.classificationData},b.setClassificationData=function(b){a.sharedData.classificationData=b},b.getControlCategoriesInfo=function(){return a.sharedData.ControlCategoriesInfo},b.setControlCategoriesInfo=function(b){a.sharedData.ControlCategoriesInfo=b},b.getRecentlySelectedControlDetails=function(){return a.sharedData.RecentlySelectedControlDetails},b.setRecentlySelectedControlDetails=function(b){a.sharedData.RecentlySelectedControlDetails=b},b.getDiagnoseItems=function(){return a.sharedData.diagnoseItems},b.setDiagnoseItems=function(b){a.sharedData.diagnoseItems=b},b.getIsControlsValuesBeingSet=function(){return a.sharedData.isControlsValuesBeingSet},b.setIsControlsValuesBeingSet=function(b){a.sharedData.isControlsValuesBeingSet=b},b}angular.module("data",[]).factory("Data",[a]).service("SharedDataService",b),b.$inject=["Data"]}();
//# sourceMappingURL=SharedDataService.js.map
/* Min file (c) */
function updateId(a,b,c){angular.forEach(c,function(c,d){(angular.isDefined(c.properties)&&angular.isUndefined(c.properties.isIdUpdated)||angular.isDefined(c.properties)&&c.data.isIdUpdated===!1)&&(c.properties.id=(angular.isDefined(a)?a:"")+(angular.isDefined(b)?b:"")+c.properties.id,c.properties.diagnoseControlId=a,c.properties.isIdUpdated=!0),c.categorieschildren&&updateId(a,b,c.categorieschildren)})}function createDirective(a){function b(b,c,d,e,f,g,h){function i(a){var b=a.scope,c=a.iElem;"RadioGroup"===b.controls.type&&(e.processHierarchyLabelsForControl(b.controls,b.parent),processRadioGroup(b,g,h)),"CheckboxGroup"===b.controls.type&&(e.processHierarchyLabelsForContainer(b.controls,b.parent),processCheckboxGroup(b)),"RadioButton"===b.controls.type&&(b.controls.uniqueProperty=g.get("uniqueProperty")),"Checkbox"===b.controls.type&&(e.processHierarchyLabelsForControl(b.controls,b.parent),processCheckbox(b,g,c,h)),"TextInput"===b.controls.type&&(e.processHierarchyLabelsForControl(b.controls,b.parent),processTextInput(b,g,h)),"Text"===b.controls.type&&(g.set("TextLabel",b.controls.properties.text),b.controls.properties.label=b.controls.properties.text),"ToggleSwitch"===b.controls.type&&processToggleSwitch(b,g,h),"Slider"===b.controls.type&&processSlider(b,g,c,h),"Grid"===b.controls.type&&processGrid(b),"SelectMenu"===b.controls.type&&processSelectMenu(b,g,c,h),"Collapsible"===b.controls.type&&e.processHierarchyLabelsForContainer(b.controls,b.parent)}return{restrict:"E",scope:{controls:"=",groupname:"=",parent:"=",uniqueProperty:"@",tabHierarchyHeadings:"@",attachCategories:"="},compile:function(e,h){return{pre:function(e,h,j){d.all(f.getDeferedArray()).then(function(){if("r"===a&&void 0!==e.uniqueProperty&&g.set("uniqueProperty",e.uniqueProperty),angular.isDefined(e.tabHierarchyHeadings)&&g.set("tabHierarchyHeadings",e.tabHierarchyHeadings),("true"===e.attachCategories||e.attachCategories===!0||e.controls.attachCategories===!0)&&(e.controls.attachCategories=!0,angular.forEach(e.controls.children,function(a,b){a.attachCategories=!0})),void 0===e.controls||null===e.controls||void 0===e.controls.type)return void console.log("Undefined: ",e.controls);if("TabRoot"===e.controls.type&&console.log("createDirective: ",e.controls),"Tabs"===e.controls.type&&e.controls.categories&&angular.isDefined(e.attachCategories)&&e.attachCategories){var d="CategoriesButtonsStems"===e.controls.categories[0].type?e.controls.categories[0].categorieschildren:e.controls.categories;g.setClassificationData(d)}var f=c.get(e.controls.type);if(angular.isUndefined(f))return void console.log("Template not available for type: ",e.controls.type);var j={};j.scope=e,j.iElem=h,i(j);var k=angular.element(f);b(k)(e),h.append(k),setTimeout(function(){angular.isDefined(e.controls.properties)&&e.controls.properties.enhance&&($("#defaultPage").enhanceWithin(),console.log("Enhance Page: ")),("Tabs"===e.controls.type||"TabRoot"===e.controls.type)&&("TabRoot"===e.controls.type&&$("#defaultPage").enhanceWithin(),h.tabs(),h.data("tabsInitialized",!0))},10)})},post:function(a,b,c){}}}}}return b.$inject=["$compile","$templateCache","$q","DirectiveHelperService","DirectiveCreateService","SharedDataService","ControlsService"],b}
//# sourceMappingURL=moduleHelperFunctions.js.map
/* Min file (c) */
!function(){"use strict";function a(){return{restrict:"E",scope:{controls:"=",attachCategories:"="},template:'<div ng-if="angular.isArray(controls)">                              <div ng-repeat="c in controls">                                      <r controls="c" attach-categories="attachCategories"></r>        </div>                                                           </div>                                                             <div ng-if="!angular.isArray(controls)">                             <r controls="controls" attach-categories="attachCategories"></r> </div>                                                             '}}function b(a,b,c,d){var e=["Tabs","RadioGroup","CheckboxGroup","RadioButton","Checkbox","TextInput","Text","ToggleSwitch","Slider","Grid","SelectMenu","Collapsible","CollapsibleSet","Block","CategoriesButtons","CategoriesButtonsStems","CategoriesRoot","Div","TabRoot","Design","Content","Page"],f=[];d.setDeferedArray(f),angular.forEach(e,function(d,e){var g=c.defer();f.push(g.promise),b.get("/Components/UIComponents/templates/"+d+".html").success(function(b){a.put(d,b),g.resolve()})})}angular.module("ui",["data"]).run(b).directive("r",createDirective("r")).directive("showcontols",a).directive("tab",createDirective("tab")),b.$inject=["$templateCache","$http","$q","DirectiveCreateService"]}();
//# sourceMappingURL=initModule.js.map
/* Min file (c) */
!function(){"use strict";function a(){return{restrict:"A",link:function(a,b,c,d){"controlgroup"===c.role}}}angular.module("ui").directive("role",a),a.$inject=[]}();
//# sourceMappingURL=RoleDirective.js.map
/* Min file (c) */
!function(){function a(a){function b(a){e=a}function c(){return e}var d={},e=null;return d.createDirective=createDirective,d.setDeferedArray=b,d.getDeferedArray=c,d}angular.module("ui").service("DirectiveCreateService",a),a.$inject=["$q"]}();
//# sourceMappingURL=DirectiveCreateService.js.map
/* Min file (c) */
!function(){"use strict";angular.module("ui").directive("enhanceUi",[function(){return{restrict:"A",link:function(a,b,c){{var d=a.$eval(c.enhanceUi);d.event,d.condition}$(b.parent()).trigger("updatelayout").listview("refresh")}}}])}();
//# sourceMappingURL=enhanceUIDirective.js.map
/* Min file (c) */
!function(){"use strict";var a=function(a,b,c){var d={};return d.restrict="E",d.scope={categorieschildren:"=",templateName:"@"},d.compile=function(c,d){return{pre:function(c,d,e,f){var g="",h="";h="CategoriesButtons",void 0!==c.templateName&&(h=c.templateName),g=b.get(h);var i=angular.element(g);a(i)(c),d.append(i)},post:function(a,b,c){setTimeout(function(){$('[data-type="horizontal"]').controlgroup({type:"horizontal"}),b.find('[type="checkbox"]').checkboxradio()},1)}}},d};angular.module("ui").directive("categories",["$compile","$templateCache","Data",a])}();
//# sourceMappingURL=CategoriesDirective.js.map
/* Min file (c) */
function processRadioGroup(a,b,c){if(b.set("RadioGroupCount",b.get("RadioGroupCount")+1),a.controls.groupname="RadioGroup"+b.get("RadioGroupCount"),a.controls.labelPrefix=b.get("tabHierarchyHeadings"),a.controls.name=a.controls.properties.legend,void 0===a.controls.properties.id&&(a.controls.properties.id="RadioGroup"+b.get("RadioGroupCount")),a.$watch("controls.value",function(c,d){if(void 0!==c){var e={controlId:a.controls.properties.id,label:a.controls.labelPrefix+a.controls.properties.legend,heirarchyLabels:a.controls.heirarchyLabels,type:a.controls.type,valueLabel:a.controls.value,value:a.controls.value,labelPrefix:a.controls.labelPrefix,categoriesInfo:a.controls.categorieschildren};createControlLabel(e),b.get("SelectedControls")[a.controls.properties.id]=e,a.controls.showCategory=!0,b.setRecentlySelectedControlDetails(e),!b.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&openPanel()}else delete b.get("SelectedControls")[a.controls.properties.id],a.controls.showCategory=!1,b.setRecentlySelectedControlDetails(void 0)}),a.controls.attachCategories){var d=angular.copy(b.getClassificationData());updateId(a.controls.properties.id,b.get("uniqueProperty"),d),b.get("ClassificationDataAdded").push({controlId:a.controls.properties.id,uniqueProperty:b.get("uniqueProperty"),classification:d}),a.controls.categorieschildren=d}}function processCheckboxGroup(a){a.controls.name=a.controls.properties.legend,angular.forEach(a.controls.children,function(b,c){b.name=a.controls.name})}function processCheckbox(a,b,c){var d=b.get("uniqueProperty");if(a.controls.uniqueProperty=angular.isDefined(d)?d:"",a.controls.properties.id=a.controls.uniqueProperty+a.controls.properties.id,a.controls.labelPrefix=b.get("tabHierarchyHeadings"),a.controls.attachCategories){var e=angular.copy(b.getClassificationData());updateId(a.controls.properties.id,b.get("uniqueProperty"),e),b.get("ClassificationDataAdded").push({controlId:a.controls.properties.id,uniqueProperty:b.get("uniqueProperty"),classification:e}),a.controls.categorieschildren=e}a.$watch("controls.value",function(c,d){if(c!==!0||d!==!1&&void 0!==d)c===!1&&d===!0&&(void 0!==b.get("SelectedControls")[a.controls.properties.id]&&delete b.get("SelectedControls")[a.controls.properties.id],a.controls.showCategory=!1,b.setRecentlySelectedControlDetails(void 0));else{var e={controlId:a.controls.properties.id,label:a.controls.name?a.controls.name:"",heirarchyLabels:a.controls.heirarchyLabels,type:a.controls.type,valueLabel:a.controls.properties.label,labelPrefix:a.controls.labelPrefix,value:a.controls.value,categoriesInfo:a.controls.categorieschildren};createControlLabel(e),b.get("SelectedControls")[a.controls.properties.id]=e,a.controls.showCategory=!0,b.setRecentlySelectedControlDetails(e),!b.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&openPanel()}})}function processSlider(a,b,c){a.controls.value=0;var d=b.get("uniqueProperty");if(a.controls.uniqueProperty=angular.isDefined(d)?d:"",a.controls.properties.id=a.controls.uniqueProperty+a.controls.properties.id,a.controls.labelPrefix=b.get("tabHierarchyHeadings"),c.on("change",'input[type="number"]',function(){var c=parseInt($(this).val());if(!(0>=c)){a.controls.value=c;var d={controlId:a.controls.properties.id,label:a.controls.properties.label,type:a.controls.type,valueLabel:a.controls.value,labelPrefix:a.controls.labelPrefix,value:a.controls.value,categoriesInfo:a.controls.categorieschildren};createControlLabel(d),b.get("SelectedControls")[a.controls.properties.id]=d,b.setRecentlySelectedControlDetails(d),a.controls.showCategory=!0,!b.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&openPanel(),a.$apply()}}),a.controls.attachCategories){var e=angular.copy(b.getClassificationData());updateId(a.controls.properties.id,d,e),b.get("ClassificationDataAdded").push({controlId:a.controls.properties.id,uniqueProperty:d,classification:e}),a.controls.categorieschildren=e}}function processTextInput(a,b){var c=b.get("uniqueProperty");if(a.controls.uniqueProperty=c,a.controls.properties.id=c+a.controls.properties.id,a.controls.labelPrefix=b.get("tabHierarchyHeadings"),a.$watch("controls.value",function(c,d){if(void 0!==c&&""!==c){var e={controlId:a.controls.properties.id,label:a.controls.properties.label,type:a.controls.type,valueLabel:a.controls.value,labelPrefix:a.controls.labelPrefix,value:a.controls.value,categoriesInfo:a.controls.categorieschildren};createControlLabel(e),b.get("SelectedControls")[a.controls.properties.id]=e,a.controls.showCategory=!0,b.setRecentlySelectedControlDetails(e),!b.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&openPanel()}else void 0!==b.get("SelectedControls")[a.controls.properties.id]&&delete b.get("SelectedControls")[a.controls.properties.id],a.controls.showCategory=!1,b.setRecentlySelectedControlDetails(void 0)}),a.controls.attachCategories){var d=angular.copy(b.getClassificationData());updateId(a.controls.properties.id,c,d),b.get("ClassificationDataAdded").push({controlId:a.controls.properties.id,uniqueProperty:c,classification:d}),a.controls.categorieschildren=d}}function processToggleSwitch(a,b){b.set("SliderCount",b.get("SliderCount")+1),void 0===a.controls.properties.id&&(a.controls.properties.id="ToggleSwitch"+b.get("SliderCount")),(void 0===a.controls.properties.label||""===a.controls.properties.label)&&(a.controls.properties.label=b.get("TextLabel")),b.set("TextLabel","");var c=b.get("uniqueProperty");if(a.controls.uniqueProperty=angular.isDefined(c)?c:"",a.controls.properties.id=a.controls.uniqueProperty+a.controls.properties.id,a.controls.labelPrefix=b.get("tabHierarchyHeadings"),a.controls.value="false",a.$watch("controls.value",function(c,d){if("true"===c&&"false"===d){var e={controlId:a.controls.properties.id,label:a.controls.properties.label,type:a.controls.type,valueLabel:a.controls.properties.label1,labelPrefix:a.controls.labelPrefix,value:a.controls.value,categoriesInfo:a.controls.categorieschildren};createControlLabel(e),b.get("SelectedControls")[a.controls.properties.id]=e,a.controls.showCategory=!0,b.setRecentlySelectedControlDetails(e),!b.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&openPanel()}else"false"===c&&(delete b.get("SelectedControls")[a.controls.properties.id],a.controls.showCategory=!1,b.setRecentlySelectedControlDetails(void 0))}),a.controls.attachCategories){var d=angular.copy(b.getClassificationData());updateId(a.controls.properties.id,c,d),b.get("ClassificationDataAdded").push({controlId:a.controls.properties.id,uniqueProperty:c,classification:d}),a.controls.categorieschildren=d}}function processGrid(a){var b=a.controls,c=b.properties&&b.properties.rows?b.properties.rows:1;void 0===b.properties&&(b.properties={}),b.properties.uiClass=GridBuilder.getGridClass(b.children,c),GridBuilder.setGridControlLabels(b)}function processSelectMenu(a,b,c){if(b.set("SelectMenuCount",b.get("SelectMenuCount")+1),void 0===a.controls.properties.id&&(a.controls.properties.id="SelectMenu"+b.get("SelectMenuCount")),a.controls.labelPrefix=b.get("tabHierarchyHeadings"),a.controls.properties.options&&a.controls.properties.options.children&&(a.controls.previousValue=a.controls.value=a.controls.defaultValue=a.controls.properties.options.children[0].value,a.controls.previousValueLabel=a.controls.valueLabel=a.controls.defaultValueLabel=a.controls.properties.options.children[0].text),c.on("change","select.control",function(c){var d=$(this).val(),e=$('option[value="'+d+'"]:selected',$(this)).text();if(d!==a.controls.previousValue&&d!==a.controls.defaultValue||e!==a.controls.previousValueLabel&&e!==a.controls.defaultValueLabel){a.controls.previousValue=a.controls.value,a.controls.previousValueLabel=a.controls.valueLabel,a.controls.value=d,a.controls.valueLabel=e;var f={controlId:a.controls.properties.id,label:a.controls.properties.label||a.controls.properties.options.label,type:a.controls.type,valueLabel:a.controls.valueLabel,labelPrefix:a.controls.labelPrefix,value:a.controls.value,categoriesInfo:a.controls.categorieschildren};createControlLabel(f),b.get("SelectedControls")[a.controls.properties.id]=f,a.controls.showCategory=!0,b.setRecentlySelectedControlDetails(f),!b.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&openPanel()}else delete b.get("SelectedControls")[a.controls.properties.id],a.controls.showCategory=!1,b.setRecentlySelectedControlDetails(void 0);a.$digest()}),a.controls.attachCategories){var d=angular.copy(b.getClassificationData());updateId(a.controls.properties.id,b.get("uniqueProperty"),d),b.get("ClassificationDataAdded").push({controlId:a.controls.properties.id,uniqueProperty:b.get("uniqueProperty"),classification:d}),a.controls.categorieschildren=d}}function openPanel(){$("#leftpanel").panel("open"),$("#closePanelButton").removeClass("ui-btn-active")}function createControlLabel(a){var b=(a.labelPrefix?a.labelPrefix:"")+(a.label?(a.labelPrefix?" : ":"")+a.label:"")+(a.heirarchyLabels&&a.heirarchyLabels.length>0?" : "+a.heirarchyLabels.join(" : "):"");a.controlLabel=b}
//# sourceMappingURL=DirectiveHelperFunctions.js.map
/* Min file (c) */
!function(){function a(){function a(a,c){a.heirarchyLabels||(a.heirarchyLabels=[]),a.heirarchyLabels=(angular.isDefined(c)&&angular.isDefined(c.heirarchyLabels)?angular.copy(c.heirarchyLabels):[]).concat(a.heirarchyLabels);var d=b(a);d&&a.heirarchyLabels.push(d)}function b(a){return"Collapsible"===a.type&&a.properties.heading?a.properties.heading:"CheckboxGroup"===a.type&&a.name?a.name:void 0}function c(a,b){angular.isUndefined(b)||(a.heirarchyLabels=b.heirarchyLabels?angular.copy(b.heirarchyLabels):[])}var d={};return d.processHierarchyLabelsForContainer=a,d.processHierarchyLabelsForControl=c,d}angular.module("ui").service("DirectiveHelperService",a)}();
//# sourceMappingURL=DirectiveHelperService.js.map
(function () {
  
  angular.module('webcam', ['myapp.diagnose-config']);
  
} ());

/* Min file (c) */
!function(){function a(a){var b={};return b.restrict="E",b.link=function(b,c,d){function e(a){window.stream=a,h.src=window.URL?window.URL.createObjectURL(a):a,h.play()}function f(a){console.log("navigator.getUserMedia error: ",a)}navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia;var g={audio:!1,video:!0},h=c[0];a.setVideoDisplay(h),navigator.getUserMedia(g,e,f)},b}function b(a){var b={};return b.restrict="E",b.link=function(b,c,d){var e=c[0],f=e.getContext("2d");a.setCanvasContext(f)},b}angular.module("webcam").directive("video",a).directive("canvas",b),a.$inject=["WebCamService"],b.$inject=["WebCamService"]}();
//# sourceMappingURL=VideoDirective.js.map
/* Min file (c) */
!function(){function a(a,b){function c(){b.getValue("webCamData").then(function(a){a&&Array.prototype.push.apply(k.imagesCollection,a)})}function d(){return j.promise}function e(a){k.videoDisplay=a,j.resolve(a)}function f(a){k.canvasContext=a}function g(){k.canvasContext.drawImage(k.videoDisplay,0,0,640,480);var a={};a.src=canvas.toDataURL("image/png"),k.imagesCollection.push(a),b.setValue("webCamData",k.imagesCollection)}function h(){return k.imagesCollection}var i={},j=a.defer(),k={imagesCollection:[]};return i.initialize=c,c(),i.getVideoDisplay=d,i.setVideoDisplay=e,i.setCanvasContext=f,i.captureFrame=g,i.getImagesCollection=h,i}angular.module("webcam").service("WebCamService",a),a.$inject=["$q","DBService"]}();
//# sourceMappingURL=WebCamService.js.map
/* Min file (c) */
!function(){function a(a,b){var c=this,d=c.model={};d.values={},d.values.imagesCollection=b.getImagesCollection(),c.onSnapPhoto=function(){b.captureFrame()}}angular.module("webcam").controller("WebCamSectionController",a),a.$inject=["$scope","WebCamService"]}();
//# sourceMappingURL=WebCamSectionController.js.map
/* Min file (c) */
!function(){"use strict";angular.module("myapp.diagnose",[])}();
//# sourceMappingURL=initModule.js.map
/* Min file (c) */
!function(){function a(a,b,c){DiagnoseTabFunctionality.setDiagnoseDataService(a),DiagnoseTabFunctionality.setDiagnoseClassificationDataService(b),DiagnoseTabFunctionality.setDiagnoseClassificationUtilitiesService(c)}angular.module("myapp.diagnose").run(a),a.$inject=["DiagnoseDataService","DiagnoseClassificationDataService","DiagnoseClassificationUtilitiesService"]}();
//# sourceMappingURL=initExternalReferences.js.map
/* Min file (c) */
!function(){function a(a){function b(a){a&&angular.forEach(a.children,function(a,d){angular.isDefined(a.value)&&a.value===!0&&(a.value=!1),angular.isDefined(a.categorieschildren)&&c(a.categorieschildren),angular.isDefined(a.children)&&b(a)})}function c(a){angular.forEach(a,function(a,b){angular.isDefined(a.data)&&a.data.value===!0&&(a.data.value=!1),angular.isDefined(a.categorieschildren)&&c(a.categorieschildren)})}function d(a,b){angular.forEach(a.children,function(a,c){angular.isDefined(a.properties)&&angular.isDefined(a.properties.id)&&a.properties.id===b.controlId&&("true"===b.controlValue||b.controlValue===!0)&&(a.value=!0,a.categorieschildren=b.categorieschildren),angular.isDefined(a.children)&&d(a,b)})}function e(b){var c={};return c.deferred=a.defer(),c.tableReference="diagnoseData",c.queryReference="selectDataWhere",c.queryParametersArray=[[b]],DataModule.executeAll(c),c.deferred.promise}function f(b){var c=a.defer(),d={};return d.tableQueryReference=["diagnoseData","insertData","insert"],d.queryParametersArray=b,d.deferred=c,d.batchExecution=!0,DataModule.executeQuery(d),c.promise}function g(b,c){var d={};return d.deferred=a.defer(),d.tableReference="diagnoseData",d.queryReference="deleteData",d.queryParametersArray=[[b]],d.queryType="delete",DataModule.executeAll(d),d.deferred.promise}var h={};return h.resetControls=b,h.setControlValue=d,h.fetchDiagnoseData=e,h.insertDiagnoseDataBatch=f,h.deleteDiagnoseData=g,h}angular.module("myapp.diagnose").service("DiagnoseDataService",a),a.$inject=["$q"]}();
//# sourceMappingURL=DiagnoseDataService.js.map
/* Min file (c) */
!function(){"use strict";function a(a){function b(b){var c=a.defer(),d={};return d.tableReference="diagnoseClassification",d.queryReference="selectDataWhere",d.queryParametersArray=[[b]],d.deferred=c,DataModule.executeAll(d),c.promise}function c(b){var c=a.defer(),d={};return d.tableReference="diagnoseClassification",d.queryReference="insertData",d.queryParametersArray=b,d.deferred=c,d.queryType="insert",DataModule.executeAll(d),c.promise}function d(b){var c=a.defer(),d={};return d.deferred=c,d.tableReference="diagnoseClassification",d.queryReference="deleteDataWhere",d.queryParametersArray=_.map(b,function(a){return[a]}),d.queryType="delete",d.callback=function(){},d.deferred=c,DataModule.executeAll(d),c.promise}var e={};return e.fetchDiagnoseClassificationData=b,e.insertDiagnoseClassificationData=c,e.deleteDiagnoseClassificationInfo=d,e}angular.module("myapp.diagnose").service("DiagnoseClassificationDataService",a),a.$inject=["$q"]}();
//# sourceMappingURL=DiagnoseClassificationDataService.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c,d,e){function f(d,f){var g=a.defer(),h=[];return angular.forEach(d,function(a,d){var g=a.id||a.diagnoseItemId;angular.isUndefined(a.categorieschildren)&&(a.categorieschildren=angular.copy(e.getClassificationData())),updateId(a.controlId,f,a.categorieschildren);var i=b.fetchDiagnoseClassificationData(g);h.push(i),i.then(function(b){var d=_.pluck(b,"classificationId");c.setClassificationValues(d,a.categorieschildren)})}),d.isIdUpdated=!0,$.when.apply(null,h).done(function(){g.resolve(d)}),g.promise}function g(c){var e=a.defer();return d.fetchDiagnoseData(c).then(function(a){var f=_.pluck(a,"id");b.deleteDiagnoseClassificationInfo(f).then(function(){d.deleteDiagnoseData(c).then(function(){e.resolve()})})}),e.promise}function h(a,d,f){var g={},h=[];$.each(f,function(a,d){var f=d.id||d.diagnoseItemId;g[f]={name:d.controlLabel+" : "+d.controlValueLabel,categorized:!1};var i={},j=angular.copy(e.getClassificationData()),k=$.Deferred();h.push(k.promise()),b.fetchDiagnoseClassificationData(f).then(function(a){void 0!==a&&0!==a.length&&(c.setClassificationValues(_.pluck(a,"classificationId"),j),angular.forEach(j,function(a,b){a.data.value&&(i[a.data.name]=[],i[a.data.name].push(a.data.name),c.constructCategorizationTree(i[a.data.name],a.categorieschildren))}),g[f].categorized=!0,g[f].categorizationMap=i),k.resolve()})});var i=$.Deferred();return $.when.apply(null,h).done(function(){i.resolve(g)}),i.promise()}var i={};return i.setDiagnoseItemsWithDBValues=f,i.deleteDiagnoseDataAndClassification=g,i.categorizeDiagnoseItems=h,i}angular.module("myapp.diagnose").service("DiagnoseClassificationUtilitiesService",a),a.$inject=["$q","DiagnoseClassificationDataService","ClassificationUtilitiesService","DiagnoseDataService","SharedDataService"]}();
//# sourceMappingURL=DiagnoseClassificationUtilitiesService.js.map

/* Min file (c) */
!function(){function a(a){function b(){c()}function c(b,c){return angular.isDefined(b)&&(g=b),angular.isDefined(c)&&(h=c),f=a.defer(),$.indexedDB(g,{schema:{1:function(a){var b=a.createObjectStore(h,{autoIncrement:!0});b.createIndex("itemId")}}}).done(function(){i=$.indexedDB(g).objectStore(h),f.resolve()}),f.promise}function d(b,c){var d=a.defer();return f.promise.then(function(){i.get(b).then(function(a){var b;b=angular.isDefined(c)?a[c]:a,d.resolve(b)},function(a,b){console.log("Could not add to appStore",a,b),d.resolve({error:a})})}),d.promise}function e(b,c){var d=a.defer();return f.promise.then(function(){i.put(c,b).then(function(){d.resolve(c)},function(a,b){console.log("Could not update data",a,b),d.resolve({error:a})})}),d.promise}var f,g="TCMD",h="appStore",i=null;b();var j={};return j.openDatabase=c,j.getValue=d,j.setValue=e,j}angular.module("db-module",[]).service("DBService",a),a.$inject=["$q"]}();
//# sourceMappingURL=DBService.js.map
/* Min file (c) */
!function(){function a(){return function(a,b,c){return _.filter(a,function(a){return a[b]===c})}}function b(a,b,c,d,e){function f(){j.values={},j.values.tabInfo=[{properties:{id:"rootId"},type:"TabRoot",children:[]}],g(),h()}function g(){c.getValue("diagnoseTabModel").then(function(c){if(c){c.tabInfo&&b.scanAndUpdateDuplicateIds(c.tabInfo),j.values=c;var e=b.scanAndUpdateDuplicateIds(angular.copy(j.values.tabInfo));a.findDeepestNode(e);var f=a.getDeepestNode();f&&f.properties&&(f.enhance=!0),d.setControls(e)}})}function h(){a.fetchServiceValues().then(function(a){j.controlsServiceValues=a,j.values.tabInfo.length>0&&angular.forEach(j.values.tabInfo[0].children,function(b,c){if(b.selectedList){var d=_.findIndex(a.lists,function(a){return a.listName===b.selectedList.listName});-1!==d&&(b.selectedList=a.lists[d])}b.categoriesList&&(d=_.findIndex(a.lists,function(a){return a.listName===b.categoriesList.listName}),-1!==d&&(b.categoriesList=a.lists[d]))}),setTimeout(function(){$("#defaultPage").enhanceWithin(),$("#diagnoseConfigSection select.selected-list").selectmenu("refresh")},1)})}var i=this,j=i.model={};i.initialize=f,f(),i.onChangeTabChoice=function(){},i.onFileInput=function(b){console.log("file",b.files);var c=$(b).attr("index"),d=new FileReader;d.onload=function(d){j.values.tabInfo[0].children[c].fileName=b.files[0].name,j.values.tabInfo[0].children[c].children&&a.removeIdsFromCacheList(j.values.tabInfo[0].children[c].children);var e=JSON.parse(d.target.result);a.scanAndUpdateDuplicateIds(e),j.values.tabInfo[0].children[c].children=e},d.readAsText(b.files[0])},i.onChangeList=function(a){j.values.tabInfo[0].children[a].children=j.values.tabInfo[0].children[a].selectedList.controls},i.onChangeCategories=function(a){var b=j.values.tabInfo[0].children[a].categoriesList.controls;j.values.tabInfo[0].children[a].categories=b;var c=[];_.deepMapValues(b,function(a,b){"label"===b[b.length-1]&&c.push(a)}),j.values.tabInfo[0].children[a].categoriesListArray=c},i.onDeleteDiagnoseTab=function(a){b.removeIdsFromCacheList(j.values.tabInfo[0].children[a].children),b.removeIdsFromCacheList(j.values.tabInfo[0].children[a].categories,"categorieschildren"),j.values.tabInfo[0].children.splice(a,1)},i.onAddDiagnoseTab=function(){j.values.tabInfo[0].children.push({properties:{label:"Diagnose Tab "+(j.values.tabInfo[0].children.length+1),id:b.generateUniqueId()},type:"Tabs"}),setTimeout(function(){$("#defaultPage").enhanceWithin()},1)},i.onSaveDiagnoseConfig=function(){c.setValue("diagnoseTabModel",j.values);var a=b.scanAndUpdateDuplicateIds(angular.copy(j.values.tabInfo));d.setControls(a),ConfigTabFunctionality.setAppRefreshPending()}}angular.module("myapp.diagnose-config",["controls-module","db-module","data"]).filter("property",a).controller("DiagnoseConfigController",b),b.$inject=["ControlsService","IdentityService","DBService","SharedDataService","$scope"]}();
//# sourceMappingURL=DiagnoseConfigController.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b){b.initClassificationData().then(function(b){a.sharedData=b,FunctionalityModule.enhancePage()}),a.addClassification=function(){void 0!==a.inputClassificationName&&""!==a.inputClassificationName&&(b.addClassification(a.inputClassificationName).then(function(){a.inputClassificationName="",FunctionalityModule.enhancePage(),$(".js-classify-diagnose-button").removeClass("ui-disabled")}),ConfigTabFunctionality.setAppRefreshPending(!0))},a.addSubClassification=function(c,d){var e=a.sharedData.classificationData[d].subCategoryInput;void 0!==e&&""!==e&&(b.addSubClassification(d,c,e).then(function(){}),ConfigTabFunctionality.setAppRefreshPending(!0))},a.deleteClassification=function(a,c){b.deleteSubCategoriesWithParent(a).then(function(){b.deleteCategory(a,c)}),ConfigTabFunctionality.setAppRefreshPending(!0)},a.deleteSubCategory=function(a,c){b.deleteSubCategory(a,c).then(function(){ConfigTabFunctionality.setAppRefreshPending(!0)})}}angular.module("myapp").controller("ConfigureClassificationController",a),a.$inject=["$scope","ClassificationDataService"]}();
//# sourceMappingURL=aConfigureClassificationController.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c,d){a.SelectedControls=d.SelectedControls,a.sharedData=d.sharedData,a.ClassificationDataAdded=d.ClassificationDataAdded,a.saveDiagnoseItemsData=function(){DiagnoseTabFunctionality.saveDiagnoseData(d)}}angular.module("myapp").controller("DiagnoseController",a),a.$inject=["$scope","$compile","SharedDataService","Data"]}();
//# sourceMappingURL=aDiagnoseController.js.map
(function () {
  'use strict';
  angular.module('myapp.classification', []);
})();

/* Min file (c) */
!function(){function a(a){ClassifyTabFunctionality.setClassificationUtilitiesService(a)}angular.module("myapp.classification").run(a),a.$inject=["ClassificationUtilitiesService"]}();
//# sourceMappingURL=initExternalReferences.js.map
/* Min file (c) */
function ClassificationDataService(a,b){function c(){var c=a.defer(),d={};return d.tableReference="classification",d.queryReference="selectData",d.queryParametersArray=[[]],d.callback=function(a){if(void 0!==a){var d={};angular.forEach(a,function(a,b){if(null===a.parentClassificationId){if(void 0==d[a.classificationId]){var c={data:{classificationInsertId:a.classificationId,id:a.classificationId,name:a.classificationName,value:!1},subCategoryInput:"",categorieschildren:[]};d[a.classificationId]=c}}else void 0!==d[a.parentClassificationId]&&d[a.parentClassificationId].categorieschildren.push({data:{classificationInsertId:a.classificationId,id:""+a.parentClassificationId+a.classificationId,name:a.classificationName,value:!1},subCategoryInput:""})}),angular.forEach(d,function(a,c){b.sharedData.classificationData.push(a)}),c.resolve(b.sharedData)}},DataModule.executeAll(d),c.promise}function d(c){var d={};return d.deferred=a.defer(),d.tableQueryReference=["classification","insertData","query"],d.queryParametersArray=[c,null],DataModule.executeQuery(d).promise.then(function(a){console.log(a),b.sharedData.classificationData.push({data:{id:a,classificationInsertId:a,name:c,value:!1},name:"",categorieschildren:[]})}),d.deferred.promise}function e(c,d,e){var f={};return f.deferred=a.defer(),f.tableReference="classification",f.queryReference="insertData",f.queryParametersArray=[[e,d]],f.callback=function(a){var d=a.insertId;b.sharedData.classificationData[c].categorieschildren.push({data:{name:e,id:d,value:!1}}),b.sharedData.classificationData[c].subCategoryInput=""},DataModule.executeAll(f),f.deferred.promise}function f(b){var c={};return c.deferred=a.defer(),c.tableReference="classification",c.queryReference="deleteDataWhereParent",c.queryParametersArray=[[b]],c.queryType="delete",DataModule.executeAll(c),c.deferred.promise}function g(c,d){var e={};return e.deferred=a.defer(),e.tableReference="classification",e.queryReference="deleteData",e.queryParametersArray=[[c]],e.queryType="delete",e.callback=function(){b.sharedData.classificationData.splice(d,1)},DataModule.executeAll(e),e.deferred.promise}function h(c,d){var e=_.findIndex(b.sharedData.classificationData,function(a){return a.data.classificationInsertId===d}),f=_.findIndex(b.sharedData.classificationData[e].categorieschildren,function(a){return a.data.classificationInsertId===c}),g={};return g.deferred=a.defer(),g.tableReference="classification",g.queryReference="deleteData",g.queryParametersArray=[[c]],g.queryType="delete",g.callback=function(){b.sharedData.classificationData[e].categorieschildren.splice(f,1)},DataModule.executeAll(g),g.deferred.promise}var i={};return i.initClassificationData=c,i.addClassification=d,i.addSubClassification=e,i.deleteSubCategoriesWithParent=f,i.deleteCategory=g,i.deleteSubCategory=h,i}angular.module("myapp.classification").service("ClassificationDataService",ClassificationDataService),ClassificationDataService.$inject=["$q","Data"];
//# sourceMappingURL=ClassificationDataService.js.map
/* Min file (c) */
!function(){function a(a){function b(a,c){$.each(c,function(c,d){d.data.value&&(a.push(d.data.name),void 0!==d.categorieschildren&&b(d.categorieschildren,a))})}function c(a,b){$.each(a,function(a,c){var e=!1;$.each(b,function(a,b){b.data.classificationInsertId===c&&(b.data.value=!0,e=!0)}),e===!1&&$.each(b,function(a,b){d(c,b.categorieschildren)})})}function d(a,b){var c=!1;return $.each(b,function(b,e){return e.data.classificationInsertId===a?(e.data.value=!0,c=!0,!1):void 0!==e.categorieschildren&&d(a,e.categorieschildren)?(c=!0,!1):void 0}),c}function e(a,b,c,d){$.each(b,function(b,f){f.data.value&&(d.push(f.data.name),c.push([a,f.data.classificationInsertId]),void 0!==f.categorieschildren&&e(a,f.categorieschildren,c,d))})}var f={};return f.constructCategorizationTree=b,f.setClassificationValues=c,f.setSubClassificationValues=d,f.constructDiagnoseClassificationCollection=e,f}angular.module("myapp").service("ClassificationUtilitiesService",a),a.$inject=["$q"]}();
//# sourceMappingURL=ClassificationUtilitiesService.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c){a.data={},a.sharedData=b.sharedData,a.saveClassificationInfo=function(){var b=_.pluck(a.data.diagnoseItems,"diagnoseItemId"),d=_.map(a.data.diagnoseItems,function(a){return{diagnoseDetail:a}});c.deleteDiagnoseClassificationInfo(b).then(function(c){ClientTabFunctionality.insertCategorizationInfo(d,b,a.data.clientId,a.data.diagnoseId,a.data.diagnoseName,!1),ClientTabFunctionality.makeActive(),ClassifyTabFunctionality.makeInactive()})}}angular.module("myapp.classification").controller("ClassificationListController",a),a.$inject=["$scope","Data","DiagnoseClassificationDataService"]}();
//# sourceMappingURL=ClassificationListController.js.map
(function () {
  'use strict';

  angular.module('panels-module', [])
  .directive('rightpanel', RightPanelDirective);


  function RightPanelDirective () {
  	return {
	  	restrict: "E",
	  	scope: {},

	  	templateUrl: '/Components/Panels/RightPanelTemplate.html',

	  	link: function () {
	  		console.log('hi');
	  	}
  	};
  }

})();

/* Min file (c) */

//# sourceMappingURL=RightPanelDirective.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c){a.sharedData=b.sharedData}angular.module("panels-module").controller("PanelController",a),a.$inject=["$scope","Data","$compile"]}();
//# sourceMappingURL=PanelController.js.map
(function() {
  angular.module('controlsTree', ['ui.tree', 'ui' , 'db-module', 'controls-module'
                                  // , 'firebase'
                                  ], function($rootScopeProvider) {
                                        $rootScopeProvider.digestTtl(15);
                                      });
})();

/* Min file (c) */
!function(){function a(){function a(a,b){c(),e.push(d[a]+(b?b:""))}function b(){return e}function c(){e.splice(0,e.length)}var d=["Please select a container item to add the new item.","Please enter item label.","Please enter list name.","Please select section type.","Selected: ","List name already exists"],e=[],f={SELECT_CONTAINER_MSG:0,ENTER_ITEM_LABEL_MSG:1,ENTER_LIST_NAME_MSG:2,SELECT_SECTION_MSG:3,SELECTED_MSG:4,LIST_EXISTS_MSG:5};return f.setMessage=a,f.getMessageArea=b,f.resetMessage=c,f}angular.module("controlsTree").service("NotificationsService",a)}();
//# sourceMappingURL=NotificationsService.js.map
/* Min file (c) */
!function(){function a(a){var b=this,c=b.model={};c.notifications=a.getMessageArea()}angular.module("controlsTree").controller("NotificationsController",a),a.$inject=["NotificationsService"]}();
//# sourceMappingURL=NotificationsController.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c,d,e){b.all(e.getDeferedArray()).then(function(){a.serviceValues=d.getServiceValues(),c(function(){},1)}),a.updatePreview=function(){$("[data-url]").remove(),window.location.reload()}}angular.module("controlsTree").controller("PreviewControlsController",a),a.$inject=["$scope","$q","$timeout","ControlsService","DirectiveCreateService"]}();
//# sourceMappingURL=PreviewControlsController.js.map
/* Min file (c) */
!function(){function a(a){this.list=a.getServiceValues()}angular.module("controlsTree").controller("ShowJSONTreeController",a),a.$inject=["ControlsService"]}();
//# sourceMappingURL=ShowJSONTreeController.js.map
(function () {
  angular.module('controls-module', []);
}());

/* Min file (c) */
!function(){function a(){var a={},b={TEXT:0,BOOLEAN:1,SELECT:2};a.types=b;var c={},d=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:b.TEXT},{fieldName:"Value",fieldPath:"properties.value",fieldValue:"value",fieldType:b.TEXT},{fieldName:"Is Checked",fieldPath:"properties.isChecked",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:!1,fieldType:b.BOOLEAN,fieldOptions:[{display:"Disabled",value:!0},{display:"Enabled",value:!1}]}],e=[{fieldName:"Legend",fieldPath:"properties.legend",fieldValue:"",fieldType:b.TEXT},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Orientation",fieldPath:"properties.orientation",fieldValue:"vertical",fieldType:b.SELECT,fieldOptions:[{display:"horizontal",value:"horizontal"},{display:"vertical",value:"vertical"}]}],f=[{fieldName:"Text",fieldPath:"properties.text",fieldValue:"",fieldType:b.TEXT}],g=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:b.TEXT},{fieldName:"Value",fieldPath:"properties.value",fieldValue:0,fieldType:b.TEXT},{fieldName:"Min",fieldPath:"properties.min",fieldValue:0,fieldType:b.TEXT},{fieldName:"Max",fieldPath:"properties.max",fieldValue:100,fieldType:b.TEXT},{fieldName:"Step",fieldPath:"properties.step",fieldValue:1,fieldType:b.TEXT},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Highlight",fieldPath:"properties.highlight",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:!1,fieldType:b.BOOLEAN}],h=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Value 1",fieldPath:"properties.value1",fieldValue:"no",fieldType:b.TEXT},{fieldName:"Value 2",fieldPath:"properties.value",fieldValue:"yes",fieldType:b.TEXT},{fieldName:"Label 1",fieldPath:"properties.label1",fieldValue:"No",fieldType:b.TEXT},{fieldName:"Label 2",fieldPath:"properties.label2",fieldValue:"Yes",fieldType:b.TEXT},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:!1,fieldType:b.BOOLEAN}],i=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Value",fieldPath:"properties.value",fieldValue:"",fieldType:b.TEXT},{fieldName:"Type",fieldPath:"properties.type",fieldValue:"text",fieldType:b.SELECT,fieldOptions:[{display:"Text",value:"text"},{display:"Number",value:"number"},{display:"Date",value:"date"},{display:"Month",value:"month"},{display:"Week",value:"week"},{display:"Time",value:"time"},{display:"Date Time",value:"datetime-local"}]},{fieldName:"Hint",fieldPath:"properties.hint",fieldValue:"",fieldType:b.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"",fieldType:b.TEXT},{fieldName:"Native Control",fieldPath:"properties.nativecontrol",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:!1,fieldType:b.BOOLEAN}],j=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:b.TEXT}],k=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT}],l=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Heading",fieldPath:"properties.heading",fieldValue:"Collapsible Area",fieldType:b.TEXT},{fieldName:"Collapsed",fieldPath:"properties.collapsed",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Icon Position",fieldPath:"properties.iconpos",fieldValue:"left",fieldType:b.SELECT,fieldOptions:[{display:"left",value:"left"},{display:"top",value:"top"},{display:"right",value:"right"},{display:"bottom",value:"bottom"},{display:"right",value:"right"}]},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:!1,fieldType:b.BOOLEAN,fieldOptions:[{display:"Disabled",value:!0},{display:"Enabled",value:!1}]}],m=[{fieldName:"Corners",fieldPath:"properties.corners",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Enable Filter",fieldPath:"properties.filter",fieldValue:!1,fieldType:b.BOOLEAN}],n=[{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:b.TEXT}],o=[{fieldName:"Label",fieldPath:"properties.label",fieldValue:"",fieldType:b.TEXT}];return a.generate=function(a,b){var p=null;switch(a){case"Checkbox":case"RadioButton":p=angular.copy(d);break;case"CheckboxGroup":case"RadioGroup":p=angular.copy(e);break;case"Text":p=angular.copy(f);break;case"Slider":p=angular.copy(g);break;case"ToggleSwitch":p=angular.copy(h);break;case"TextInput":p=angular.copy(i);break;case"Filterable":p=angular.copy(k);break;case"Collapsible":p=angular.copy(l);break;case"CollapsibleSet":p=angular.copy(m);break;case"Tabs":p=angular.copy(j);break;case"SelectMenu":p=angular.copy(n);break;case"Option":p=angular.copy(o);break;default:return null}return _.deepMapValues({properties:b},function(b,c){if("properties"===c[0]){var d=c.join("."),e=_.pluck(p,"fieldPath").indexOf(d);-1!==e?p[e].fieldValue=b:p.push({fieldName:c[1],fieldPath:d,fieldValue:b,fieldType:a.TEXT})}return b}),angular.forEach(p,function(a,b){_.deepSet(c,a.fieldPath,a.fieldValue)}),p},a.getStructure=function(){return c},a}angular.module("controls-module").service("FieldsGeneratorService",a),a.$inject=[]}();
//# sourceMappingURL=FieldsGeneratorService.js.map
/* Min file (c) */
!function(){function a(a){function b(c,d,f){if(angular.isArray(c))angular.forEach(c,function(a,c){b(a,d,!0)});else{if(d=d?d:"children",angular.isDefined(c.properties)&&(angular.isUndefined(c.properties.isIdUpdated)||c.properties.isIdUpdated===!1)&&(c.properties.id="newItem"+e(),c.properties.isIdUpdated=!0,c.fieldsInfo)){var h=_.filter(c.fieldsInfo,function(a){return"properties.id"===a.fieldPath});h.length>0&&(h[0].fieldValue=c.properties.id)}angular.forEach(c[d],function(a,c){b(a,d,!0)})}return angular.isUndefined(f)&&a.setValue("IdentityServiceValues",g),c}function c(a,b){if(angular.isArray(a))angular.forEach(a,function(a,d){c(a,b)});else{if(b=b?b:"children",angular.isDefined(a.properties))if(a.properties.id&&-1!==h.indexOf(a.properties.id)){if(a.properties.id="newItem"+e(),a.fieldsInfo){var d=_.filter(a.fieldsInfo,function(a){return"properties.id"===a.fieldPath});d.length>0&&(d[0].fieldValue=a.properties.id)}h.push(a.properties.id)}else a.properties.id&&-1===h.indexOf(a.properties.id)&&h.push(a.properties.id);angular.forEach(a[b],function(a,d){c(a,b)})}return a}function d(a,b){if(angular.isArray(a))angular.forEach(a,function(a,c){d(a,b)});else{if(b=b?b:"children",angular.isDefined(a)&&angular.isDefined(a.properties)){var c=h.indexOf(a.properties.id);a.properties.id&&-1!==c&&h.splice(c,1)}angular.isDefined(a)&&angular.forEach(a[b],function(a,c){d(a,b)})}return a}function e(){return++g.currentItemIndex,a.setValue("IdentityServiceValues",g),g.currentItemIndex}var f={},g={currentItemIndex:0};f.updateControlsId=b;var h=[];return f.scanAndUpdateDuplicateIds=c,f.removeIdsFromCacheList=d,f.generateUniqueId=e,f}angular.module("controls-module").service("IdentityService",a),a.$inject=["DBService"]}();
//# sourceMappingURL=IdentityService.js.map
/* Min file (c) */
!function(){function a(a,b,c,d,e){function f(){d.getValue(E).then(function(a){return a&&a.error?void console.log("Error in reading Control service values from DB",a.error):(void 0===a?d.setValue(E,H).then(function(a){return a&&a.error?void console.log("Error in setting Control service values in DB",a.error):void G.resolve()}):(H.lists=a.lists,G.resolve()),$("#listNameInput").focus(),$("#listItemNameInput").focus(),void b(function(){$("#defaultPage").enhanceWithin()},100))})}function g(a,b,c){if(angular.isUndefined(b)&&(b=C),"categories"===c&&(b.type="CategoriesButtonsStems"),-1!==_.pluck(H.lists,"listName").indexOf(a))return console.log("LOG to UI: list name already exists"),-1;var d={};d.listName=a,d.controls=[b],d.section=c,H.lists.push(d),k()}function h(a){a=a?a:0,a<H.lists.length&&(H.selected.list=H.lists[a],H.selected.listIndex=a,k("selected"))}function i(a){H.selected.list.listName=a,H.lists[H.selected.listIndex].listName=a,k("selected"),k("lists")}function j(){return H.selected.list}function k(a){var b;void 0===b&&(b=E);var c=["controls","lists","selected","allListNames"];G.promise.then(function(){$.indexedDB(D).objectStore(F).get(b).then(function(d){var e=d;void 0!==a?d[a]=H[a]:angular.forEach(c,function(a,b){d[a]=H[a]}),$.indexedDB(D).objectStore(F).put(e,b).then(function(){$.indexedDB(D).objectStore(F).get(b).then(function(a){},function(a,b){console.log("Could not get back updated data")})},function(a,b){console.log("Could not update data")})},function(a,c){console.log("Could not select by key:",b)})})}function l(){return H.controls}function m(){return H.selected}function n(a){return K[a]}function o(a,b){var c=K[b];angular.isUndefined(a[c])&&(a[c]=[])}function p(a,b){var c={properties:{id:"newItem"+e.generateUniqueId()},type:b},d=K[a];return c[d]=[],c}function q(a,b,d,e){o(a,e);var f=p(e,d);switch(f.fieldsInfo=c.generate(d,f.properties),null!==f.fieldsInfo&&(f=$.extend(!0,{},c.getStructure(),f)),d){case"Checkbox":case"RadioButton":case"Slider":case"TextInput":case"Tabs":case"Option":f.properties.label=b;for(var g=0;g<f.fieldsInfo.length;g++)if("properties.label"===f.fieldsInfo[g].fieldPath){f.fieldsInfo[g].fieldValue=b;break}break;case"CheckboxGroup":case"RadioGroup":f.properties.legend=b;for(var g=0;g<f.fieldsInfo.length;g++)if("properties.legend"===f.fieldsInfo[g].fieldPath){f.fieldsInfo[g].fieldValue=b;break}break;case"Text":f.properties.text=b;for(var g=0;g<f.fieldsInfo.length;g++)if("properties.text"===f.fieldsInfo[g].fieldPath){f.fieldsInfo[g].fieldValue=b;break}break;case"Collapsible":f.properties.heading=b;for(var g=0;g<f.fieldsInfo.length;g++)if("properties.heading"===f.fieldsInfo[g].fieldPath){f.fieldsInfo[g].fieldValue=b;break}break;default:if(f.properties.label=b,null!==f.fieldsInfo&&angular.isDefined(f.fieldsInfo))for(var g=0;g<f.fieldsInfo.length;g++)if("properties.label"===f.fieldsInfo[g].fieldPath){f.fieldsInfo[g].fieldValue=b;break}}var h=K[e];return a[h].push(f),H.selected.item=f,k(),f}function r(a){return-1!==J.indexOf(a)}function s(){return H}function t(){return d.getValue(E)}function u(a){I=a}function v(){return I}function w(){if(null!==I){var a=K[H.selected.list.section],c=updateControlsId(angular.copy(I.$modelValue),a);I.$parentNodeScope.$modelValue[a].push(c),k(),b(function(){$("#defaultPage").enhanceWithin()},1)}}function x(a){var b=H.lists[a].listName;H.lists.splice(a,1),H.selected.list&&H.selected.list.listName===b&&(H.selected.list={}),k()}function y(){$.indexedDB("id-app").deleteDatabase()}function z(a,b,c){return b||(b=0),c=c?c:"children",angular.isArray(a)?angular.forEach(a,function(a,d){b=z(a,b+1,c)}):(angular.isDefined(a.properties)&&(L=a),angular.forEach(a[c],function(a,d){b=z(a,b+1,c)})),b}function A(){return L}var B={},C={type:"Content",zone:"content",properties:{id:"dummyId"},children:[],categorieschildren:[]},D="TCMD",E="ControlServiceValues",F="appStore",G=a.defer(),H={controls:[],lists:[],selected:{list:null,listIndex:-1,item:null}},I=null;B.initialize=f,f(),B.createList=g,B.setSelectedList=h,B.setSelecedListName=i,B.getSelectedList=j,B.persistData=k;var J=["Tabs","RadioGroup","CheckboxGroup","Grid","SelectMenu","Collapsible","Block","Content","Div","TabRoot","Collapsible","CollapsibleSet","CategoriesButtons","CategoriesButtonsStems"];B.getControls=l,B.getSelected=m;var K={diagnose:"children",categories:"categorieschildren",personalData:"children"};B.getChildNodeAttr=n,B.addNewSubItem=q,B.isContainer=r,B.getServiceValues=s,B.fetchServiceValues=t,B.setSelectedItemScope=u,B.getSelectedItemScope=v,B.duplicateSelectedItem=w,B.removeList=x,B.deleteDB=y;var L=null;return B.findDeepestNode=z,B.getDeepestNode=A,B}angular.module("controls-module").service("ControlsService",a),a.$inject=["$q","$timeout","FieldsGeneratorService","DBService","IdentityService"]}();
//# sourceMappingURL=ControlsService.js.map
/* Min file (c) */
!function(){function a(a,b){var c=this;c.listName="";var d=c.model={listName:"",listNameEdit:!1,section:"",selectedListIndex:null};d.serviceValues=a.getServiceValues(),c.createList=function(){return""===d.listName?void b.setMessage(b.ENTER_LIST_NAME_MSG):""===d.section?void b.setMessage(b.SELECT_SECTION_MSG):-1===a.createList(d.listName,void 0,d.section)?void b.setMessage(b.LIST_EXISTS_MSG):void 0},c.onChangeSection=function(){},c.onRemoveList=function(b){b.stopPropagation(),null!==d.selectedListIndex&&(a.removeList(d.selectedListIndex),c.selectedListName="")},c.onSelectList=function(){console.log(c.selectedListName),d.selectedListIndex=_.pluck(d.serviceValues.lists,"listName").indexOf(c.selectedListName),console.log("onSelectList",d.selectedListIndex)},c.loadList=function(){console.log(d.selectedListIndex),null!==d.selectedListIndex&&(a.setSelectedList(d.selectedListIndex),d.listName=a.getSelectedList().listName,d.listNameEdit=!0,setTimeout(function(){$("#defaultPage").enhanceWithin()},1))},c.saveListName=function(){a.setSelecedListName(d.listName)},c.cancelSaveListName=function(){d.listNameEdit=!1}}angular.module("controlsTree").controller("CreateListController",a),a.$inject=["ControlsService","NotificationsService"]}();
//# sourceMappingURL=CreateListController.js.map
/* Min file (c) */
!function(){function a(a,b,c,d){var e=this,f=e.model={};f.errorMsg="",f.itemLabel="",f.itemType="",e.add=function(){var c=a.getSelectedItemScope();if(null===c)return void b.setMessage(b.SELECT_CONTAINER_MSG);var e=c.$modelValue;if(!a.isContainer(e.type))return void b.setMessage(b.SELECT_CONTAINER_MSG);if(""===f.itemLabel)return void b.setMessage(b.ENTER_ITEM_LABEL_MSG);b.resetMessage();var g=a.getSelected().list.section;a.addNewSubItem(e,f.itemLabel,f.itemType,g),d(function(){$("#defaultPage").enhanceWithin()},1)},e.duplicate=function(){a.duplicateSelectedItem()}}angular.module("controlsTree").controller("CreateListItemController",a),a.$inject=["ControlsService","NotificationsService","$scope","$timeout"]}();
//# sourceMappingURL=CreateListItemController.js.map
/* Min file (c) */
!function(){function a(a,b){changedPathsArray=[],a.serviceValues=b.getServiceValues(),a.saveChanges=function(){angular.forEach(changedPathsArray,function(b,c){_.deepSet(a.serviceValues.selected.item,b.path,b.value)}),b.persistData(),changedPathsArray.splice(0,changedPathsArray.length-1)},a.onChangeValue=function(b,c){if(changedPathsArray.length>0){var d=(a.serviceValues.selected.item.fieldsInfo,_.pluck(changedPathsArray,"path").indexOf(b));-1===d?changedPathsArray.push({path:b,value:c}):changedPathsArray[d].value=c}else changedPathsArray.push({path:b,value:c})}}angular.module("controlsTree").controller("PropertiesController",a),a.$inject=["$scope","ControlsService"]}();
//# sourceMappingURL=PropertiesController.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b){function c(b){var c=b.split("\n"),d=0,e=[],f=null,g="children",h=[],i=0;return angular.forEach(c,function(b,c){var l=b.split(j);if(l=_.map(l,function(a){return-1===a.indexOf("\r")?a:a.replace("\r","")}),0===c)return k.listName=l[0].split(":")[1],k.section=l[1].split(":")[1],void(g=l[2].split(":")[1]);if(l.length<4)return void console.log("Invalid record: ",l);var m=parseInt(l[3]);if(m!==d&&m!==d+1&&m>d)return void console.log("Invalid record: ",l);0===m&&(e.splice(0,e.length),e.push(k.controls));for(var n=l[1],o=!1,p={};-1!==h.indexOf(n);)n+=i++,o=!0;h.push(n),p.properties={id:n,label:l[0],text:l[0],heading:l[0]};var q=l[2];if(angular.isDefined(q)&&(p.type=l[2],p.fieldsInfo=a.generate(p.type,p.properties),null!==p.fieldsInfo&&(p=$.extend(!0,{},a.getStructure(),p))),l.length>4){p.fieldsInfo=[];for(var c=4;c<l.length;c++){var r=l[c].split(":"),s=r[0],t=parseInt(r[1]),u=r[2];if(isNaN(t)&&console.log("Invalid Type: ",t),-1!==s.indexOf("properties.")){t===a.types.BOOLEAN&&(u="true"===u?!0:!1);var v=s.split(".")[1];"id"===v&&o&&(u=n);var w={fieldName:v,fieldPath:s,fieldValue:u,fieldType:t};if(t===a.types.SELECT&&r.length>3){w.fieldOptions=[];for(var x=3;x<r.length;x++){var y=r[x].split("~");w.fieldOptions.push({display:y[0],value:y[1]})}}p.fieldsInfo.push(w),_.deepSet(p,s,u)}else console.log("Not property")}}if(m===d)if(0===m)k.controls.push(p);else{var z=e.length-1,A=e[z];A.push(p)}else if(m===d+1)angular.isUndefined(f[g])&&(f[g]=[],e.push(f[g])),f[g].push(p);else if(d>m){var B=d-m;if(e.splice(e.length-B,B),0===m)k.controls.push(p);else{var z=e.length-1,A=e[z];A.push(p)}}f=p,d=m}),k}function d(a){var b=JSON.parse(a);return k.listName=b.listName,k.section=b.section,k.controls=b.children[0].children,k}function e(a){k.controls=[];var e=b.defer(),f=".js-import-file",g=$(f)[0].files[0];if(void 0===g)return void console.log("No File selected");var h=new FileReader;return h.onload=function(b){"csv"===a?c(b.target.result):d(b.target.result),e.resolve(k)},h.readAsText(g),e.promise}function f(b,c,d){var e=[];return angular.forEach(b,function(b){var g=[];g.push(b.properties?b.properties.label:b.type),g.push(b.properties?b.properties.id:"placeholderId"),g.push(b.type),g.push(c),angular.forEach(b.fieldsInfo,function(b,c){var d=b.fieldPath+":"+b.fieldType+":"+b.fieldValue;b.fieldType===a.types.SELECT&&b.fieldOptions.length>0&&angular.forEach(b.fieldOptions,function(a,b){d+=":"+a.display+"~"+a.value}),g.push(d)}),g[g.length-1]+="\r\n",e.push(g.join(j)),angular.isDefined(b[d])&&Array.prototype.push.apply(e,f(b[d],c+1,d))}),e}function g(a){var b={type:"Design",listName:a.listName,section:a.section,zone:null,children:[{type:"Page",properties:{id:"page1"},children:a.controls}]};return b}function h(a,b,c){if("csv"===c){var d=[];return d.push("ListName:"+a.listName+j),d.push("ListSection:"+a.section+j),d.push("ChildAttribute:"+b),d[d.length-1]+="\r\n",Array.prototype.push.apply(d,f(a.controls,0,b)),d.join("")}return"json"===c?JSON.stringify(g(a)):void 0}var i={},j=";",k={controls:[],listName:"",section:""};return i.importData=e,i.processExportJSONData=g,i.exportData=h,i}angular.module("controlsTree").service("ImportExportService",a),a.$inject=["FieldsGeneratorService","$q"]}();
//# sourceMappingURL=ImportExportService.js.map
/* Min file (c) */
!function(){function a(a,b){var c=this;c.listName="";var d=c.model={fileFormat:"csv"};c.importAction=function(){var c=b.importData(d.fileFormat);void 0!==c&&c.then(function(b){b.controls.length>0&&a.createList(b.listName,b.controls[0],b.section)})},c.exportAction=function(){var e=a.getSelected().list;if(console.log("listToExport: ",e),null===e||null===e.controls)return void NS.setMessage(NS.SELECT_CONTAINER_MSG);var f=a.getChildNodeAttr(e.section);c.exportData=b.exportData(e,f,d.fileFormat);var g={"Export.csv":{data:"\n",type:"text/csv"},"Export.json":{type:"text/json"}},h="Export.csv";"json"===d.fileFormat&&(h="Export.json"),g[h].data=c.exportData;var i=new File([g[h].data],h,{type:g[h].type,lastModified:Date.now()}),j=URL.createObjectURL(i,{oneTimeOnly:!0}),k=document.createElement("a");k.href=j,k.download=h,k.textContent=h,$("#filesForDownload").html(k)}}angular.module("controlsTree").controller("ImportExportController",a),a.$inject=["ControlsService","ImportExportService"]}();
//# sourceMappingURL=ImportExportController.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c,d,e,f){var g=a.model={};g.controlsServiceValues=d.getServiceValues(),a.options={dragStart:function(a){},remove:function(a){console.log("remove"),d.persistData()},dropped:function(a){console.log("dropped"),g.selectedItemScope=a.source.nodeScope,g.controlsServiceValues.selected.item=a.source.nodeScope.$modelValue,d.setSelectedItemScope(g.selectedItemScope),d.persistData(),f.setMessage(f.SELECTED_MSG,a.source.nodeScope.$modelValue.type),c(function(){$("#defaultPage").enhanceWithin()},1)}},a.toggle=function(a){a.toggle(),d.persistData()},a.isContainer=function(a){return d.isContainer(a)}}angular.module("controlsTree").controller("ControlsTreeController",a),a.$inject=["$scope","$q","$timeout","ControlsService","DirectiveCreateService","NotificationsService"]}();
//# sourceMappingURL=ControlsTreeController.js.map