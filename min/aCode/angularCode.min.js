(function () {
  'use strict';
  angular.module('myapp', ['myapp.diagnose', 'myapp.classification']);
})();
(function(){angular.module("myapp").run(a);a.$inject=["ClassificationUtilitiesService","SharedDataService","Data"];function a(d,c,b){FunctionalityModule.setSharedData(b.sharedData);FunctionalityModule.setSharedDataService(c)}})();(function(){angular.module("myapp").factory("Data",[a]).service("SharedDataService",b);function a(){return{RadioGroupCount:0,SliderCount:0,SelectMenuCount:0,TextLabel:"",SelectedControls:{},ClassificationDataAdded:[],tabHierarchyHeadings:"",sharedData:{controls:{},classificationData:[],ControlCategoriesInfo:[],RecentlySelectedControlDetails:undefined,diagnoseItems:undefined,isControlsValuesBeingSet:false}}}b.$inject=["Data"];function b(d){var c={};c.getControls=function(){return d.sharedData.controls};c.setControls=function(e){d.sharedData.controls=e};c.getClassificationData=function(){return d.sharedData.classificationData};c.setClassificationData=function(e){d.sharedData.classificationData=e};c.getClassificationData=function(){return d.sharedData.classificationData};c.setClassificationData=function(e){d.sharedData.classificationData=e};c.getControlCategoriesInfo=function(){return d.sharedData.ControlCategoriesInfo};c.setControlCategoriesInfo=function(e){d.sharedData.ControlCategoriesInfo=e};c.getRecentlySelectedControlDetails=function(){return d.sharedData.RecentlySelectedControlDetails};c.setRecentlySelectedControlDetails=function(e){d.sharedData.RecentlySelectedControlDetails=e};c.getDiagnoseItems=function(){return d.sharedData.diagnoseItems};c.setDiagnoseItems=function(e){d.sharedData.diagnoseItems=e};c.getIsControlsValuesBeingSet=function(){return d.sharedData.isControlsValuesBeingSet};c.setIsControlsValuesBeingSet=function(e){d.sharedData.isControlsValuesBeingSet=e};return c}})();(function(){angular.module("myapp").controller("ConfigureClassificationController",a);a.$inject=["$scope","Data","ClassificationDataService"];function a(b,c,d){b.sharedData=c.sharedData;b.showRestartSection=false;d.initClassificationData().then(function(e){});b.restartApplication=function(){$("[data-url]").remove();window.location.reload()};b.addClassification=function(){if(b.inputClassificationName===undefined||b.inputClassificationName===""){return}d.addClassification(b.inputClassificationName).then(function(){b.inputClassificationName="";FunctionalityModule.enhancePage();$(".js-classify-diagnose-button").removeClass("ui-disabled")});b.showRestartSection=true};b.addSubClassification=function(g,f){var e=b.sharedData.classificationData[f].subCategoryInput;if(e===undefined||e===""){return}d.addSubClassification(f,g,e).then(function(){});b.showRestartSection=true};b.deleteClassification=function(f,e){d.deleteSubCategoriesWithParent(f).then(function(){d.deleteCategory(f).then(function(){c.sharedData.classificationData.splice(e,1)})});b.showRestartSection=true};b.deleteSubCategory=function(e,f){d.deleteSubCategory(e,f).then(function(){b.showRestartSection=true})}}})();(function(){angular.module("myapp").controller("PanelController",a);a.$inject=["$scope","Data","$compile"];function a(b,d,c){b.sharedData=d.sharedData}})();(function(){angular.module("myapp").controller("DiagnoseController",a);a.$inject=["$scope","$compile","SharedDataService","Data"];function a(b,d,e,c){b.SelectedControls=c.SelectedControls;b.sharedData=c.sharedData;b.ClassificationDataAdded=c.ClassificationDataAdded;b.$watch("sharedData.controls",function(g,f){if(g===f){return}var h=d('<r controls="sharedData.controls"></r>')(b);var i=angular.element(document.getElementById("ControlsContainer"));i.append(h)});b.$watch("sharedData.classificationData",function(g,f){angular.forEach(c.ClassificationDataAdded,function(j,k){var h=angular.copy(c.sharedData.classificationData);updateId(j.controlId,j.uniqueProperty,h);j.classification.categorieschildren=h});setTimeout(function(){$("#defaultPage").enhanceWithin()},1)},true);b.saveDiagnoseItemsData=function(){DiagnoseTabFunctionality.saveDiagnoseData(c)}}})();function updateId(c,a,b){angular.forEach(b,function(d,e){d.data.id=c+a+d.data.id;d.data.diagnoseControlId=c;if(d.categorieschildren){updateId(c,a,d.categorieschildren)}})}function updateParentInfo(){};(function(){function b(c){return["$compile","$templateCache","Data",function(f,d,e){return{restrict:"E",scope:{controls:"=",groupname:"=",parent:"=",uniqueProperty:"@",tabHierarchyHeadings:"@"},compile:function(h,g){return{pre:function(k,l,j){if(c==="r"&&k.uniqueProperty!==undefined){e.uniqueProperty=k.uniqueProperty}if(angular.isDefined(k.tabHierarchyHeadings)){e.tabHierarchyHeadings=k.tabHierarchyHeadings}if(k.controls===undefined||k.controls.type===undefined){return}var i=d.get(k.controls.type);if(k.controls.type==="TabRoot"){i=d.get("Tabs")}if(k.controls.type==="RadioGroup"){processRadioGroup(k,e)}if(k.controls.type==="CheckboxGroup"){processCheckboxGroup(k)}if(k.controls.type==="RadioButton"){k.controls.uniqueProperty=e.uniqueProperty}if(k.controls.type==="Checkbox"){processCheckbox(k,e,l)}if(k.controls.type==="TextInput"){processTextInput(k,e)}if(k.controls.type==="Text"){e.TextLabel=k.controls.properties.text}if(k.controls.type==="ToggleSwitch"){processToggleSwitch(k,e)}if(k.controls.type==="Slider"){processSlider(k,e,l)}if(k.controls.type==="Grid"){processGrid(k)}if(k.controls.type==="SelectMenu"){processSelectMenu(k,e,l)}var m=angular.element(i);f(m)(k);l.append(m)},post:function(j,k,i){setTimeout(function(){if(j.controls.type==="Tabs"||j.controls.type==="TabRoot"){if(j.controls.type==="TabRoot"){$("#defaultPage").enhanceWithin()}$(k).tabs();$(k).data("tabsInitialized",true)}},1);if(j.controls.type==="Slider"){j.$on("$destroy",function(l){k.off("change")})}}}}}}]}var a=function(e,c,d){var f={};f.restrict="E";f.scope={categorieschildren:"=",templateName:"@"};f.compile=function(h,g){return{pre:function(m,j,l,n){var k="",i="";i="CategoriesButtons";if(m.templateName!==undefined){i=m.templateName}k=c.get(i);var o=angular.element(k);e(o)(m);j.append(o)},post:function(k,i,j){setTimeout(function(){$('[data-type="horizontal"]').controlgroup({type:"horizontal"});$(i).find(".categories-tabs").tabs().data("tabs-initialized","true")},1)}}};return f};angular.module("myapp").directive("r",b("r")).directive("content",b("content")).directive("radiogroup",b("radiogroup")).directive("checkboxgroup",b("checkboxgroup")).directive("tabs",b("tabs")).directive("categories",["$compile","$templateCache","Data",a]).directive("enhanceUi",[function(){return{restrict:"A",link:function(e,d,c){var g=e.$eval(c.enhanceUi),f=g.event,h=g.condition;$("#defaultPage").enhanceWithin();$(d.parent()).trigger("updatelayout").listview("refresh")}}}])})();function processRadioGroup(c,b){b.RadioGroupCount+=1;c.controls.groupname="RadioGroup"+b.RadioGroupCount;c.controls.labelPrefix=b.tabHierarchyHeadings;c.controls.name=c.controls.properties.legend;if(c.controls.properties.id===undefined){c.controls.properties.id="RadioGroup"+b.RadioGroupCount}c.$watch("controls.value",function(e,d){if(e!==undefined){var f={controlId:c.controls.properties.id,label:c.controls.labelPrefix+c.controls.properties.legend,type:c.controls.type,valueLabel:c.controls.value,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=f;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=f;openPanel()}else{delete b.SelectedControls[c.controls.properties.id];c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}},true);var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}function processCheckboxGroup(a){a.controls.name=a.controls.properties.legend;angular.forEach(a.controls.children,function(c,b){c.name=a.controls.name})}function processCheckbox(c,b,d){c.controls.uniqueProperty=b.uniqueProperty;c.controls.properties.id=b.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a;c.$watch("controls.value",function(f,e){if(f===true&&(e===false||e===undefined)){var g={controlId:c.controls.properties.id,label:c.controls.labelPrefix+(c.controls.name?c.controls.name:""),type:c.controls.type,valueLabel:c.controls.properties.label,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=g;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=g;if(!b.sharedData.isControlsValuesBeingSet){openPanel()}}else{if(f===false&&e===true){if(b.SelectedControls[c.controls.properties.id]!==undefined){delete b.SelectedControls[c.controls.properties.id]}c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}}})}function processSlider(c,b,d){c.controls.value=0;c.controls.uniqueProperty=b.uniqueProperty;c.controls.properties.id=b.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;d.on("change",'input[type="number"]',function(){c.controls.value=parseInt($(this).val());c.$digest()});var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a;c.$watch("controls.value",function(f,e){if(f!==0&&f!==e){var g={controlId:c.controls.properties.id,label:c.controls.labelPrefix+c.controls.properties.label,type:c.controls.type,valueLabel:c.controls.value,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=g;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=g;openPanel()}else{if(e!==0&&f===0){if(b.SelectedControls[c.controls.properties.id]!==undefined){delete b.SelectedControls[c.controls.properties.id]}c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}}})}function processTextInput(c,b){c.controls.uniqueProperty=b.uniqueProperty;c.controls.properties.id=b.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;c.$watch("controls.value",function(e,d){if(e!==undefined&&e!==""){var f={controlId:c.controls.properties.id,label:c.controls.labelPrefix+c.controls.properties.label,type:c.controls.type,valueLabel:c.controls.value,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=f;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=f;openPanel()}else{if(b.SelectedControls[c.controls.properties.id]!==undefined){delete b.SelectedControls[c.controls.properties.id]}c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}});var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}function processToggleSwitch(c,b){b.SliderCount+=1;if(c.controls.properties.id===undefined){c.controls.properties.id="ToggleSwitch"+b.SliderCount}c.controls.properties.label=b.TextLabel;b.TextLabel="";c.controls.uniqueProperty=b.uniqueProperty;c.controls.properties.id=b.uniqueProperty+c.controls.properties.id;c.controls.labelPrefix=b.tabHierarchyHeadings;c.controls.value="false";c.$watch("controls.value",function(e,d){if(e==="true"&&d==="false"){var f={controlId:c.controls.properties.id,label:c.controls.labelPrefix+c.controls.properties.label,type:c.controls.type,valueLabel:c.controls.properties.label1,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=f;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=f;openPanel()}else{if(e==="false"){delete b.SelectedControls[c.controls.properties.id];c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}}});var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}function processGrid(a){var c=a.controls;var b=c.properties&&c.properties.rows?c.properties.rows:1;if(c.properties===undefined){c.properties={}}c.properties.uiClass=GridBuilder.getGridClass(c.children,b);GridBuilder.setGridControlLabels(c)}function processSelectMenu(c,b,d){b.SelectMenuCount+=1;if(c.controls.properties.id===undefined){c.controls.properties.id="SelectMenu"+b.SelectMenuCount}c.controls.labelPrefix=b.tabHierarchyHeadings;if(c.controls.properties.options.children){c.controls.previousValue=c.controls.value=c.controls.defaultValue=c.controls.properties.options.children[0].value;c.controls.previousValueLabel=c.controls.valueLabel=c.controls.defaultValueLabel=c.controls.properties.options.children[0].text}d.on("change","select.control",function(h){var g=$(this).val();var f=$('option[value="'+g+'"]:selected',$(this)).text();if(g!==c.controls.previousValue&&g!==c.controls.defaultValue||f!==c.controls.previousValueLabel&&f!==c.controls.defaultValueLabel){c.controls.previousValue=c.controls.value;c.controls.previousValueLabel=c.controls.valueLabel;c.controls.value=g;c.controls.valueLabel=f;var i={controlId:c.controls.properties.id,label:c.controls.labelPrefix+c.controls.properties.options.label,type:c.controls.type,valueLabel:c.controls.valueLabel,labelPrefix:c.controls.labelPrefix,value:c.controls.value,categoriesInfo:c.controls.categorieschildren};b.SelectedControls[c.controls.properties.id]=i;c.controls.showCategory=true;b.sharedData.RecentlySelectedControlDetails=i;openPanel()}else{delete b.SelectedControls[c.controls.properties.id];c.controls.showCategory=false;b.sharedData.RecentlySelectedControlDetails=undefined}c.$digest()});var a=angular.copy(b.sharedData.classificationData);updateId(c.controls.properties.id,b.uniqueProperty,a);b.ClassificationDataAdded.push({controlId:c.controls.properties.id,uniqueProperty:b.uniqueProperty,classification:a});c.controls.categorieschildren=a}function openPanel(){$("#leftpanel").panel("open");$("#closePanelButton").removeClass("ui-btn-active")};(function () {
  'use strict';
  angular.module('myapp.diagnose', []);
})();
(function(){angular.module("myapp.diagnose").run(a);a.$inject=["DiagnoseDataService","DiagnoseClassificationDataService","DiagnoseClassificationUtilitiesService"];function a(d,c,b){DiagnoseTabFunctionality.setDiagnoseDataService(d);DiagnoseTabFunctionality.setDiagnoseClassificationDataService(c);DiagnoseTabFunctionality.setDiagnoseClassificationUtilitiesService(b)}})();angular.module("myapp.diagnose").service("DiagnoseDataService",DiagnoseDataService);DiagnoseDataService.$inject=["$q"];function DiagnoseDataService(e){var d={};d.resetControls=c;function c(i){angular.forEach(i.children,function(k,j){if(angular.isDefined(k.value)&&k.value===true){console.log(k);k.value=false}if(angular.isDefined(k.categorieschildren)){f(k.categorieschildren)}if(angular.isDefined(k.children)){c(k)}})}function f(i){angular.forEach(i,function(k,j){console.log(k);if(angular.isDefined(k.data)&&k.data.value===true){k.data.value=false}if(angular.isDefined(k.categorieschildren)){console.log(k);f(k.categorieschildren)}})}d.setControlValue=h;function h(i,j){angular.forEach(i.children,function(l,k){if(angular.isDefined(l.properties)&&angular.isDefined(l.properties.id)&&l.properties.id===j.controlId){if(j.controlValue==="true"||j.controlValue===true){l.value=true;l.categorieschildren=j.categorieschildren}}if(angular.isDefined(l.children)){h(l,j)}})}d.fetchDiagnoseData=g;function g(j){var i={};i.deferred=e.defer();i.tableReference="diagnoseData";i.queryReference="selectDataWhere";i.queryParametersArray=[[j]];DataModule.executeAll(i);return i.deferred.promise}d.insertDiagnoseDataBatch=b;function b(j){var i=e.defer();var k={};k.tableQueryReference=["diagnoseData","insertData","insert"];k.queryParametersArray=j;k.deferred=i;k.batchExecution=true;DataModule.executeQuery(k);return i.promise}d.deleteDiagnoseData=a;function a(i,k){var j={};j.deferred=e.defer();j.tableReference="diagnoseData";j.queryReference="deleteData";j.queryParametersArray=[[i]];j.queryType="delete";DataModule.executeAll(j);return j.deferred.promise}return d};(function(){angular.module("myapp.diagnose").service("DiagnoseClassificationDataService",a);a.$inject=["$q"];function a(c){var b={};b.fetchDiagnoseClassificationData=d;function d(h){var i=c.defer();var g={};g.tableReference="diagnoseClassification";g.queryReference="selectDataWhere";g.queryParametersArray=[[h]];g.deferred=i;DataModule.executeAll(g);return i.promise}b.insertDiagnoseClassificationData=e;function e(g){var i=c.defer();var h={};h.tableReference="diagnoseClassification";h.queryReference="insertData";h.queryParametersArray=g;h.deferred=i;h.queryType="insert";DataModule.executeAll(h);return i.promise}b.deleteDiagnoseClassificationInfo=f;function f(i){var h=c.defer();var g={};g.deferred=h;g.tableReference="diagnoseClassification";g.queryReference="deleteDataWhere";g.queryParametersArray=_.map(i,function(j){return[j]});g.queryType="delete";g.callback=function(){};g.deferred=h;DataModule.executeAll(g);return h.promise}return b}})();(function(){angular.module("myapp.diagnose").service("DiagnoseClassificationUtilitiesService",a);a.$inject=["$q","DiagnoseClassificationDataService","ClassificationUtilitiesService","DiagnoseDataService","SharedDataService"];function a(c,d,i,h,f){var b={};b.setDiagnoseItemsWithDBValues=g;function g(j,k){var l=c.defer();var m=[];angular.forEach(j,function(q,p){var o=q.id||q.diagnoseItemId;if(angular.isUndefined(q.categorieschildren)){q.categorieschildren=angular.copy(f.getClassificationData())}updateId(q.controlId,k,q.categorieschildren);var n=d.fetchDiagnoseClassificationData(o);m.push(n);n.then(function(s){var r=_.pluck(s,"classificationId");i.setClassificationValues(r,q.categorieschildren)})});$.when.apply(null,m).done(function(){l.resolve({})});return l.promise}b.deleteDiagnoseDataAndClassification=e;function e(k){var j=c.defer();h.fetchDiagnoseData(k).then(function(l){var m=_.pluck(l,"id");d.deleteDiagnoseClassificationInfo(m).then(function(){h.deleteDiagnoseData(k).then(function(){j.resolve()})})});return j.promise}return b}})();(function(){angular.module("myapp.classification",[])})();(function () {
  'use strict';
  angular.module('myapp.classification', []);
})();
(function(){angular.module("myapp.classification").run(a);a.$inject=["ClassificationUtilitiesService"];function a(b){FunctionalityModule.setClassificationUtilitiesService(b)}})();angular.module("myapp.classification").service("ClassificationDataService",ClassificationDataService);ClassificationDataService.$inject=["$q","Data"];function ClassificationDataService(c,g){var d={};d.initClassificationData=h;function h(){var j=c.defer();var k={};k.tableReference="classification";k.queryReference="selectData";k.queryParametersArray=[[]];k.callback=function(l){if(l===undefined){return}var m={};angular.forEach(l,function(o,n){if(o.parentClassificationId===null){if(m[o.classificationId]==undefined){var p={data:{classificationInsertId:o.classificationId,id:o.classificationId,name:o.classificationName,value:false},subCategoryInput:"",categorieschildren:[]};m[o.classificationId]=p}}else{if(m[o.parentClassificationId]!==undefined){m[o.parentClassificationId].categorieschildren.push({data:{classificationInsertId:o.classificationId,id:""+o.parentClassificationId+o.classificationId,name:o.classificationName,value:false},subCategoryInput:""})}}});angular.forEach(m,function(n,o){g.sharedData.classificationData.push(n)});j.resolve(m)};DataModule.executeAll(k);return j.promise}d.addClassification=f;function f(j){var k={};k.deferred=c.defer();k.tableReference="classification";k.queryReference="insertData";k.queryParametersArray=[[j,null]];k.callback=function(l){g.sharedData.classificationData.push({data:{id:l.insertId,name:j,value:false},name:"",categorieschildren:[]})};DataModule.executeAll(k);return k.deferred.promise}d.addSubClassification=i;function i(k,m,j){var l={};l.deferred=c.defer();l.tableReference="classification";l.queryReference="insertData";l.queryParametersArray=[[j,m]];l.callback=function(n){var o=n.insertId;g.sharedData.classificationData[k].categorieschildren.push({data:{name:j,id:o,value:false}});g.sharedData.classificationData[k].subCategoryInput=""};DataModule.executeAll(l);return l.deferred.promise}d.deleteSubCategoriesWithParent=b;function b(k){var j={};j.deferred=c.defer();j.tableReference="classification";j.queryReference="deleteDataWhereParent";j.queryParametersArray=[[k]];j.queryType="delete";DataModule.executeAll(j);return j.deferred.promise}d.deleteCategory=a;function a(k){var j={};j.deferred=c.defer();j.tableReference="classification";j.queryReference="deleteData";j.queryParametersArray=[[k]];j.queryType="delete";DataModule.executeAll(j);return j.deferred.promise}d.deleteSubCategory=e;function e(m,n){var k=_.findIndex(g.sharedData.classificationData,function(o){return o.data.classificationInsertId===n});var j=_.findIndex(g.sharedData.classificationData[k].categorieschildren,function(o){return o.data.classificationInsertId===m});var l={};l.deferred=c.defer();l.tableReference="classification";l.queryReference="deleteData";l.queryParametersArray=[[m]];l.queryType="delete";l.callback=function(){g.sharedData.classificationData[k].categorieschildren.splice(j,1)};DataModule.executeAll(l);return l.deferred.promise}return d};(function(){angular.module("myapp").service("ClassificationUtilitiesService",a);a.$inject=["$q"];function a(e){var c={};c.constructCategorizationTree=g;function g(i,h){$.each(h,function(j,l){if(l.data.value){i.push(l.data.name);if(l.categorieschildren!==undefined){g(l.categorieschildren,i)}}})}c.setClassificationValues=f;function f(h,i){$.each(h,function(j,l){var k=false;$.each(i,function(m,n){if(n.data.classificationInsertId===l){n.data.value=true;k=true}});if(k===false){$.each(i,function(m,n){b(l,n.categorieschildren)})}})}c.setSubClassificationValues=b;function b(j,i){var h=false;$.each(i,function(l,m){if(m.data.classificationInsertId===j){m.data.value=true;h=true;return false}else{if(m.categorieschildren!==undefined){if(b(j,m.categorieschildren)){h=true;return false}}}});return h}c.constructDiagnoseClassificationCollection=d;function d(i,k,h,j){$.each(k,function(l,m){if(m.data.value){j.push(m.data.name);h.push([i,m.data.classificationInsertId]);if(m.categorieschildren!==undefined){d(i,m.categorieschildren,h,j)}}})}return c}})();(function(){angular.module("myapp.classification").controller("ClassificationListController",a);a.$inject=["$scope","Data","DiagnoseClassificationDataService"];function a(b,d,c){b.data={};b.sharedData=d.sharedData;b.saveClassificationInfo=function(){var f=_.pluck(b.data.diagnoseItems,"diagnoseItemId");var e=_.map(b.data.diagnoseItems,function(g){return{diagnoseDetail:g}});c.deleteDiagnoseClassificationInfo(f).then(function(g){ClientTabFunctionality.insertCategorizationInfo(e,f,b.data.clientId,b.data.diagnoseId,b.data.diagnoseName,false,d.sharedData.classificationData);ClientTabFunctionality.makeActive();ClassifyTabFunctionality.makeInactive()})}}})();(function(){angular.module("myapp.classification").controller("ClassificationListController",a);a.$inject=["$scope","Data","DiagnoseClassificationDataService"];function a(b,d,c){b.data={};b.sharedData=d.sharedData;b.saveClassificationInfo=function(){var f=_.pluck(b.data.diagnoseItems,"diagnoseItemId");var e=_.map(b.data.diagnoseItems,function(g){return{diagnoseDetail:g}});c.deleteDiagnoseClassificationInfo(f).then(function(g){ClientTabFunctionality.insertCategorizationInfo(e,f,b.data.clientId,b.data.diagnoseId,b.data.diagnoseName,false,d.sharedData.classificationData);ClientTabFunctionality.makeActive();ClassifyTabFunctionality.makeInactive()})}}})();
